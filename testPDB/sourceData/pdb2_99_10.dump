(register-procedure "gimp-image-set-colormap"
  "Sets the entries in the image's colormap."
  "This procedure sets the entries in the specified image's colormap. The number of entries is specified by the 'num-bytes' parameter and corresponds to the number of INT8 triples that must be contained in the 'colormap' array. The actual number of colors in the transmitted colormap is 'num-bytes' / 3."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "num-bytes"
      "gint"
      "Number of bytes in the colormap array (0 <= num-bytes <= 768)"
    )
    (
      "colormap"
      "GimpUint8Array"
      "The new colormap values"
    )
  )
  (
  )
)
(register-procedure "gimp-context-get-transform-direction"
  "Get the transform direction."
  "This procedure returns the transform direction. The return value is an integer which corresponds to the values listed in the argument description."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2010"
  "Internal GIMP procedure"
  (
  )
  (
    (
      "transform-direction"
      "GimpTransformDirection"
      "The transform direction @{ TRANSFORM-FORWARD (0), TRANSFORM-BACKWARD (1) @}"
    )
  )
)
(register-procedure "file-raw-placeholder-mef-load"
  "Load files in the MEF raw format via placeholder"
  "This plug-in loads files in Mamiya's raw MEF format by calling placeholder."
  "Tobias Ellinghaus"
  "Tobias Ellinghaus"
  "2016"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "file"
      "GFile"
      "The file to load"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "Output image"
    )
  )
)
(register-procedure "gimp-image-scale"
  "Scale the image using the default interpolation method."
  "This procedure scales the image so that its new width and height are equal to the supplied parameters. All layers and channels within the image are scaled according to the specified parameters; this includes the image selection mask. The interpolation method used can be set with 'gimp-context-set-interpolation'."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "new-width"
      "gint"
      "New image width (1 <= new-width <= 524288)"
    )
    (
      "new-height"
      "gint"
      "New image height (1 <= new-height <= 524288)"
    )
  )
  (
  )
)
(register-procedure "gimp-vectors-bezier-stroke-cubicto"
  "Extends a bezier stroke with a cubic bezier spline."
  "Extends a bezier stroke with a cubic bezier spline."
  "Simon Budig"
  "Simon Budig"
  "2005"
  "Internal GIMP procedure"
  (
    (
      "vectors"
      "GimpVectors"
      "The vectors object"
    )
    (
      "stroke-id"
      "gint"
      "The stroke ID"
    )
    (
      "x0"
      "gdouble"
      "The x-coordinate of the first control point"
    )
    (
      "y0"
      "gdouble"
      "The y-coordinate of the first control point"
    )
    (
      "x1"
      "gdouble"
      "The x-coordinate of the second control point"
    )
    (
      "y1"
      "gdouble"
      "The y-coordinate of the second control point"
    )
    (
      "x2"
      "gdouble"
      "The x-coordinate of the end point"
    )
    (
      "y2"
      "gdouble"
      "The y-coordinate of the end point"
    )
  )
  (
  )
)
(register-procedure "plug-in-blinds"
  "Simulate an image painted on window blinds"
  "More here later"
  "Andy Thomas"
  "Andy Thomas"
  "1997"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The input image"
    )
    (
      "num-drawables"
      "gint"
      "Number of input drawables (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The input drawables"
    )
    (
      "angle-displacement"
      "gint"
      "Angle of Displacement (0 <= angle-displacement <= 360)"
    )
    (
      "num-segments"
      "gint"
      "Number of segments in blinds (1 <= num-segments <= 1024)"
    )
    (
      "orientation"
      "GimpOrientationType"
      "The orientation @{ ORIENTATION-HORIZONTAL (0), ORIENTATION-VERTICAL (1), ORIENTATION-UNKNOWN (2) @}"
    )
    (
      "bg-transparent"
      "gboolean"
      "Background transparent (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "gimp-floating-sel-remove"
  "Remove the specified floating selection from its associated drawable."
  "This procedure removes the floating selection completely, without any side effects. The associated drawable is then set to active."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "floating-sel"
      "GimpLayer"
      "The floating selection"
    )
  )
  (
  )
)
(register-procedure "plug-in-gfig"
  "Create geometric shapes"
  "Draw Vector Graphics and paint them onto your images. Gfig allows you to draw many types of objects including Lines, Circles, Ellipses, Curves, Polygons, pointed stars, Bezier curves, and Spirals. Objects can be painted using Brushes or other tools or filled using colors or patterns. Gfig objects can also be used to create selections."
  "Andy Thomas"
  "Andy Thomas"
  "1997"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The input image"
    )
    (
      "num-drawables"
      "gint"
      "Number of input drawables (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The input drawables"
    )
  )
  (
  )
)
(register-procedure "gimp-image-pick-correlate-layer"
  "Find the layer visible at the specified coordinates."
  "This procedure finds the layer which is visible at the specified coordinates. Layers which do not qualify are those whose extents do not pass within the specified coordinates, or which are transparent at the specified coordinates. This procedure will return -1 if no layer is found."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "x"
      "gint"
      "The x coordinate for the pick"
    )
    (
      "y"
      "gint"
      "The y coordinate for the pick"
    )
  )
  (
    (
      "layer"
      "GimpLayer"
      "The layer found at the specified coordinates"
    )
  )
)
(register-procedure "gimp-palettes-popup"
  "Invokes the Gimp palette selection."
  "This procedure opens the palette selection dialog."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2002"
  "Internal GIMP procedure"
  (
    (
      "palette-callback"
      "gchararray"
      "The callback PDB proc to call when palette selection is made"
    )
    (
      "popup-title"
      "gchararray"
      "Title of the palette selection dialog"
    )
    (
      "initial-palette"
      "gchararray"
      "The name of the palette to set as the first selected"
    )
  )
  (
  )
)
(register-procedure "gimp-pdb-set-proc-attribution"
  "Set the attribution for a plug-in procedure."
  "This procedure sets the attribution for the given procedure."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2019"
  "Internal GIMP procedure"
  (
    (
      "procedure-name"
      "gchararray"
      "The procedure for which to install the menu path"
    )
    (
      "authors"
      "gchararray"
      "Authors of the procedure"
    )
    (
      "copyright"
      "gchararray"
      "The copyright"
    )
    (
      "date"
      "gchararray"
      "Copyright date"
    )
  )
  (
  )
)
(register-procedure "gimp-unit-get-factor"
  "Returns the factor of the unit."
  "This procedure returns the unit's factor which indicates how many units make up an inch. Note that asking for the factor of \"pixels\" will produce an error."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "1999"
  "Internal GIMP procedure"
  (
    (
      "unit-id"
      "GimpUnit"
      "The unit's integer ID"
    )
  )
  (
    (
      "factor"
      "gdouble"
      "The unit's factor"
    )
  )
)
(register-procedure "gimp-gradient-segment-set-right-color"
  "Sets the right endpoint color of the specified segment"
  "This procedure sets the right endpoint color of the specified segment of the specified gradient."
  "Shlomi Fish <shlomif@@iglu.org.il>"
  "Shlomi Fish"
  "2003"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The gradient name"
    )
    (
      "segment"
      "gint"
      "The index of the segment within the gradient (segment >= 0)"
    )
    (
      "color"
      "GimpRGB"
      "The color to set"
    )
    (
      "opacity"
      "gdouble"
      "The opacity to set for the endpoint (0 <= opacity <= 100)"
    )
  )
  (
  )
)
(register-procedure "script-fu-make-brush-elliptical"
  "Create an elliptical brush"
  ""
  "Seth Burgess <sjburges@@ou.edu>"
  "Seth Burgess"
  "1997"
  "Temporary Procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "string"
      "gchararray"
      "Name"
    )
    (
      "adjustment"
      "gdouble"
      "Width"
    )
    (
      "adjustment-2"
      "gdouble"
      "Height"
    )
    (
      "adjustment-3"
      "gdouble"
      "Spacing"
    )
  )
  (
  )
)
(register-procedure "file-raw-placeholder-raf-load"
  "Load files in the RAF raw format via placeholder"
  "This plug-in loads files in Fujifilm's raw RAF format by calling placeholder."
  "Tobias Ellinghaus"
  "Tobias Ellinghaus"
  "2016"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "file"
      "GFile"
      "The file to load"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "Output image"
    )
  )
)
(register-procedure "script-fu-testUndefinedFunc"
  "Test undefined func"
  ""
  "lkk"
  ""
  "Jan. 2021"
  "Temporary Procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "SF-IMAGE"
    )
    (
      "drawable"
      "GimpDrawable"
      "SF-DRAWABLE"
    )
  )
  (
  )
)
(register-procedure "python-fu-console"
  "Interactive GIMP Python interpreter"
  "Type in commands and see results"
  "James Henstridge"
  "James Henstridge"
  "1997-1999"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "Read-write integer property. @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
  )
  (
  )
)
(register-procedure "gimp-context-list-paint-methods"
  "Lists the available paint methods."
  "This procedure lists the names of the available paint methods. Any of the results can be used for 'gimp-context-set-paint-method'."
  "Simon Budig"
  "Simon Budig"
  "2007"
  "Internal GIMP procedure"
  (
  )
  (
    (
      "paint-methods"
      "GStrv"
      "The names of the available paint methods"
    )
  )
)
(register-procedure "script-fu-selection-to-image"
  "Convert a selection to an image"
  ""
  "Adrian Likins <adrian@@gimp.org>"
  "Adrian Likins"
  "10/07/97"
  "Temporary Procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Image"
    )
    (
      "drawable"
      "GimpDrawable"
      "Drawable"
    )
  )
  (
  )
)
(register-procedure "gimp-image-get-item-position"
  "Returns the position of the item in its level of its item tree."
  "This procedure determines the position of the specified item in its level in its item tree in the image. If the item doesn't exist in the image, or the item is not part of an item tree, an error is returned."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2010"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "item"
      "GimpItem"
      "The item"
    )
  )
  (
    (
      "position"
      "gint"
      "The position of the item in its level in the item tree"
    )
  )
)
(register-procedure "gimp-gradient-segment-range-move"
  "Move the position of an entire segment range by a delta."
  "This function moves the position of an entire segment range by a delta. The actual delta (which is returned) will be limited by the control points of the neighboring segments."
  "Shlomi Fish <shlomif@@iglu.org.il>"
  "Shlomi Fish"
  "2003"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The gradient name"
    )
    (
      "start-segment"
      "gint"
      "The index of the first segment to operate on (start-segment >= 0)"
    )
    (
      "end-segment"
      "gint"
      "The index of the last segment to operate on. If negative, the selection will extend to the end of the string."
    )
    (
      "delta"
      "gdouble"
      "The delta to move the segment range (-1 <= delta <= 1)"
    )
    (
      "control-compress"
      "gboolean"
      "Whether or not to compress the neighboring segments (TRUE or FALSE)"
    )
  )
  (
    (
      "final-delta"
      "gdouble"
      "The final delta by which the range moved"
    )
  )
)
(register-procedure "plug-in-borderaverage"
  "Set foreground to the average color of the image border"
  ""
  "Philipp Klaus"
  "Internet Access AG"
  "1998"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The input image"
    )
    (
      "num-drawables"
      "gint"
      "Number of input drawables (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The input drawables"
    )
    (
      "thickness"
      "gint"
      "Border size to take in count (thickness >= 0)"
    )
    (
      "bucket-exponent"
      "gint"
      "Bits for bucket size (default=4: 16 Levels) (bucket-exponent >= 0)"
    )
  )
  (
    (
      "borderaverage"
      "GimpRGB"
      "The average color of the specified border."
    )
  )
)
(register-procedure "script-fu-test-sphere"
  "Simple script to test and show the usage of the new Script-Fu API extensions."
  ""
  "Spencer Kimball, Sven Neumann"
  "Spencer Kimball"
  "1996, 1998"
  "Temporary Procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "adjustment"
      "gdouble"
      "Radius (in pixels)"
    )
    (
      "adjustment-2"
      "gdouble"
      "Lighting (degrees)"
    )
    (
      "toggle"
      "gboolean"
      "Shadow (TRUE or FALSE)"
    )
    (
      "color"
      "GimpRGB"
      "Background color"
    )
    (
      "color-2"
      "GimpRGB"
      "Sphere color"
    )
    (
      "brush"
      "gchararray"
      "Brush"
    )
    (
      "string"
      "gchararray"
      "Text"
    )
    (
      "text"
      "gchararray"
      "Multi-line text"
    )
    (
      "pattern"
      "gchararray"
      "Pattern"
    )
    (
      "gradient"
      "gchararray"
      "Gradient"
    )
    (
      "toggle-2"
      "gboolean"
      "Gradient reverse (TRUE or FALSE)"
    )
    (
      "font"
      "gchararray"
      "Font"
    )
    (
      "adjustment-3"
      "gdouble"
      "Font size (pixels)"
    )
    (
      "palette"
      "gchararray"
      "Palette"
    )
    (
      "filename"
      "gchararray"
      "Environment map"
    )
    (
      "option"
      "gint"
      "Orientation"
    )
    (
      "enum"
      "gint"
      "Interpolation"
    )
    (
      "dirname"
      "gchararray"
      "Output directory"
    )
    (
      "image"
      "GimpImage"
      "Image"
    )
    (
      "layer"
      "GimpLayer"
      "Layer"
    )
    (
      "channel"
      "GimpChannel"
      "Channel"
    )
    (
      "drawable"
      "GimpDrawable"
      "Drawable"
    )
    (
      "vectors"
      "GimpVectors"
      "Vectors"
    )
  )
  (
  )
)
(register-procedure "gimp-context-set-interpolation"
  "Set the interpolation type."
  "This procedure modifies the interpolation setting.

This setting affects affects the following procedures: 'gimp-item-transform-flip', 'gimp-item-transform-perspective', 'gimp-item-transform-rotate', 'gimp-item-transform-scale', 'gimp-item-transform-shear', 'gimp-item-transform-2d', 'gimp-item-transform-matrix', 'gimp-image-scale', 'gimp-layer-scale'."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2010"
  "Internal GIMP procedure"
  (
    (
      "interpolation"
      "GimpInterpolationType"
      "The interpolation type @{ INTERPOLATION-NONE (0), INTERPOLATION-LINEAR (1), INTERPOLATION-CUBIC (2), INTERPOLATION-NOHALO (3), INTERPOLATION-LOHALO (4) @}"
    )
  )
  (
  )
)
(register-procedure "gimp-image-undo-group-end"
  "Finish a group undo."
  "This function must be called once for each 'gimp-image-undo-group-start' call that is made."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1997"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The ID of the image in which to close an undo group"
    )
  )
  (
  )
)
(register-procedure "gimp-pdb-set-proc-documentation"
  "Set the documentation for a plug-in procedure."
  "This procedure sets the documentation for the given procedure."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2019"
  "Internal GIMP procedure"
  (
    (
      "procedure-name"
      "gchararray"
      "The procedure for which to install the menu path"
    )
    (
      "blurb"
      "gchararray"
      "A short blurb"
    )
    (
      "help"
      "gchararray"
      "Detailed procedure help"
    )
    (
      "help-id"
      "gchararray"
      "The procedure help_id"
    )
  )
  (
  )
)
(register-procedure "file-xmc-load"
  "Loads files of X11 Mouse Cursor file format"
  "This plug-in loads X11 Mouse Cursor (XMC) files."
  "Takeshi Matsuyama <tksmashiw@@gmail.com>"
  "Takeshi Matsuyama"
  "26 May 2009"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "file"
      "GFile"
      "The file to load"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "Output image"
    )
  )
)
(register-procedure "gimp-item-get-lock-content"
  "Get the 'lock content' state of the specified item."
  "This procedure returns the specified item's lock content state."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2009"
  "Internal GIMP procedure"
  (
    (
      "item"
      "GimpItem"
      "The item"
    )
  )
  (
    (
      "lock-content"
      "gboolean"
      "Whether the item's contents are locked (TRUE or FALSE)"
    )
  )
)
(register-procedure "gimp-item-get-name"
  "Get the name of the specified item."
  "This procedure returns the specified item's name."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "item"
      "GimpItem"
      "The item"
    )
  )
  (
    (
      "name"
      "gchararray"
      "The item name"
    )
  )
)
(register-procedure "gimp-gradient-get-uniform-samples"
  "Sample the specified in uniform parts."
  "This procedure samples the active gradient in the specified number of uniform parts. It returns a list of floating-point values which correspond to the RGBA values for each sample. The minimum number of samples to take is 2, in which case the returned colors will correspond to the @{ 0.0, 1.0 @} positions in the gradient. For example, if the number of samples is 3, the procedure will return the colors at positions @{ 0.0, 0.5, 1.0 @}."
  "Federico Mena Quintero"
  "Federico Mena Quintero"
  "1997"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The gradient name"
    )
    (
      "num-samples"
      "gint"
      "The number of samples to take (num-samples >= 2)"
    )
    (
      "reverse"
      "gboolean"
      "Use the reverse gradient (TRUE or FALSE)"
    )
  )
  (
    (
      "num-color-samples"
      "gint"
      "Length of the color_samples array (4 * num_samples) (num-color-samples >= 0)"
    )
    (
      "color-samples"
      "GimpFloatArray"
      "Color samples: @{ R1, G1, B1, A1, ..., Rn, Gn, Bn, An @}"
    )
  )
)
(register-procedure "gimp-image-flatten"
  "Flatten all visible layers into a single layer. Discard all invisible layers."
  "This procedure combines the visible layers in a manner analogous to merging with the CLIP_TO_IMAGE merge type. Non-visible layers are discarded, and the resulting image is stripped of its alpha channel."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
  )
  (
    (
      "layer"
      "GimpLayer"
      "The resulting layer"
    )
  )
)
(register-procedure "gimp-plug-in-menu-branch-register"
  "Register a sub-menu."
  "This procedure installs a sub-menu which does not belong to any procedure. The menu-name should be the untranslated menu label. GIMP will look up the translation in the textdomain registered for the plug-in."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2005"
  "Internal GIMP procedure"
  (
    (
      "menu-path"
      "gchararray"
      "The sub-menu's menu path"
    )
    (
      "menu-name"
      "gchararray"
      "The name of the sub-menu"
    )
  )
  (
  )
)
(register-procedure "gimp-selection-translate"
  "Translate the selection by the specified offsets."
  "This procedure actually translates the selection for the specified image by the specified offsets. Regions that are translated from beyond the bounds of the image are set to empty. Valid regions of the selection which are translated beyond the bounds of the image because of this call are lost."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "offx"
      "gint"
      "x offset for translation"
    )
    (
      "offy"
      "gint"
      "y offset for translation"
    )
  )
  (
  )
)
(register-procedure "plug-in-qbist"
  "Generate a huge variety of abstract patterns"
  "This Plug-in is based on an article by Jörn Loviscach (appeared in c't 10/95, page 326). It generates modern art pictures from a random genetic formula."
  "Jörn Loviscach, Jens Ch. Restemeier"
  "Jörn Loviscach, Jens Ch. Restemeier"
  "January 2001, 1.12"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The input image"
    )
    (
      "num-drawables"
      "gint"
      "Number of input drawables (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The input drawables"
    )
  )
  (
  )
)
(register-procedure "gimp-brush-get-spacing"
  "Gets the brush spacing."
  "This procedure returns the spacing setting for the specified brush. The return value is an integer between 0 and 1000 which represents percentage of the maximum of the width and height of the mask."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2004"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The brush name"
    )
  )
  (
    (
      "spacing"
      "gint"
      "The brush spacing (0 <= spacing <= 1000)"
    )
  )
)
(register-procedure "gimp-gradient-segment-range-flip"
  "Flip the segment range"
  "This function flips a segment range."
  "Shlomi Fish <shlomif@@iglu.org.il>"
  "Shlomi Fish"
  "2003"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The gradient name"
    )
    (
      "start-segment"
      "gint"
      "The index of the first segment to operate on (start-segment >= 0)"
    )
    (
      "end-segment"
      "gint"
      "The index of the last segment to operate on. If negative, the selection will extend to the end of the string."
    )
  )
  (
  )
)
(register-procedure "gimp-vectors-bezier-stroke-new-ellipse"
  "Adds a bezier stroke describing an ellipse the vectors object."
  "Adds a bezier stroke describing an ellipse the vectors object."
  "Simon Budig"
  "Simon Budig"
  "2005"
  "Internal GIMP procedure"
  (
    (
      "vectors"
      "GimpVectors"
      "The vectors object"
    )
    (
      "x0"
      "gdouble"
      "The x-coordinate of the center"
    )
    (
      "y0"
      "gdouble"
      "The y-coordinate of the center"
    )
    (
      "radius-x"
      "gdouble"
      "The radius in x direction"
    )
    (
      "radius-y"
      "gdouble"
      "The radius in y direction"
    )
    (
      "angle"
      "gdouble"
      "The angle the x-axis of the ellipse (radians, counterclockwise)"
    )
  )
  (
    (
      "stroke-id"
      "gint"
      "The resulting stroke"
    )
  )
)
(register-procedure "gimp-item-id-is-valid"
  "Returns TRUE if the item ID is valid."
  "This procedure checks if the given item ID is valid and refers to an existing item."
  "Sven Neumann <sven@@gimp.org>"
  "Sven Neumann"
  "2007"
  "Internal GIMP procedure"
  (
    (
      "item-id"
      "gint"
      "The item ID to check"
    )
  )
  (
    (
      "valid"
      "gboolean"
      "Whether the item ID is valid (TRUE or FALSE)"
    )
  )
)
(register-procedure "plug-in-cml-explorer"
  "Create abstract Coupled-Map Lattice patterns"
  "Make an image of Coupled-Map Lattice (CML). CML is a kind of Cellula Automata on continuous (value) domain. In GIMP_RUN_NONINTERACTIVE, the name of a parameter file is passed as the 4th arg. You can control CML_explorer via parameter file."
  "Shuji Narazaki (narazaki@@InetQ.or.jp); http://www.inetq.or.jp/~narazaki/TheGIMP/"
  "Shuji Narazaki"
  "1997"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The input image"
    )
    (
      "num-drawables"
      "gint"
      "Number of input drawables (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The input drawables"
    )
    (
      "parameter-uri"
      "gchararray"
      "The local file:// URI of parameter file. CML_explorer makes an image with its settings."
    )
  )
  (
  )
)
(register-procedure "gimp-pdb-set-file-proc-thumbnail-loader"
  "Associates a thumbnail loader with a file load procedure."
  "Some file formats allow for embedded thumbnails, other file formats contain a scalable image or provide the image data in different resolutions. A file plug-in for such a format may register a special procedure that allows GIMP to load a thumbnail preview of the image. This procedure is then associated with the standard load procedure using this function."
  "Sven Neumann <sven@@gimp.org>"
  "Sven Neumann"
  "2004"
  "Internal GIMP procedure"
  (
    (
      "load-proc"
      "gchararray"
      "The name of the file load procedure."
    )
    (
      "thumb-proc"
      "gchararray"
      "The name of the thumbnail load procedure."
    )
  )
  (
  )
)
(register-procedure "gimp-text-layer-set-antialias"
  "Enable/disable anti-aliasing in a text layer."
  "This procedure enables or disables anti-aliasing of the text in a text layer."
  "Marcus Heese <heese@@cip.ifi.lmu.de>"
  "Marcus Heese"
  "2008"
  "Internal GIMP procedure"
  (
    (
      "layer"
      "GimpLayer"
      "The text layer"
    )
    (
      "antialias"
      "gboolean"
      "Enable/disable antialiasing of the text (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "file-dds-load"
  "Loads files in DDS image format"
  "Loads files in DDS image format"
  "Shawn Kirst"
  "Shawn Kirst"
  "2008"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "file"
      "GFile"
      "The file to load"
    )
    (
      "load-mipmaps"
      "gboolean"
      "Load mipmaps if present (TRUE or FALSE)"
    )
    (
      "decode-images"
      "gboolean"
      "Decode YCoCg/AExp images when detected (TRUE or FALSE)"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "Output image"
    )
  )
)
(register-procedure "gimp-help-using-photography"
  "Bookmark to the user manual"
  ""
  "Roman Joost <romanofski@@gimp.org>"
  "Roman Joost <romanofski@@gimp.org>"
  "2006"
  "Temporary Procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
  )
  (
  )
)
(register-procedure "gimp-image-convert-set-dither-matrix"
  "Set dither matrix for conversion to indexed"
  "This procedure sets the dither matrix used when converting images to INDEXED mode with positional dithering."
  "David Gowers"
  "David Gowers"
  "2006"
  "Internal GIMP procedure"
  (
    (
      "width"
      "gint"
      "Width of the matrix (0 to reset to default matrix)"
    )
    (
      "height"
      "gint"
      "Height of the matrix (0 to reset to default matrix)"
    )
    (
      "matrix-length"
      "gint"
      "The length of 'matrix' (1 <= matrix-length <= 1024)"
    )
    (
      "matrix"
      "GimpUint8Array"
      "The matrix -- all values must be >= 1"
    )
  )
  (
  )
)
(register-procedure "gimp-context-get-gradient-blend-color-space"
  "Get the gradient blend color space."
  "Get the gradient blend color space for paint tools and the gradient tool."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2018"
  "Internal GIMP procedure"
  (
  )
  (
    (
      "blend-color-space"
      "GimpGradientBlendColorSpace"
      "Color blend space @{ GRADIENT-BLEND-RGB-PERCEPTUAL (0), GRADIENT-BLEND-RGB-LINEAR (1), GRADIENT-BLEND-CIE-LAB (2) @}"
    )
  )
)
(register-procedure "gimp-edit-copy-visible"
  "Copy from the projection."
  "If there is a selection in the image, then the area specified by the selection is copied from the projection and placed in an internal GIMP edit buffer. It can subsequently be retrieved using the 'gimp-edit-paste' command. If there is no selection, then the projection's contents will be stored in the internal GIMP edit buffer."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2004"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image to copy from"
    )
  )
  (
    (
      "non-empty"
      "gboolean"
      "TRUE if the copy was successful (TRUE or FALSE)"
    )
  )
)
(register-procedure "file-sgi-load"
  "Loads files in SGI image file format"
  "This plug-in loads SGI image files."
  "Michael Sweet <mike@@easysw.com>"
  "Copyright 1997-1998 by Michael Sweet"
  "1.1.1 - 17 May 1998"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "file"
      "GFile"
      "The file to load"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "Output image"
    )
  )
)
(register-procedure "gimp-brush-set-spikes"
  "Sets the number of spikes for a generated brush."
  "This procedure sets the number of spikes for a generated brush. If called for any other type of brush, it does not succeed."
  "Bill Skaggs <weskaggs@@primate.ucdavis.edu>"
  "Bill Skaggs"
  "2004"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The brush name"
    )
    (
      "spikes-in"
      "gint"
      "The desired number of spikes"
    )
  )
  (
    (
      "spikes-out"
      "gint"
      "The number of spikes actually assigned"
    )
  )
)
(register-procedure "file-gif-save"
  "exports files in Compuserve GIF file format"
  "Export a file in Compuserve GIF format, with possible animation, transparency, and comment. To export an animation, operate on a multi-layer file and give the 'as-animation' parameter as TRUE. The plug-in will interpret <50% alpha as transparent. When run non-interactively, the value for the comment is taken from the 'gimp-comment' parasite.  "
  "Spencer Kimball, Peter Mattis, Adam Moss, David Koblas"
  "Spencer Kimball, Peter Mattis, Adam Moss, David Koblas"
  "1995-1997"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The image to save"
    )
    (
      "num-drawables"
      "gint"
      "Number of drawables to be saved (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The drawables to save"
    )
    (
      "file"
      "GFile"
      "The file to save to"
    )
    (
      "interlace"
      "gboolean"
      "Try to export as interlaced (TRUE or FALSE)"
    )
    (
      "loop"
      "gboolean"
      "(animated gif) Loop infinitely (TRUE or FALSE)"
    )
    (
      "number-of-repeats"
      "gint"
      "(animated gif) Number of repeats (Ignored if 'loop' is TRUE) (0 <= number-of-repeats <= 32766)"
    )
    (
      "default-delay"
      "gint"
      "(animated gif) Default delay between frames in milliseconds (default-delay >= 0)"
    )
    (
      "default-dispose"
      "gint"
      "(animated gif) Default disposal type (0=`don't care`, 1=combine, 2=replace) (0 <= default-dispose <= 2)"
    )
    (
      "as-animation"
      "gboolean"
      "Export GIF as animation? (TRUE or FALSE)"
    )
    (
      "force-delay"
      "gboolean"
      "(animated gif) Use specified delay for all frames (TRUE or FALSE)"
    )
    (
      "force-dispose"
      "gboolean"
      "(animated gif) Use specified disposal for all frames (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "file-pcx-save"
  "Exports files in ZSoft PCX file format"
  "FIXME: write help for pcx_save"
  "Francisco Bustamante & Nick Lamb"
  "Nick Lamb <njl195@@zepler.org.uk>"
  "January 1997"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The image to save"
    )
    (
      "num-drawables"
      "gint"
      "Number of drawables to be saved (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The drawables to save"
    )
    (
      "file"
      "GFile"
      "The file to save to"
    )
  )
  (
  )
)
(register-procedure "script-fu-fuzzy-border"
  "Add a jagged, fuzzy border to an image"
  ""
  "Chris Gutteridge"
  "1998, Chris Gutteridge / ECS dept, University of Southampton, England."
  "3rd April 1998"
  "Temporary Procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "drawable"
      "GimpDrawable"
      "The layer"
    )
    (
      "color"
      "GimpRGB"
      "Color"
    )
    (
      "adjustment"
      "gdouble"
      "Border size"
    )
    (
      "toggle"
      "gboolean"
      "Blur border (TRUE or FALSE)"
    )
    (
      "adjustment-2"
      "gdouble"
      "Granularity (1 is Low)"
    )
    (
      "toggle-2"
      "gboolean"
      "Add shadow (TRUE or FALSE)"
    )
    (
      "adjustment-3"
      "gdouble"
      "Shadow weight (%)"
    )
    (
      "toggle-3"
      "gboolean"
      "Work on copy (TRUE or FALSE)"
    )
    (
      "toggle-4"
      "gboolean"
      "Flatten image (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "gimp-display-id-is-valid"
  "Returns TRUE if the display ID is valid."
  "This procedure checks if the given display ID is valid and refers to an existing display."
  "Sven Neumann <sven@@gimp.org>"
  "Sven Neumann"
  "2007"
  "Internal GIMP procedure"
  (
    (
      "display-id"
      "gint"
      "The display ID to check"
    )
  )
  (
    (
      "valid"
      "gboolean"
      "Whether the display ID is valid (TRUE or FALSE)"
    )
  )
)
(register-procedure "gimp-image-reorder-item"
  "Reorder the specified item within its item tree"
  "This procedure reorders the specified item within its item tree."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2010"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "item"
      "GimpItem"
      "The item to reorder"
    )
    (
      "parent"
      "GimpItem"
      "The new parent item"
    )
    (
      "position"
      "gint"
      "The new position of the item"
    )
  )
  (
  )
)
(register-procedure "file-csource-save"
  "Dump image data in RGB(A) format for C source"
  "CSource cannot be run non-interactively."
  "Tim Janik"
  "Tim Janik"
  "1999"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The image to save"
    )
    (
      "num-drawables"
      "gint"
      "Number of drawables to be saved (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The drawables to save"
    )
    (
      "file"
      "GFile"
      "The file to save to"
    )
  )
  (
  )
)
(register-procedure "gimp-brush-set-spacing"
  "Sets the brush spacing."
  "This procedure modifies the spacing setting for the specified brush. The value should be a integer between 0 and 1000."
  "Bill Skaggs <weskaggs@@primate.ucdavis.edu>"
  "Bill Skaggs"
  "2004"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The brush name"
    )
    (
      "spacing"
      "gint"
      "The brush spacing (0 <= spacing <= 1000)"
    )
  )
  (
  )
)
(register-procedure "gimp-image-pick-color"
  "Determine the color at the given coordinates"
  "This tool determines the color at the specified coordinates. The returned color is an RGB triplet even for grayscale and indexed drawables. If the coordinates lie outside of the extents of the specified drawables, then an error is returned. All drawables must belong to the image and be of the same type.
If only one drawable is given and it has an alpha channel, the algorithm examines the alpha value of the drawable at the coordinates. If the alpha value is completely transparent (0), then an error is returned. With several drawables specified, the composite image with only these drawables is used.
If the sample_merged parameter is TRUE, the data of the composite image will be used instead of that for the specified drawables. This is equivalent to sampling for colors after merging all visible layers. In the case of a merged sampling, the supplied drawables are ignored."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "num-drawables"
      "gint"
      "The number of drawables (num-drawables >= 1)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The drawables to pick from"
    )
    (
      "x"
      "gdouble"
      "x coordinate of upper-left corner of rectangle"
    )
    (
      "y"
      "gdouble"
      "y coordinate of upper-left corner of rectangle"
    )
    (
      "sample-merged"
      "gboolean"
      "Use the composite image, not the drawables (TRUE or FALSE)"
    )
    (
      "sample-average"
      "gboolean"
      "Average the color of all the pixels in a specified radius (TRUE or FALSE)"
    )
    (
      "average-radius"
      "gdouble"
      "The radius of pixels to average (average-radius >= 0)"
    )
  )
  (
    (
      "color"
      "GimpRGB"
      "The return color"
    )
  )
)
(register-procedure "gimp-image-set-selected-layers"
  "Sets the specified image's selected layers."
  "The layers are set as the selected layers in the image. Any previous selected layers or channels are unselected. An exception is a previously existing floating selection, in which case this procedure will return an execution error."
  "Jehan"
  "Jehan"
  "2021"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "num-layers"
      "gint"
      "The number of layers to select (num-layers >= 0)"
    )
    (
      "layers"
      "GimpObjectArray"
      "The list of layers to select"
    )
  )
  (
  )
)
(register-procedure "gimp-layer-get-composite-mode"
  "Get the composite mode of the specified layer."
  "This procedure returns the specified layer's composite mode."
  "Ell"
  "Ell"
  "2017"
  "Internal GIMP procedure"
  (
    (
      "layer"
      "GimpLayer"
      "The layer"
    )
  )
  (
    (
      "composite-mode"
      "GimpLayerCompositeMode"
      "The layer composite mode @{ LAYER-COMPOSITE-AUTO (0), LAYER-COMPOSITE-UNION (1), LAYER-COMPOSITE-CLIP-TO-BACKDROP (2), LAYER-COMPOSITE-CLIP-TO-LAYER (3), LAYER-COMPOSITE-INTERSECTION (4) @}"
    )
  )
)
(register-procedure "gimp-vectors-stroke-reverse"
  "reverses the specified stroke."
  "Reverses the specified stroke."
  "Simon Budig"
  "Simon Budig"
  "2020"
  "Internal GIMP procedure"
  (
    (
      "vectors"
      "GimpVectors"
      "The vectors object"
    )
    (
      "stroke-id"
      "gint"
      "The stroke ID"
    )
  )
  (
  )
)
(register-procedure "file-raw-placeholder-erf-load"
  "Load files in the ERF raw format via placeholder"
  "This plug-in loads files in Epson's raw ERF format by calling placeholder."
  "Tobias Ellinghaus"
  "Tobias Ellinghaus"
  "2016"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "file"
      "GFile"
      "The file to load"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "Output image"
    )
  )
)
(register-procedure "gimp-context-set-ink-angle"
  "Set ink angle in degrees."
  "Set the ink angle in degrees for ink tool."
  "Ed Swartz"
  "Ed Swartz"
  "2012"
  "Internal GIMP procedure"
  (
    (
      "angle"
      "gdouble"
      "ink angle in degrees (-90 <= angle <= 90)"
    )
  )
  (
  )
)
(register-procedure "plug-in-pixelize"
  "Simplify image into an array of solid-colored squares"
  "Pixelize the contents of the specified drawable with specified pixelizing width."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1997"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
    (
      "pixel-width"
      "gint"
      "Pixel width (the decrease in resolution) (1 <= pixel-width <= 524288)"
    )
  )
  (
  )
)
(register-procedure "gimp-context-get-line-width-unit"
  "Get the line width unit setting."
  "This procedure returns the line width unit setting."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2015"
  "Internal GIMP procedure"
  (
  )
  (
    (
      "line-width-unit"
      "GimpUnit"
      "The line width unit setting"
    )
  )
)
(register-procedure "gimp-item-id-is-layer-mask"
  "Returns whether the item ID is a layer mask."
  "This procedure returns TRUE if the specified item ID is a layer mask."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "item-id"
      "gint"
      "The item"
    )
  )
  (
    (
      "layer-mask"
      "gboolean"
      "TRUE if the item ID is a layer mask, FALSE otherwise (TRUE or FALSE)"
    )
  )
)
(register-procedure "gimp-channel-new-from-component"
  "Create a new channel from a color component"
  "This procedure creates a new channel from a color component.
The new channel still needs to be added to the image, as this is not automatic. Add the new channel with 'gimp-image-insert-channel'. Other attributes, such as channel visibility, should be set with explicit procedure calls."
  "Shlomi Fish <shlomif@@iglu.org.il>"
  "Shlomi Fish"
  "2005"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image to which to add the channel"
    )
    (
      "component"
      "GimpChannelType"
      "The image component @{ CHANNEL-RED (0), CHANNEL-GREEN (1), CHANNEL-BLUE (2), CHANNEL-GRAY (3), CHANNEL-INDEXED (4), CHANNEL-ALPHA (5) @}"
    )
    (
      "name"
      "gchararray"
      "The channel name"
    )
  )
  (
    (
      "channel"
      "GimpChannel"
      "The newly created channel"
    )
  )
)
(register-procedure "gimp-patterns-close-popup"
  "Close the pattern selection dialog."
  "This procedure closes an opened pattern selection dialog."
  "Andy Thomas"
  "Andy Thomas"
  "1998"
  "Internal GIMP procedure"
  (
    (
      "pattern-callback"
      "gchararray"
      "The name of the callback registered for this pop-up"
    )
  )
  (
  )
)
(register-procedure "gimp-clone-default"
  "Clone from the source to the dest drawable using the current brush"
  "This tool clones (copies) from the source drawable starting at the specified source coordinates to the dest drawable. This function performs exactly the same as the 'gimp-clone' function except that the tools arguments are obtained from the clones option dialog. It this dialog has not been activated then the dialogs default values will be used."
  "Andy Thomas"
  "Andy Thomas"
  "1999"
  "Internal GIMP procedure"
  (
    (
      "drawable"
      "GimpDrawable"
      "The affected drawable"
    )
    (
      "num-strokes"
      "gint"
      "Number of stroke control points (count each coordinate as 2 points) (num-strokes >= 2)"
    )
    (
      "strokes"
      "GimpFloatArray"
      "Array of stroke coordinates: @{ s1.x, s1.y, s2.x, s2.y, ..., sn.x, sn.y @}"
    )
  )
  (
  )
)
(register-procedure "file-pfm-save"
  "Exports files in the PFM file format"
  "PFM export handles all images without transparency."
  "Mukund Sivaraman"
  "Mukund Sivaraman"
  "2015"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The image to save"
    )
    (
      "num-drawables"
      "gint"
      "Number of drawables to be saved (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The drawables to save"
    )
    (
      "file"
      "GFile"
      "The file to save to"
    )
  )
  (
  )
)
(register-procedure "gimp-text-layer-resize"
  "Resize the box of a text layer."
  "This procedure changes the width and height of a text layer while keeping it as a text layer and not converting it to a bitmap like 'gimp-layer-resize' would do."
  "Barak Itkin <lightningismyname@@gmail.com>"
  "Barak Itkin"
  "2009"
  "Internal GIMP procedure"
  (
    (
      "layer"
      "GimpLayer"
      "The text layer"
    )
    (
      "width"
      "gdouble"
      "The new box width in pixels (0 <= width <= 524288)"
    )
    (
      "height"
      "gdouble"
      "The new box height in pixels (0 <= height <= 524288)"
    )
  )
  (
  )
)
(register-procedure "gimp-gradient-new"
  "Creates a new gradient"
  "This procedure creates a new, uninitialized gradient"
  "Shlomi Fish <shlomif@@iglu.org.il>"
  "Shlomi Fish"
  "2003"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The requested name of the new gradient"
    )
  )
  (
    (
      "actual-name"
      "gchararray"
      "The actual new gradient name"
    )
  )
)
(register-procedure "gimp-gradient-segment-get-blending-function"
  "Retrieves the gradient segment's blending function"
  "This procedure retrieves the blending function of the segment at the specified gradient name and segment index."
  "Shlomi Fish <shlomif@@iglu.org.il>"
  "Shlomi Fish"
  "2003"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The gradient name"
    )
    (
      "segment"
      "gint"
      "The index of the segment within the gradient (segment >= 0)"
    )
  )
  (
    (
      "blend-func"
      "GimpGradientSegmentType"
      "The blending function of the segment @{ GRADIENT-SEGMENT-LINEAR (0), GRADIENT-SEGMENT-CURVED (1), GRADIENT-SEGMENT-SINE (2), GRADIENT-SEGMENT-SPHERE-INCREASING (3), GRADIENT-SEGMENT-SPHERE-DECREASING (4), GRADIENT-SEGMENT-STEP (5) @}"
    )
  )
)
(register-procedure "file-save-rgbe"
  "Saves files in the RGBE file format"
  "This procedure exports images in the RGBE format, using gegl:rgbe-save"
  ""
  ""
  ""
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The image to save"
    )
    (
      "num-drawables"
      "gint"
      "Number of drawables to be saved (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The drawables to save"
    )
    (
      "file"
      "GFile"
      "The file to save to"
    )
  )
  (
  )
)
(register-procedure "gimp-image-get-channels"
  "Returns the list of channels contained in the specified image."
  "This procedure returns the list of channels contained in the specified image. This does not include the selection mask, or layer masks. The order is from topmost to bottommost. Note that \"channels\" are custom channels and do not include the image's color components."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
  )
  (
    (
      "num-channels"
      "gint"
      "The number of channels contained in the image (num-channels >= 0)"
    )
    (
      "channels"
      "GimpObjectArray"
      "The list of channels contained in the image."
    )
  )
)
(register-procedure "gimp-brush-duplicate"
  "Duplicates a brush."
  "This procedure creates an identical brush by a different name."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2004"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The brush name"
    )
  )
  (
    (
      "copy-name"
      "gchararray"
      "The name of the brush's copy."
    )
  )
)
(register-procedure "gimp-image-resize-to-layers"
  "Resize the image to fit all layers."
  "This procedure resizes the image to the bounding box of all layers of the image. All channels within the image are resized to the new size; this includes the image selection mask. All layers within the image are repositioned to the new image area."
  "Simon Budig"
  "Simon Budig"
  "2004"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
  )
  (
  )
)
(register-procedure "file-bmp-save"
  "Saves files in Windows BMP file format"
  "Saves files in Windows BMP file format"
  "Alexander Schulz"
  "Alexander Schulz"
  "1997"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The image to save"
    )
    (
      "num-drawables"
      "gint"
      "Number of drawables to be saved (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The drawables to save"
    )
    (
      "file"
      "GFile"
      "The file to save to"
    )
    (
      "use-rle"
      "gboolean"
      "Use run-lengh-encoding compression (only valid for 4 and 8-bit indexed images) (TRUE or FALSE)"
    )
    (
      "write-color-space"
      "gboolean"
      "Whether or not to write BITMAPV5HEADER color space data (TRUE or FALSE)"
    )
    (
      "rgb-format"
      "gint"
      "Export format for RGB images (0=RGB_565, 1=RGBA_5551, 2=RGB_555, 3=RGB_888, 4=RGBA_8888, 5=RGBX_8888) (0 <= rgb-format <= 5)"
    )
  )
  (
  )
)
(register-procedure "gimp-image-select-color"
  "Create a selection by selecting all pixels (in the specified drawable) with the same (or similar) color to that specified."
  "This tool creates a selection over the specified image. A by-color selection is determined by the supplied color under the constraints of the current context settings. Essentially, all pixels (in the drawable) that have color sufficiently close to the specified color (as determined by the threshold and criterion context values) are included in the selection. To select transparent regions, the color specified must also have minimum alpha.

This procedure is affected by the following context setters: 'gimp-context-set-antialias', 'gimp-context-set-feather', 'gimp-context-set-feather-radius', 'gimp-context-set-sample-merged', 'gimp-context-set-sample-criterion', 'gimp-context-set-sample-threshold', 'gimp-context-set-sample-transparent'.

In the case of a merged sampling, the supplied drawable is ignored."
  "David Gowers"
  "David Gowers"
  "2010"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The affected image"
    )
    (
      "operation"
      "GimpChannelOps"
      "The selection operation @{ CHANNEL-OP-ADD (0), CHANNEL-OP-SUBTRACT (1), CHANNEL-OP-REPLACE (2), CHANNEL-OP-INTERSECT (3) @}"
    )
    (
      "drawable"
      "GimpDrawable"
      "The affected drawable"
    )
    (
      "color"
      "GimpRGB"
      "The color to select"
    )
  )
  (
  )
)
(register-procedure "gimp-drawable-type"
  "Returns the drawable's type."
  "This procedure returns the drawable's type."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "drawable"
      "GimpDrawable"
      "The drawable"
    )
  )
  (
    (
      "type"
      "GimpImageType"
      "The drawable's type @{ RGB-IMAGE (0), RGBA-IMAGE (1), GRAY-IMAGE (2), GRAYA-IMAGE (3), INDEXED-IMAGE (4), INDEXEDA-IMAGE (5) @}"
    )
  )
)
(register-procedure "gimp-get-parasite-list"
  "List all parasites."
  "Returns a list of all currently attached global parasites."
  "Marc Lehmann"
  "Marc Lehmann"
  "1999"
  "Internal GIMP procedure"
  (
  )
  (
    (
      "parasites"
      "GStrv"
      "The names of currently attached parasites"
    )
  )
)
(register-procedure "gimp-pdb-get-proc-argument"
  "Queries the procedural database for information on the specified procedure's argument."
  "This procedure returns the #GParamSpec of procedure_name's argument."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2019"
  "Internal GIMP procedure"
  (
    (
      "procedure-name"
      "gchararray"
      "The procedure name"
    )
    (
      "arg-num"
      "gint"
      "The argument number"
    )
  )
  (
    (
      "param-spec"
      "GParam"
      "The GParamSpec of the argument"
    )
  )
)
(register-procedure "file-header-save"
  "saves files as C unsigned character array"
  "FIXME: write help"
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1997"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The image to save"
    )
    (
      "num-drawables"
      "gint"
      "Number of drawables to be saved (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The drawables to save"
    )
    (
      "file"
      "GFile"
      "The file to save to"
    )
  )
  (
  )
)
(register-procedure "gimp-image-lower-item"
  "Lower the specified item in its level in its item tree"
  "This procedure lowers the specified item one step in the item tree. The procedure call will fail if there is no item below it."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2010"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "item"
      "GimpItem"
      "The item to lower"
    )
  )
  (
  )
)
(register-procedure "gimp-debug-timer-end"
  "Finishes measuring elapsed time."
  "This procedure stops the timer started by a previous 'gimp-debug-timer-start' call, and prints and returns the elapsed time.
If there was already an active timer at the time of corresponding call to 'gimp-debug-timer-start', a dummy value is returned.

This is a debug utility procedure. It is subject to change at any point, and should not be used in production."
  "Ell"
  "Ell"
  "2017"
  "Internal GIMP procedure"
  (
  )
  (
    (
      "elapsed"
      "gdouble"
      "The elapsed time, in seconds"
    )
  )
)
(register-procedure "script-fu-contactsheet"
  "Create a series of images containing thumbnail sized versions of all of the images in a specified directory."
  ""
  "Kevin Cozens <kcozens@@interlog.com>"
  "Kevin Cozens"
  "July 19, 2004"
  "Temporary Procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "dirname"
      "gchararray"
      "Images Directory"
    )
    (
      "option"
      "gint"
      "Sheet size"
    )
    (
      "font"
      "gchararray"
      "Title font"
    )
    (
      "font-2"
      "gchararray"
      "Legend font"
    )
    (
      "color"
      "GimpRGB"
      "Text color"
    )
    (
      "color-2"
      "GimpRGB"
      "Background color"
    )
  )
  (
  )
)
(register-procedure "gimp-image-set-metadata"
  "Set the image's metadata."
  "Sets exif/iptc/xmp metadata on the image."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "metadata-string"
      "gchararray"
      "The exif/ptc/xmp metadata as a string"
    )
  )
  (
  )
)
(register-procedure "file-raw-placeholder-bay-load"
  "Load files in the BAY raw format via placeholder"
  "This plug-in loads files in Casio's raw BAY format by calling placeholder."
  "Tobias Ellinghaus"
  "Tobias Ellinghaus"
  "2016"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "file"
      "GFile"
      "The file to load"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "Output image"
    )
  )
)
(register-procedure "file-fli-save"
  "Export FLI-movies"
  "This is an experimental plug-in to handle FLI movies"
  "Jens Ch. Restemeier"
  "Jens Ch. Restemeier"
  "1997"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The image to save"
    )
    (
      "num-drawables"
      "gint"
      "Number of drawables to be saved (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The drawables to save"
    )
    (
      "file"
      "GFile"
      "The file to save to"
    )
    (
      "from-frame"
      "gint"
      "Export beginning from this frame (from-frame >= -1)"
    )
    (
      "to-frame"
      "gint"
      "End exporting with this frame (to-frame >= -1)"
    )
  )
  (
  )
)
(register-procedure "gimp-pdb-set-file-proc-handles-remote"
  "Registers a file handler procedure as capable of handling remote URIs."
  "Registers a file handler procedure as capable of handling remote URIs. This allows GIMP to call the procedure directly for all kinds of URIs, not only on local file:// URIs."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2012"
  "Internal GIMP procedure"
  (
    (
      "procedure-name"
      "gchararray"
      "The name of the procedure to enable remote URIs for."
    )
  )
  (
  )
)
(register-procedure "plug-in-smooth-palette"
  "Derive a smooth color palette from the image"
  "help!"
  "Scott Draves"
  "Scott Draves"
  "1997"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The input image"
    )
    (
      "num-drawables"
      "gint"
      "Number of input drawables (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The input drawables"
    )
    (
      "width"
      "gint"
      "Widtg (2 <= width <= 524288)"
    )
    (
      "height"
      "gint"
      "Height (2 <= height <= 524288)"
    )
    (
      "n-tries"
      "gint"
      "Search septh (1 <= n-tries <= 1024)"
    )
    (
      "show-image"
      "gboolean"
      "Show image (TRUE or FALSE)"
    )
  )
  (
    (
      "new-image"
      "GimpImage"
      "Output image"
    )
    (
      "new-layer"
      "GimpLayer"
      "Output layer"
    )
  )
)
(register-procedure "gimp-context-get-line-join-style"
  "Get the line join style setting."
  "This procedure returns the line join style setting."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2015"
  "Internal GIMP procedure"
  (
  )
  (
    (
      "join-style"
      "GimpJoinStyle"
      "The line join style setting @{ JOIN-MITER (0), JOIN-ROUND (1), JOIN-BEVEL (2) @}"
    )
  )
)
(register-procedure "gimp-image-get-vectors-by-name"
  "Find a vectors with a given name in an image."
  "This procedure returns the vectors with the given name in the specified image."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2011"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "name"
      "gchararray"
      "The name of the vectors to find"
    )
  )
  (
    (
      "vectors"
      "GimpVectors"
      "The vectors with the specified name"
    )
  )
)
(register-procedure "gimp-text-layer-get-justification"
  "Get the text justification information of the text layer."
  "This procedure returns the alignment of the lines in the text layer relative to each other."
  "Marcus Heese <heese@@cip.ifi.lmu.de>"
  "Marcus Heese"
  "2008"
  "Internal GIMP procedure"
  (
    (
      "layer"
      "GimpLayer"
      "The text layer."
    )
  )
  (
    (
      "justify"
      "GimpTextJustification"
      "The justification used in the text layer. @{ TEXT-JUSTIFY-LEFT (0), TEXT-JUSTIFY-RIGHT (1), TEXT-JUSTIFY-CENTER (2), TEXT-JUSTIFY-FILL (3) @}"
    )
  )
)
(register-procedure "gimp-gradients-close-popup"
  "Close the gradient selection dialog."
  "This procedure closes an opened gradient selection dialog."
  "Andy Thomas"
  "Andy Thomas"
  "1998"
  "Internal GIMP procedure"
  (
    (
      "gradient-callback"
      "gchararray"
      "The name of the callback registered for this pop-up"
    )
  )
  (
  )
)
(register-procedure "gimp-edit-named-cut"
  "Cut into a named buffer."
  "This procedure works like 'gimp-edit-cut', but additionally stores the cut buffer into a named buffer that will stay available for later pasting, regardless of any intermediate copy or cut operations."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2005"
  "Internal GIMP procedure"
  (
    (
      "num-drawables"
      "gint"
      "The number of drawables (num-drawables >= 1)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The drawables to cut from"
    )
    (
      "buffer-name"
      "gchararray"
      "The name of the buffer to create"
    )
  )
  (
    (
      "real-name"
      "gchararray"
      "The real name given to the buffer, or NULL if the cut failed"
    )
  )
)
(register-procedure "gimp-image-get-selection"
  "Returns the specified image's selection."
  "This will always return a valid ID for a selection -- which is represented as a channel internally."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
  )
  (
    (
      "selection"
      "GimpSelection"
      "The selection channel"
    )
  )
)
(register-procedure "gimp-item-get-visible"
  "Get the visibility of the specified item."
  "This procedure returns the specified item's visibility."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "item"
      "GimpItem"
      "The item"
    )
  )
  (
    (
      "visible"
      "gboolean"
      "The item visibility (TRUE or FALSE)"
    )
  )
)
(register-procedure "gimp-context-get-foreground"
  "Get the current GIMP foreground color."
  "This procedure returns the current GIMP foreground color. The foreground color is used in a variety of tools such as paint tools, blending, and bucket fill."
  "Michael Natterer <mitch@@gimp.org> & Sven Neumann <sven@@gimp.org>"
  "Michael Natterer & Sven Neumann"
  "2004"
  "Internal GIMP procedure"
  (
  )
  (
    (
      "foreground"
      "GimpRGB"
      "The foreground color"
    )
  )
)
(register-procedure "script-fu-copy-visible"
  "This procedure is deprecated! Use 'gimp-edit-copy-visible' instead."
  ""
  ""
  ""
  ""
  "Temporary Procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Image"
    )
    (
      "drawable"
      "GimpDrawable"
      "Drawable"
    )
  )
  (
  )
)
(register-procedure "gimp-vectors-stroke-rotate"
  "rotates the given stroke."
  "Rotates the given stroke around given center by angle (in degrees)."
  "João S. O. Bueno"
  "João S. O. Bueno"
  "2006"
  "Internal GIMP procedure"
  (
    (
      "vectors"
      "GimpVectors"
      "The vectors object"
    )
    (
      "stroke-id"
      "gint"
      "The stroke ID"
    )
    (
      "center-x"
      "gdouble"
      "X coordinate of the rotation center"
    )
    (
      "center-y"
      "gdouble"
      "Y coordinate of the rotation center"
    )
    (
      "angle"
      "gdouble"
      "angle to rotate about"
    )
  )
  (
  )
)
(register-procedure "gimp-item-transform-rotate-simple"
  "Rotate the specified item about given coordinates through the specified angle."
  "This function rotates the specified item.

If a selection exists and the item is a drawable, the portion of the drawable which lies under the selection is cut from the drawable and made into a floating selection which is then rotated by the specified amount. If auto_center is set to TRUE, the rotation is around the selection's center. Otherwise, the coordinate of the center point needs to be specified. The return value is the ID of the rotated floating selection.

If there is no selection or the item is not a drawable, the entire item will be rotated around its center if auto_center is set to TRUE, otherwise the coordinate of the center point needs to be specified.
The return value will be equal to the item ID supplied as input.

This procedure is affected by the following context setters: 'gimp-context-set-transform-resize'."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2010"
  "Internal GIMP procedure"
  (
    (
      "item"
      "GimpItem"
      "The affected item"
    )
    (
      "rotate-type"
      "GimpRotationType"
      "Type of rotation @{ ROTATE-90 (0), ROTATE-180 (1), ROTATE-270 (2) @}"
    )
    (
      "auto-center"
      "gboolean"
      "Whether to automatically rotate around the selection center (TRUE or FALSE)"
    )
    (
      "center-x"
      "gdouble"
      "The hor. coordinate of the center of rotation"
    )
    (
      "center-y"
      "gdouble"
      "The vert. coordinate of the center of rotation"
    )
  )
  (
    (
      "item"
      "GimpItem"
      "The rotated item"
    )
  )
)
(register-procedure "gimp-image-get-metadata"
  "Returns the image's metadata."
  "Returns exif/iptc/xmp metadata from the image."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
  )
  (
    (
      "metadata-string"
      "gchararray"
      "The exif/ptc/xmp metadata as a string"
    )
  )
)
(register-procedure "gimp-image-get-selected-layers"
  "Returns the specified image's selected layers."
  "This procedure returns the list of selected layers in the specified image."
  "Jehan"
  "Jehan"
  "2020"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
  )
  (
    (
      "num-layers"
      "gint"
      "The number of selected layers in the image (num-layers >= 0)"
    )
    (
      "layers"
      "GimpObjectArray"
      "The list of selected layers in the image."
    )
  )
)
(register-procedure "gimp-context-set-ink-tilt-sensitivity"
  "Set ink tilt sensitivity."
  "Set the ink tilt sensitivity for ink tool."
  "Ed Swartz"
  "Ed Swartz"
  "2012"
  "Internal GIMP procedure"
  (
    (
      "tilt"
      "gdouble"
      "ink tilt sensitivity (0 <= tilt <= 1)"
    )
  )
  (
  )
)
(register-procedure "gimp-fonts-refresh"
  "Refresh current fonts. This function always succeeds."
  "This procedure retrieves all fonts currently in the user's font path and updates the font dialogs accordingly. Depending on the amount of fonts on the system, this can take considerable time."
  "Sven Neumann <sven@@gimp.org>"
  "Sven Neumann"
  "2003"
  "Internal GIMP procedure"
  (
  )
  (
  )
)
(register-procedure "plug-in-zealouscrop"
  "Autocrop unused space from edges and middle"
  ""
  "Adam D. Moss"
  "Adam D. Moss"
  "1997"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The input image"
    )
    (
      "num-drawables"
      "gint"
      "Number of input drawables (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The input drawables"
    )
  )
  (
  )
)
(register-procedure "gimp-item-set-visible"
  "Set the visibility of the specified item."
  "This procedure sets the specified item's visibility."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "item"
      "GimpItem"
      "The item"
    )
    (
      "visible"
      "gboolean"
      "The new item visibility (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "gimp-file-save-thumbnail"
  "Saves a thumbnail for the given image"
  "This procedure saves a thumbnail for the given image according to the Free Desktop Thumbnail Managing Standard. The thumbnail is saved so that it belongs to the given file. This means you have to save the image under this name first, otherwise this procedure will fail. This procedure may become useful if you want to explicitly save a thumbnail with a file."
  "Josh MacDonald"
  "Josh MacDonald"
  "1997"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "file"
      "GFile"
      "The file the thumbnail belongs to"
    )
  )
  (
  )
)
(register-procedure "gimp-pdb-get-data-size"
  "Returns size of data associated with the specified identifier."
  "This procedure returns the size of any data which may have been associated with the specified identifier. If no data has been associated with the identifier, an error is returned."
  "Nick Lamb"
  "Nick Lamb"
  "1998"
  "Internal GIMP procedure"
  (
    (
      "identifier"
      "gchararray"
      "The identifier associated with data"
    )
  )
  (
    (
      "bytes"
      "gint"
      "The number of bytes in the data (bytes >= 1)"
    )
  )
)
(register-procedure "gimp-image-get-exported-file"
  "Returns the exported file for the specified image."
  "This procedure returns the file associated with the specified image if the image was exported a non-native GIMP format. If the image was not exported, this procedure returns %NULL."
  "Eric Grivel <gimp@@lumenssolutions.com>"
  "Eric Grivel"
  "2011"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
  )
  (
    (
      "file"
      "GFile"
      "The exported file."
    )
  )
)
(register-procedure "gimp-context-set-stroke-method"
  "Set the specified stroke method as the active stroke method."
  "This procedure set the specified stroke method as the active stroke method. The new method will be used in all subsequent stroke operations."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2015"
  "Internal GIMP procedure"
  (
    (
      "stroke-method"
      "GimpStrokeMethod"
      "The new stroke method @{ STROKE-LINE (0), STROKE-PAINT-METHOD (1) @}"
    )
  )
  (
  )
)
(register-procedure "plug-in-cubism"
  "Convert the image into randomly rotated square blobs"
  "Convert the image into randomly rotated square blobs."
  "Compatibility procedure. Please see 'gegl:cubism' for credits."
  "Compatibility procedure. Please see 'gegl:cubism' for credits."
  "2013"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
    (
      "tile-size"
      "gdouble"
      "Average diameter of each tile (in pixels) (0 <= tile-size <= 100)"
    )
    (
      "tile-saturation"
      "gdouble"
      "Expand tiles by this amount (0 <= tile-saturation <= 10)"
    )
    (
      "bg-color"
      "gint"
      "Background color @{ BLACK (0), BG (1) @} (0 <= bg-color <= 1)"
    )
  )
  (
  )
)
(register-procedure "gimp-item-get-children"
  "Returns the item's list of children."
  "This procedure returns the list of items which are children of the specified item. The order is topmost to bottommost."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2010"
  "Internal GIMP procedure"
  (
    (
      "item"
      "GimpItem"
      "The item"
    )
  )
  (
    (
      "num-children"
      "gint"
      "The item's number of children (num-children >= 0)"
    )
    (
      "children"
      "GimpObjectArray"
      "The item's list of children"
    )
  )
)
(register-procedure "plug-in-lighting"
  "Apply various lighting effects to an image"
  "No help yet"
  "Tom Bech & Federico Mena Quintero"
  "Tom Bech & Federico Mena Quintero"
  "Version 0.2.0, March 15 1998"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The input image"
    )
    (
      "num-drawables"
      "gint"
      "Number of input drawables (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The input drawables"
    )
    (
      "bump-drawable"
      "GimpDrawable"
      "Bumpmap drawable (set to NULL if disabled)"
    )
    (
      "env-drawable"
      "GimpDrawable"
      "Environmentmap drawable (set to NULL if disabled"
    )
    (
      "do-bumpmap"
      "gboolean"
      "Enable bumpmapping (TRUE or FALSE)"
    )
    (
      "do-envmap"
      "gboolean"
      "Enable envmapping (TRUE or FALSE)"
    )
    (
      "bumpmap-type"
      "gint"
      "Type of mapping (0=linear, 1=log, 2=sinusoidal, 3=spherical) (0 <= bumpmap-type <= 2)"
    )
    (
      "light-type"
      "gint"
      "Type of lightsource (0=point, 1=directional, 3=spot, 4=none) (0 <= light-type <= 4)"
    )
    (
      "light-color"
      "GimpRGB"
      "Light source color"
    )
    (
      "light-position-x"
      "gdouble"
      "Light source position (x,y,z)"
    )
    (
      "light-position-y"
      "gdouble"
      "Light source position (x,y,z)"
    )
    (
      "light-position-z"
      "gdouble"
      "Light source position (x,y,z)"
    )
    (
      "light-direction-x"
      "gdouble"
      "Light source direction (x,y,z)"
    )
    (
      "light-direction-y"
      "gdouble"
      "Light source direction (x,y,z)"
    )
    (
      "light-direction-z"
      "gdouble"
      "Light source direction (x,y,z)"
    )
    (
      "ambient-intensity"
      "gdouble"
      "Material ambient intensity (0 <= ambient-intensity <= 1)"
    )
    (
      "diffuse-intensity"
      "gdouble"
      "Material diffuse intensity (0 <= diffuse-intensity <= 1)"
    )
    (
      "diffuse-reflectivity"
      "gdouble"
      "Material diffuse reflectivity (0 <= diffuse-reflectivity <= 1)"
    )
    (
      "specular-reflectivity"
      "gdouble"
      "Material specular reflectivity (0 <= specular-reflectivity <= 1)"
    )
    (
      "highlight"
      "gdouble"
      "Material highlight (note, it's exponential) (highlight >= 0)"
    )
    (
      "antialiasing"
      "gboolean"
      "Apply antialiasing (TRUE or FALSE)"
    )
    (
      "new-image"
      "gboolean"
      "Create a new image (TRUE or FALSE)"
    )
    (
      "transparent-background"
      "gboolean"
      "Make background transparent (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "plug-in-gauss-iir2"
  "Apply a gaussian blur"
  "Applies a gaussian blur to the drawable, with specified radius of affect. The standard deviation of the normal distribution used to modify pixel values is calculated based on the supplied radius. Horizontal and vertical blurring can be independently invoked by specifying only one to run."
  "Compatibility procedure. Please see 'gegl:gaussian-blur' for credits."
  "Compatibility procedure. Please see 'gegl:gaussian-blur' for credits."
  "2014"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
    (
      "horizontal"
      "gdouble"
      "Horizontal radius of gaussian blur (in pixels (0 <= horizontal <= 500)"
    )
    (
      "vertical"
      "gdouble"
      "Vertical radius of gaussian blur (in pixels (0 <= vertical <= 500)"
    )
  )
  (
  )
)
(register-procedure "gimp-context-set-sample-threshold-int"
  "Set the sample threshold setting as an integer value."
  "This procedure modifies the sample threshold setting as an integer value. See 'gimp-context-set-sample-threshold'."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2011"
  "Internal GIMP procedure"
  (
    (
      "sample-threshold"
      "gint"
      "The sample threshold setting (0 <= sample-threshold <= 255)"
    )
  )
  (
  )
)
(register-procedure "gimp-layer-set-mode"
  "Set the combination mode of the specified layer."
  "This procedure sets the specified layer's combination mode."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "layer"
      "GimpLayer"
      "The layer"
    )
    (
      "mode"
      "GimpLayerMode"
      "The new layer combination mode @{ LAYER-MODE-NORMAL-LEGACY (0), LAYER-MODE-DISSOLVE (1), LAYER-MODE-BEHIND-LEGACY (2), LAYER-MODE-MULTIPLY-LEGACY (3), LAYER-MODE-SCREEN-LEGACY (4), LAYER-MODE-OVERLAY-LEGACY (5), LAYER-MODE-DIFFERENCE-LEGACY (6), LAYER-MODE-ADDITION-LEGACY (7), LAYER-MODE-SUBTRACT-LEGACY (8), LAYER-MODE-DARKEN-ONLY-LEGACY (9), LAYER-MODE-LIGHTEN-ONLY-LEGACY (10), LAYER-MODE-HSV-HUE-LEGACY (11), LAYER-MODE-HSV-SATURATION-LEGACY (12), LAYER-MODE-HSL-COLOR-LEGACY (13), LAYER-MODE-HSV-VALUE-LEGACY (14), LAYER-MODE-DIVIDE-LEGACY (15), LAYER-MODE-DODGE-LEGACY (16), LAYER-MODE-BURN-LEGACY (17), LAYER-MODE-HARDLIGHT-LEGACY (18), LAYER-MODE-SOFTLIGHT-LEGACY (19), LAYER-MODE-GRAIN-EXTRACT-LEGACY (20), LAYER-MODE-GRAIN-MERGE-LEGACY (21), LAYER-MODE-COLOR-ERASE-LEGACY (22), LAYER-MODE-OVERLAY (23), LAYER-MODE-LCH-HUE (24), LAYER-MODE-LCH-CHROMA (25), LAYER-MODE-LCH-COLOR (26), LAYER-MODE-LCH-LIGHTNESS (27), LAYER-MODE-NORMAL (28), LAYER-MODE-BEHIND (29), LAYER-MODE-MULTIPLY (30), LAYER-MODE-SCREEN (31), LAYER-MODE-DIFFERENCE (32), LAYER-MODE-ADDITION (33), LAYER-MODE-SUBTRACT (34), LAYER-MODE-DARKEN-ONLY (35), LAYER-MODE-LIGHTEN-ONLY (36), LAYER-MODE-HSV-HUE (37), LAYER-MODE-HSV-SATURATION (38), LAYER-MODE-HSL-COLOR (39), LAYER-MODE-HSV-VALUE (40), LAYER-MODE-DIVIDE (41), LAYER-MODE-DODGE (42), LAYER-MODE-BURN (43), LAYER-MODE-HARDLIGHT (44), LAYER-MODE-SOFTLIGHT (45), LAYER-MODE-GRAIN-EXTRACT (46), LAYER-MODE-GRAIN-MERGE (47), LAYER-MODE-VIVID-LIGHT (48), LAYER-MODE-PIN-LIGHT (49), LAYER-MODE-LINEAR-LIGHT (50), LAYER-MODE-HARD-MIX (51), LAYER-MODE-EXCLUSION (52), LAYER-MODE-LINEAR-BURN (53), LAYER-MODE-LUMA-DARKEN-ONLY (54), LAYER-MODE-LUMA-LIGHTEN-ONLY (55), LAYER-MODE-LUMINANCE (56), LAYER-MODE-COLOR-ERASE (57), LAYER-MODE-ERASE (58), LAYER-MODE-MERGE (59), LAYER-MODE-SPLIT (60), LAYER-MODE-PASS-THROUGH (61), LAYER-MODE-REPLACE (62), LAYER-MODE-ANTI-ERASE (63) @}"
    )
  )
  (
  )
)
(register-procedure "gimp-text-layer-get-antialias"
  "Check if antialiasing is used in the text layer."
  "This procedure checks if antialiasing is enabled in the specified text layer."
  "Marcus Heese <heese@@cip.ifi.lmu.de>"
  "Marcus Heese"
  "2008"
  "Internal GIMP procedure"
  (
    (
      "layer"
      "GimpLayer"
      "The text layer"
    )
  )
  (
    (
      "antialias"
      "gboolean"
      "A flag which is true if antialiasing is used for rendering the font in the text layer. (TRUE or FALSE)"
    )
  )
)
(register-procedure "gimp-image-select-contiguous-color"
  "Create a selection by selecting all pixels around specified coordinates with the same (or similar) color to that at the coordinates."
  "This tool creates a contiguous selection over the specified image. A contiguous color selection is determined by a seed fill under the constraints of the current context settings. Essentially, the color at the specified coordinates (in the drawable) is measured and the selection expands outwards from that point to any adjacent pixels which are not significantly different (as determined by the threshold and criterion context settings). This process continues until no more expansion is possible. If antialiasing is turned on, the final selection mask will contain intermediate values based on close misses to the threshold bar at pixels along the seed fill boundary.

This procedure is affected by the following context setters: 'gimp-context-set-antialias', 'gimp-context-set-feather', 'gimp-context-set-feather-radius', 'gimp-context-set-sample-merged', 'gimp-context-set-sample-criterion', 'gimp-context-set-sample-threshold', 'gimp-context-set-sample-transparent', 'gimp-context-set-diagonal-neighbors'.

In the case of a merged sampling, the supplied drawable is ignored. If the sample is merged, the specified coordinates are relative to the image origin; otherwise, they are relative to the drawable's origin."
  "David Gowers"
  "David Gowers"
  "2010"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The affected image"
    )
    (
      "operation"
      "GimpChannelOps"
      "The selection operation @{ CHANNEL-OP-ADD (0), CHANNEL-OP-SUBTRACT (1), CHANNEL-OP-REPLACE (2), CHANNEL-OP-INTERSECT (3) @}"
    )
    (
      "drawable"
      "GimpDrawable"
      "The affected drawable"
    )
    (
      "x"
      "gdouble"
      "x coordinate of initial seed fill point: (image coordinates)"
    )
    (
      "y"
      "gdouble"
      "y coordinate of initial seed fill point: (image coordinates)"
    )
  )
  (
  )
)
(register-procedure "gimp-image-set-component-active"
  "Sets if the specified image's image component is active."
  "This procedure sets if the specified image's image component (i.e. Red, Green, Blue intensity channels in an RGB image) is active or inactive -- whether or not it can be modified. If the specified component is not valid for the image type, an error is returned."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "component"
      "GimpChannelType"
      "The image component @{ CHANNEL-RED (0), CHANNEL-GREEN (1), CHANNEL-BLUE (2), CHANNEL-GRAY (3), CHANNEL-INDEXED (4), CHANNEL-ALPHA (5) @}"
    )
    (
      "active"
      "gboolean"
      "Component is active (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "gimp-item-is-group"
  "Returns whether the item is a group item."
  "This procedure returns TRUE if the specified item is a group item which can have children."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2010"
  "Internal GIMP procedure"
  (
    (
      "item"
      "GimpItem"
      "The item"
    )
  )
  (
    (
      "group"
      "gboolean"
      "TRUE if the item is a group, FALSE otherwise (TRUE or FALSE)"
    )
  )
)
(register-procedure "plug-in-colormap-remap"
  "Rearrange the colormap"
  "This procedure takes an indexed image and lets you alter the positions of colors in the colormap without visually changing the image."
  "Mukund Sivaraman <muks@@mukund.org>"
  "Mukund Sivaraman <muks@@mukund.org>"
  "June 2006"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The input image"
    )
    (
      "num-drawables"
      "gint"
      "Number of input drawables (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The input drawables"
    )
    (
      "num-colors"
      "gint"
      "Length of 'map' argument (1 <= num-colors <= 256)"
    )
    (
      "map"
      "GimpUint8Array"
      "Remap array for the colormap"
    )
  )
  (
  )
)
(register-procedure "gimp-item-set-color-tag"
  "Set the color tag of the specified item."
  "This procedure sets the specified item's color tag."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2016"
  "Internal GIMP procedure"
  (
    (
      "item"
      "GimpItem"
      "The item"
    )
    (
      "color-tag"
      "GimpColorTag"
      "The new item color tag @{ COLOR-TAG-NONE (0), COLOR-TAG-BLUE (1), COLOR-TAG-GREEN (2), COLOR-TAG-YELLOW (3), COLOR-TAG-ORANGE (4), COLOR-TAG-BROWN (5), COLOR-TAG-RED (6), COLOR-TAG-VIOLET (7), COLOR-TAG-GRAY (8) @}"
    )
  )
  (
  )
)
(register-procedure "gimp-palette-add-entry"
  "Adds a palette entry to the specified palette."
  "This procedure adds an entry to the specified palette. It returns an error if the entry palette does not exist."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2004"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The palette name"
    )
    (
      "entry-name"
      "gchararray"
      "The name of the entry"
    )
    (
      "color"
      "GimpRGB"
      "The new entry's color color"
    )
  )
  (
    (
      "entry-num"
      "gint"
      "The index of the added entry"
    )
  )
)
(register-procedure "file-raw-placeholder-minolta-load"
  "Load files in the Minolta raw formats via placeholder"
  "This plug-in loads files in Minolta's raw formats by calling placeholder."
  "Tobias Ellinghaus"
  "Tobias Ellinghaus"
  "2016"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "file"
      "GFile"
      "The file to load"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "Output image"
    )
  )
)
(register-procedure "gradient-save-as-css"
  "Creates a new palette from a given gradient"
  "palette_from_gradient (gradient, number, segment_colors) -> None"
  "Joao S. O. Bueno"
  "(c) GPL V3.0 or later"
  "2011"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "gradient"
      "gchararray"
      ""
    )
    (
      "file"
      "GFile"
      ""
    )
  )
  (
  )
)
(register-procedure "gimp-message"
  "Displays a dialog box with a message."
  "Displays a dialog box with a message. Useful for status or error reporting. The message must be in UTF-8 encoding."
  "Manish Singh"
  "Manish Singh"
  "1998"
  "Internal GIMP procedure"
  (
    (
      "message"
      "gchararray"
      "Message to display in the dialog"
    )
  )
  (
  )
)
(register-procedure "plug-in-ifscompose"
  "Create an Iterated Function System (IFS) fractal"
  "Interactively create an Iterated Function System fractal. Use the window on the upper left to adjustthe component transformations of the fractal. The operation that is performed is selected by the buttons underneath the window, or from a menu popped up by the right mouse button. The fractal will be rendered with a transparent background if the current image has an alpha channel."
  "Owen Taylor"
  "Owen Taylor"
  "1997"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The input image"
    )
    (
      "num-drawables"
      "gint"
      "Number of input drawables (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The input drawables"
    )
  )
  (
  )
)
(register-procedure "gimp-image-select-item"
  "Transforms the specified item into a selection"
  "This procedure renders the item's outline into the current selection of the image the item belongs to. What exactly the item's outline is depends on the item type: for layers, it's the layer's alpha channel, for vectors the vector's shape.

This procedure is affected by the following context setters: 'gimp-context-set-antialias', 'gimp-context-set-feather', 'gimp-context-set-feather-radius'."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2010"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "operation"
      "GimpChannelOps"
      "The desired operation with current selection @{ CHANNEL-OP-ADD (0), CHANNEL-OP-SUBTRACT (1), CHANNEL-OP-REPLACE (2), CHANNEL-OP-INTERSECT (3) @}"
    )
    (
      "item"
      "GimpItem"
      "The item to render to the selection"
    )
  )
  (
  )
)
(register-procedure "gimp-image-get-default-new-layer-mode"
  "Get the default mode for newly created layers of this image."
  "Returns the default mode for newly created layers of this image."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2017"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
  )
  (
    (
      "mode"
      "GimpLayerMode"
      "The layer mode @{ LAYER-MODE-NORMAL-LEGACY (0), LAYER-MODE-DISSOLVE (1), LAYER-MODE-BEHIND-LEGACY (2), LAYER-MODE-MULTIPLY-LEGACY (3), LAYER-MODE-SCREEN-LEGACY (4), LAYER-MODE-OVERLAY-LEGACY (5), LAYER-MODE-DIFFERENCE-LEGACY (6), LAYER-MODE-ADDITION-LEGACY (7), LAYER-MODE-SUBTRACT-LEGACY (8), LAYER-MODE-DARKEN-ONLY-LEGACY (9), LAYER-MODE-LIGHTEN-ONLY-LEGACY (10), LAYER-MODE-HSV-HUE-LEGACY (11), LAYER-MODE-HSV-SATURATION-LEGACY (12), LAYER-MODE-HSL-COLOR-LEGACY (13), LAYER-MODE-HSV-VALUE-LEGACY (14), LAYER-MODE-DIVIDE-LEGACY (15), LAYER-MODE-DODGE-LEGACY (16), LAYER-MODE-BURN-LEGACY (17), LAYER-MODE-HARDLIGHT-LEGACY (18), LAYER-MODE-SOFTLIGHT-LEGACY (19), LAYER-MODE-GRAIN-EXTRACT-LEGACY (20), LAYER-MODE-GRAIN-MERGE-LEGACY (21), LAYER-MODE-COLOR-ERASE-LEGACY (22), LAYER-MODE-OVERLAY (23), LAYER-MODE-LCH-HUE (24), LAYER-MODE-LCH-CHROMA (25), LAYER-MODE-LCH-COLOR (26), LAYER-MODE-LCH-LIGHTNESS (27), LAYER-MODE-NORMAL (28), LAYER-MODE-BEHIND (29), LAYER-MODE-MULTIPLY (30), LAYER-MODE-SCREEN (31), LAYER-MODE-DIFFERENCE (32), LAYER-MODE-ADDITION (33), LAYER-MODE-SUBTRACT (34), LAYER-MODE-DARKEN-ONLY (35), LAYER-MODE-LIGHTEN-ONLY (36), LAYER-MODE-HSV-HUE (37), LAYER-MODE-HSV-SATURATION (38), LAYER-MODE-HSL-COLOR (39), LAYER-MODE-HSV-VALUE (40), LAYER-MODE-DIVIDE (41), LAYER-MODE-DODGE (42), LAYER-MODE-BURN (43), LAYER-MODE-HARDLIGHT (44), LAYER-MODE-SOFTLIGHT (45), LAYER-MODE-GRAIN-EXTRACT (46), LAYER-MODE-GRAIN-MERGE (47), LAYER-MODE-VIVID-LIGHT (48), LAYER-MODE-PIN-LIGHT (49), LAYER-MODE-LINEAR-LIGHT (50), LAYER-MODE-HARD-MIX (51), LAYER-MODE-EXCLUSION (52), LAYER-MODE-LINEAR-BURN (53), LAYER-MODE-LUMA-DARKEN-ONLY (54), LAYER-MODE-LUMA-LIGHTEN-ONLY (55), LAYER-MODE-LUMINANCE (56), LAYER-MODE-COLOR-ERASE (57), LAYER-MODE-ERASE (58), LAYER-MODE-MERGE (59), LAYER-MODE-SPLIT (60), LAYER-MODE-PASS-THROUGH (61), LAYER-MODE-REPLACE (62), LAYER-MODE-ANTI-ERASE (63) @}"
    )
  )
)
(register-procedure "gimp-file-load-layers"
  "Loads an image file as layers for an existing image."
  "This procedure behaves like the file-load procedure but opens the specified image as layers for an existing image. The returned layers needs to be added to the existing image with 'gimp-image-insert-layer'."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2006"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1) @}"
    )
    (
      "image"
      "GimpImage"
      "Destination image"
    )
    (
      "file"
      "GFile"
      "The file to load"
    )
  )
  (
    (
      "num-layers"
      "gint"
      "The number of loaded layers (num-layers >= 0)"
    )
    (
      "layers"
      "GimpObjectArray"
      "The list of loaded layers"
    )
  )
)
(register-procedure "script-fu-difference-clouds"
  "Solid noise applied with Difference layer mode"
  ""
  "Martin Nordholts <enselic@@hotmail.com>"
  "Martin Nordholts"
  "2006/10/25"
  "Temporary Procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Image"
    )
    (
      "drawable"
      "GimpDrawable"
      "Drawable"
    )
  )
  (
  )
)
(register-procedure "gimp-context-set-brush"
  "Set the specified brush as the active brush."
  "This procedure allows the active brush to be set by specifying its name. The name is simply a string which corresponds to one of the names of the installed brushes. If there is no matching brush found, this procedure will return an error. Otherwise, the specified brush becomes active and will be used in all subsequent paint operations."
  "Michael Natterer <mitch@@gimp.org> & Sven Neumann <sven@@gimp.org>"
  "Michael Natterer & Sven Neumann"
  "2004"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The name of the brush"
    )
  )
  (
  )
)
(register-procedure "plug-in-randomize-hurl"
  "Completely randomize a fraction of pixels"
  "This plug-in \"hurls\" randomly-valued pixels onto the selection or image. You may select the percentage of pixels to modify and the number of times to repeat the process."
  "Compatibility procedure. Please see 'gegl:noise-hurl' for credits."
  "Compatibility procedure. Please see 'gegl:noise-hurl' for credits."
  "2013"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
    (
      "rndm-pct"
      "gdouble"
      "Randomization percentage (0 <= rndm-pct <= 100)"
    )
    (
      "rndm-rcount"
      "gdouble"
      "Repeat count (1 <= rndm-rcount <= 100)"
    )
    (
      "randomize"
      "gboolean"
      "Use random seed (TRUE or FALSE)"
    )
    (
      "seed"
      "gint"
      "Seed value (used only if randomize is FALSE)"
    )
  )
  (
  )
)
(register-procedure "gimp-image-merge-layer-group"
  "Merge the passed layer group's layers into one normal layer."
  "This procedure combines the layers of the passed layer group into a single normal layer, replacing the group."
  "Ell"
  "Ell"
  "2019"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "layer-group"
      "GimpLayer"
      "The layer group to merge"
    )
  )
  (
    (
      "layer"
      "GimpLayer"
      "The resulting layer"
    )
  )
)
(register-procedure "gimp-context-get-ink-angle"
  "Get ink angle in degrees."
  "Get the ink angle in degrees for ink tool."
  "Ed Swartz"
  "Ed Swartz"
  "2012"
  "Internal GIMP procedure"
  (
  )
  (
    (
      "angle"
      "gdouble"
      "ink angle in degrees (-90 <= angle <= 90)"
    )
  )
)
(register-procedure "gimp-context-set-line-miter-limit"
  "Set the line miter limit setting."
  "This procedure modifies the line miter limit setting for stroking lines.
A mitered join is converted to a bevelled join if the miter would extend to a distance of more than (miter-limit * line-width) from the actual join point.

This setting affects the following procedures: 'gimp-drawable-edit-stroke-selection', 'gimp-drawable-edit-stroke-item'."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2015"
  "Internal GIMP procedure"
  (
    (
      "miter-limit"
      "gdouble"
      "The line miter limit setting (0 <= miter-limit <= 100)"
    )
  )
  (
  )
)
(register-procedure "gimp-image-get-parasite"
  "Look up a parasite in an image"
  "Finds and returns the parasite that was previously attached to an image."
  "Jay Cox"
  "Jay Cox"
  "1998"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "name"
      "gchararray"
      "The name of the parasite to find"
    )
  )
  (
    (
      "parasite"
      "GimpParasite"
      "The found parasite"
    )
  )
)
(register-procedure "gimp-context-get-mypaint-brush"
  "Retrieve the currently active MyPaint brush."
  "This procedure returns the name of the currently active MyPaint brush."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2016"
  "Internal GIMP procedure"
  (
  )
  (
    (
      "name"
      "gchararray"
      "The name of the active MyPaint brush"
    )
  )
)
(register-procedure "gimp-vectors-stroke-interpolate"
  "returns polygonal approximation of the stroke."
  "returns polygonal approximation of the stroke."
  "Simon Budig"
  "Simon Budig"
  "2005"
  "Internal GIMP procedure"
  (
    (
      "vectors"
      "GimpVectors"
      "The vectors object"
    )
    (
      "stroke-id"
      "gint"
      "The stroke ID"
    )
    (
      "precision"
      "gdouble"
      "The precision used for the approximation"
    )
  )
  (
    (
      "num-coords"
      "gint"
      "The number of floats returned. (num-coords >= 0)"
    )
    (
      "coords"
      "GimpFloatArray"
      "List of the coords along the path (x0, y0, x1, y1, ...)."
    )
    (
      "closed"
      "gboolean"
      "Whether the stroke is closed or not. (TRUE or FALSE)"
    )
  )
)
(register-procedure "plug-in-fractal-trace"
  "Transform image with the Mandelbrot Fractal"
  "Transform image with the Mandelbrot Fractal"
  "Compatibility procedure. Please see 'gegl:fractal-trace' for credits."
  "Compatibility procedure. Please see 'gegl:fractal-trace' for credits."
  "2018"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
    (
      "xmin"
      "gdouble"
      "xmin fractal image delimiter (-50 <= xmin <= 50)"
    )
    (
      "xmax"
      "gdouble"
      "xmax fractal image delimiter (-50 <= xmax <= 50)"
    )
    (
      "ymin"
      "gdouble"
      "ymin fractal image delimiter (-50 <= ymin <= 50)"
    )
    (
      "ymax"
      "gdouble"
      "ymax fractal image delimiter (-50 <= ymax <= 50)"
    )
    (
      "depth"
      "gint"
      "Trace depth (1 <= depth <= 65536)"
    )
    (
      "outside-type"
      "gint"
      "Outside type @{ WRAP (0), TRANS (1), BLACK (2), WHITE (3) @} (0 <= outside-type <= 3)"
    )
  )
  (
  )
)
(register-procedure "gimp-pdb-temp-name"
  "Generates a unique temporary PDB name."
  "This procedure generates a temporary PDB entry name that is guaranteed to be unique."
  "Andy Thomas"
  "Andy Thomas"
  "1998"
  "Internal GIMP procedure"
  (
  )
  (
    (
      "temp-name"
      "gchararray"
      "A unique temporary name for a temporary PDB entry"
    )
  )
)
(register-procedure "file-raw-placeholder-dng-load"
  "Load files in the DNG raw format via placeholder"
  "This plug-in loads files in the Adobe Digital Negative DNG format by calling placeholder."
  "Tobias Ellinghaus"
  "Tobias Ellinghaus"
  "2016"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "file"
      "GFile"
      "The file to load"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "Output image"
    )
  )
)
(register-procedure "gimp-palette-set-columns"
  "Sets the number of columns to use when displaying the palette"
  "This procedures controls how many colors are shown per row when the palette is being displayed. This value can only be changed if the palette is writable. The maximum allowed value is 64."
  "Sven Neumann <sven@@gimp.org>"
  "Sven Neumann"
  "2005"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The palette name"
    )
    (
      "columns"
      "gint"
      "The new number of columns (0 <= columns <= 64)"
    )
  )
  (
  )
)
(register-procedure "plug-in-edge"
  "Several simple methods for detecting edges"
  "Perform edge detection on the contents of the specified drawable. AMOUNT is an arbitrary constant, WRAPMODE is like displace plug-in (useful for tileable image). EDGEMODE sets the kind of matrix transform applied to the pixels, SOBEL was the method used in older versions."
  "Compatibility procedure. Please see 'gegl:edge' for credits."
  "Compatibility procedure. Please see 'gegl:edge' for credits."
  "2015"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
    (
      "amount"
      "gdouble"
      "Edge detection amount (1 <= amount <= 10)"
    )
    (
      "warpmode"
      "gint"
      "Edge detection behavior @{ NONE (0), WRAP (1), SMEAR (2), BLACK (3) @} (0 <= warpmode <= 3)"
    )
    (
      "edgemode"
      "gint"
      "Edge detection algorithm @{ SOBEL (0), PREWITT (1), GRADIENT (2), ROBERTS (3), DIFFERENTIAL (4), LAPLACE (5) @} (0 <= edgemode <= 5)"
    )
  )
  (
  )
)
(register-procedure "file-psd-load"
  "Loads images from the Photoshop PSD and PSB file formats"
  "This plug-in loads images in Adobe Photoshop (TM) native PSD and PSB format."
  "John Marshall"
  "John Marshall"
  "2007"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "file"
      "GFile"
      "The file to load"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "Output image"
    )
  )
)
(register-procedure "gimp-image-get-floating-sel"
  "Return the floating selection of the image."
  "This procedure returns the image's floating selection, if it exists. If it doesn't exist, -1 is returned as the layer ID."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
  )
  (
    (
      "floating-sel"
      "GimpLayer"
      "The image's floating selection"
    )
  )
)
(register-procedure "plug-in-script-fu-text-console"
  "Provides a text console mode for script-fu development"
  "Provides an interface which allows interactive scheme development."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1997"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
  )
  (
  )
)
(register-procedure "gimp-context-set-sample-criterion"
  "Set the sample criterion setting."
  "This procedure modifies the sample criterion setting. If an operation depends on the colors of the pixels present in a drawable, like when doing a seed fill, this setting controls how color similarity is determined. SELECT_CRITERION_COMPOSITE is the default value.

This setting affects the following procedures: 'gimp-image-select-color', 'gimp-image-select-contiguous-color', 'gimp-drawable-edit-bucket-fill'."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2011"
  "Internal GIMP procedure"
  (
    (
      "sample-criterion"
      "GimpSelectCriterion"
      "The sample criterion setting @{ SELECT-CRITERION-COMPOSITE (0), SELECT-CRITERION-RGB-RED (1), SELECT-CRITERION-RGB-GREEN (2), SELECT-CRITERION-RGB-BLUE (3), SELECT-CRITERION-HSV-HUE (4), SELECT-CRITERION-HSV-SATURATION (5), SELECT-CRITERION-HSV-VALUE (6), SELECT-CRITERION-LCH-LIGHTNESS (7), SELECT-CRITERION-LCH-CHROMA (8), SELECT-CRITERION-LCH-HUE (9), SELECT-CRITERION-ALPHA (10) @}"
    )
  )
  (
  )
)
(register-procedure "gimp-image-new-with-precision"
  "Creates a new image with the specified width, height, type and precision."
  "Creates a new image, undisplayed with the specified extents, type and precision. Indexed images can only be created at GIMP_PRECISION_U8_NON_LINEAR precision. See 'gimp-image-new' for further details."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2012"
  "Internal GIMP procedure"
  (
    (
      "width"
      "gint"
      "The width of the image (1 <= width <= 524288)"
    )
    (
      "height"
      "gint"
      "The height of the image (1 <= height <= 524288)"
    )
    (
      "type"
      "GimpImageBaseType"
      "The type of image @{ RGB (0), GRAY (1), INDEXED (2) @}"
    )
    (
      "precision"
      "GimpPrecision"
      "The precision @{ PRECISION-U8-LINEAR (100), PRECISION-U8-NON-LINEAR (150), PRECISION-U8-PERCEPTUAL (175), PRECISION-U16-LINEAR (200), PRECISION-U16-NON-LINEAR (250), PRECISION-U16-PERCEPTUAL (275), PRECISION-U32-LINEAR (300), PRECISION-U32-NON-LINEAR (350), PRECISION-U32-PERCEPTUAL (375), PRECISION-HALF-LINEAR (500), PRECISION-HALF-NON-LINEAR (550), PRECISION-HALF-PERCEPTUAL (575), PRECISION-FLOAT-LINEAR (600), PRECISION-FLOAT-NON-LINEAR (650), PRECISION-FLOAT-PERCEPTUAL (675), PRECISION-DOUBLE-LINEAR (700), PRECISION-DOUBLE-NON-LINEAR (750), PRECISION-DOUBLE-PERCEPTUAL (775), PRECISION-U8-GAMMA (150), PRECISION-U16-GAMMA (250), PRECISION-U32-GAMMA (350), PRECISION-HALF-GAMMA (550), PRECISION-FLOAT-GAMMA (650), PRECISION-DOUBLE-GAMMA (750) @}"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "The newly created image"
    )
  )
)
(register-procedure "gimp-drawable-brightness-contrast"
  "Modify brightness/contrast in the specified drawable."
  "This procedures allows the brightness and contrast of the specified drawable to be modified. Both 'brightness' and 'contrast' parameters are defined between -1.0 and 1.0."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1997"
  "Internal GIMP procedure"
  (
    (
      "drawable"
      "GimpDrawable"
      "The drawable"
    )
    (
      "brightness"
      "gdouble"
      "Brightness adjustment (-1 <= brightness <= 1)"
    )
    (
      "contrast"
      "gdouble"
      "Contrast adjustment (-1 <= contrast <= 1)"
    )
  )
  (
  )
)
(register-procedure "gimp-pdb-set-data"
  "Associates the specified identifier with the supplied data."
  "This procedure associates the supplied data with the provided identifier. The data may be subsequently retrieved by a call to 'procedural-db-get-data'."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1997"
  "Internal GIMP procedure"
  (
    (
      "identifier"
      "gchararray"
      "The identifier associated with data"
    )
    (
      "bytes"
      "gint"
      "The number of bytes in the data (bytes >= 1)"
    )
    (
      "data"
      "GimpUint8Array"
      "A byte array containing data"
    )
  )
  (
  )
)
(register-procedure "gimp-gradient-segment-get-left-color"
  "Retrieves the left endpoint color of the specified segment"
  "This procedure retrieves the left endpoint color of the specified segment of the specified gradient."
  "Shlomi Fish <shlomif@@iglu.org.il>"
  "Shlomi Fish"
  "2003"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The gradient name"
    )
    (
      "segment"
      "gint"
      "The index of the segment within the gradient (segment >= 0)"
    )
  )
  (
    (
      "color"
      "GimpRGB"
      "The return color"
    )
    (
      "opacity"
      "gdouble"
      "The opacity of the endpoint"
    )
  )
)
(register-procedure "file-pat-load"
  "Loads GIMP patterns"
  "Loads GIMP patterns"
  "Tim Newsome, Michael Natterer"
  "Tim Newsome, Michael Natterer"
  "1997-2019"
  "Internal GIMP procedure"
  (
    (
      "dummy-param"
      "GimpRunMode"
      "Dummy parameter @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "file"
      "GFile"
      "The file to load"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "Output image"
    )
  )
)
(register-procedure "gimp-patterns-set-popup"
  "Sets the current pattern in a pattern selection dialog."
  "Sets the current pattern in a pattern selection dialog."
  "Andy Thomas"
  "Andy Thomas"
  "1998"
  "Internal GIMP procedure"
  (
    (
      "pattern-callback"
      "gchararray"
      "The name of the callback registered for this pop-up"
    )
    (
      "pattern-name"
      "gchararray"
      "The name of the pattern to set as selected"
    )
  )
  (
  )
)
(register-procedure "gimp-selection-invert"
  "Invert the selection mask."
  "This procedure inverts the selection mask. For every pixel in the selection channel, its new value is calculated as (255 - old-value)."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
  )
  (
  )
)
(register-procedure "file-png-load"
  "Loads files in PNG file format"
  "This plug-in loads Portable Network Graphics (PNG) files."
  "Michael Sweet <mike@@easysw.com>, Daniel Skarda <0rfelyus@@atrey.karlin.mff.cuni.cz>"
  "Michael Sweet <mike@@easysw.com>, Daniel Skarda <0rfelyus@@atrey.karlin.mff.cuni.cz>, Nick Lamb <njl195@@zepler.org.uk>"
  "1.3.4 - 03 September 2002"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "file"
      "GFile"
      "The file to load"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "Output image"
    )
  )
)
(register-procedure "file-pdf-load"
  "Load file in PDF format"
  "Loads files in Adobe's Portable Document Format. PDF is designed to be easily processed by a variety of different platforms, and is a distant cousin of PostScript."
  "Nathan Summers, Lionel N."
  "Nathan Summers, Lionel N."
  "2005, 2017"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "file"
      "GFile"
      "The file to load"
    )
    (
      "pdf-password"
      "gchararray"
      "The password to decrypt the encrypted PDF file"
    )
    (
      "reverse-order"
      "gboolean"
      "Load PDF pages in reverse order (TRUE or FALSE)"
    )
    (
      "n-pages"
      "gint"
      "Number of pages to load (0 for all) (n-pages >= 0)"
    )
    (
      "pages"
      "GimpInt32Array"
      "The pages to load in the expected order"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "Output image"
    )
  )
)
(register-procedure "plug-in-normalize"
  "Stretch brightness values to cover the full range"
  "This plug-in performs almost the same operation as the 'contrast autostretch' plug-in, except that it won't allow the color channels to normalize independently. This is actually what most people probably want instead of contrast-autostretch; use c-a only if you wish to remove an undesirable color-tint from a source image which is supposed to contain pure-white and pure-black."
  "Compatibility procedure. Please see 'gegl:stretch-contrast' for credits."
  "Compatibility procedure. Please see 'gegl:stretch-contrast' for credits."
  "2019"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
  )
  (
  )
)
(register-procedure "gimp-progress-cancel"
  "Cancels a running progress."
  "This function cancels the currently running progress."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2004"
  "Internal GIMP procedure"
  (
    (
      "progress-callback"
      "gchararray"
      "The name of the callback registered for this progress"
    )
  )
  (
  )
)
(register-procedure "gimp-layer-copy"
  "Copy a layer."
  "This procedure copies the specified layer and returns the copy. The newly copied layer is for use within the original layer's image. It should not be subsequently added to any other image. The copied layer can optionally have an added alpha channel. This is useful if the background layer in an image is being copied and added to the same image."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "layer"
      "GimpLayer"
      "The layer to copy"
    )
    (
      "add-alpha"
      "gboolean"
      "Add an alpha channel to the copied layer (TRUE or FALSE)"
    )
  )
  (
    (
      "layer-copy"
      "GimpLayer"
      "The newly copied layer"
    )
  )
)
(register-procedure "gimp-drawable-edit-gradient-fill"
  "Draw a gradient between the starting and ending coordinates with the specified gradient type."
  "This tool requires information on the gradient type. It creates the specified variety of gradient using the starting and ending coordinates as defined for each gradient type. For shapeburst gradient types, the context's distance metric is also relevant and can be updated with 'gimp-context-set-distance-metric'.

This procedure is affected by the following context setters: 'gimp-context-set-opacity', 'gimp-context-set-paint-mode', 'gimp-context-set-foreground', 'gimp-context-set-background', 'gimp-context-set-gradient' and all gradient property settings, 'gimp-context-set-distance-metric'."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2018"
  "Internal GIMP procedure"
  (
    (
      "drawable"
      "GimpDrawable"
      "The affected drawable"
    )
    (
      "gradient-type"
      "GimpGradientType"
      "The type of gradient @{ GRADIENT-LINEAR (0), GRADIENT-BILINEAR (1), GRADIENT-RADIAL (2), GRADIENT-SQUARE (3), GRADIENT-CONICAL-SYMMETRIC (4), GRADIENT-CONICAL-ASYMMETRIC (5), GRADIENT-SHAPEBURST-ANGULAR (6), GRADIENT-SHAPEBURST-SPHERICAL (7), GRADIENT-SHAPEBURST-DIMPLED (8), GRADIENT-SPIRAL-CLOCKWISE (9), GRADIENT-SPIRAL-ANTICLOCKWISE (10) @}"
    )
    (
      "offset"
      "gdouble"
      "Offset relates to the starting and ending coordinates specified for the blend. This parameter is mode dependent. (offset >= 0)"
    )
    (
      "supersample"
      "gboolean"
      "Do adaptive supersampling (TRUE or FALSE)"
    )
    (
      "supersample-max-depth"
      "gint"
      "Maximum recursion levels for supersampling (1 <= supersample-max-depth <= 9)"
    )
    (
      "supersample-threshold"
      "gdouble"
      "Supersampling threshold (0 <= supersample-threshold <= 4)"
    )
    (
      "dither"
      "gboolean"
      "Use dithering to reduce banding (TRUE or FALSE)"
    )
    (
      "x1"
      "gdouble"
      "The x coordinate of this gradient's starting point"
    )
    (
      "y1"
      "gdouble"
      "The y coordinate of this gradient's starting point"
    )
    (
      "x2"
      "gdouble"
      "The x coordinate of this gradient's ending point"
    )
    (
      "y2"
      "gdouble"
      "The y coordinate of this gradient's ending point"
    )
  )
  (
  )
)
(register-procedure "gimp-layer-set-composite-space"
  "Set the composite space of the specified layer."
  "This procedure sets the specified layer's composite space."
  "Ell"
  "Ell"
  "2017"
  "Internal GIMP procedure"
  (
    (
      "layer"
      "GimpLayer"
      "The layer"
    )
    (
      "composite-space"
      "GimpLayerColorSpace"
      "The new layer composite space @{ LAYER-COLOR-SPACE-AUTO (0), LAYER-COLOR-SPACE-RGB-LINEAR (1), LAYER-COLOR-SPACE-RGB-PERCEPTUAL (2), LAYER-COLOR-SPACE-LAB (3) @}"
    )
  )
  (
  )
)
(register-procedure "gimp-selection-feather"
  "Feather the image's selection"
  "This procedure feathers the selection. Feathering is implemented using a gaussian blur."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "radius"
      "gdouble"
      "Radius of feather (in pixels) (radius >= 0)"
    )
  )
  (
  )
)
(register-procedure "gimp-item-transform-shear"
  "Shear the specified item about its center by the specified magnitude."
  "This procedure shears the specified item.

The shear type parameter indicates whether the shear will be applied horizontally or vertically. The magnitude can be either positive or negative and indicates the extent (in pixels) to shear by.

If a selection exists and the item is a drawable, the portion of the drawable which lies under the selection is cut from the drawable and made into a floating selection which is then sheared as specified. The return value is the ID of the sheared floating selection.

If there is no selection or the item is not a drawable, the entire item will be sheared according to the specified parameters.
The return value will be equal to the item ID supplied as input.

This procedure is affected by the following context setters: 'gimp-context-set-interpolation', 'gimp-context-set-transform-direction', 'gimp-context-set-transform-resize'."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2010"
  "Internal GIMP procedure"
  (
    (
      "item"
      "GimpItem"
      "The affected item"
    )
    (
      "shear-type"
      "GimpOrientationType"
      "Type of shear @{ ORIENTATION-HORIZONTAL (0), ORIENTATION-VERTICAL (1) @}"
    )
    (
      "magnitude"
      "gdouble"
      "The magnitude of the shear"
    )
  )
  (
    (
      "item"
      "GimpItem"
      "The sheared item"
    )
  )
)
(register-procedure "gimp-drawable-fill"
  "Fill the drawable with the specified fill mode."
  "This procedure fills the drawable. If the fill mode is foreground the current foreground color is used. If the fill mode is background, the current background color is used. If the fill type is white, then white is used. Transparent fill only affects layers with an alpha channel, in which case the alpha channel is set to transparent. If the drawable has no alpha channel, it is filled to white. No fill leaves the drawable's contents undefined.
This procedure is unlike 'gimp-drawable-edit-fill' or the bucket fill tool because it fills regardless of a selection. Its main purpose is to fill a newly created drawable before adding it to the image. This operation cannot be undone."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "drawable"
      "GimpDrawable"
      "The drawable"
    )
    (
      "fill-type"
      "GimpFillType"
      "The type of fill @{ FILL-FOREGROUND (0), FILL-BACKGROUND (1), FILL-WHITE (2), FILL-TRANSPARENT (3), FILL-PATTERN (4) @}"
    )
  )
  (
  )
)
(register-procedure "plug-in-gflare"
  "Produce a lense flare effect using gradients"
  "This plug-in produces a lense flare effect using custom gradients. In interactive call, the user can edit their own favorite lense flare (GFlare) and render it. Edited gflare is saved automatically to the folder in gflare-path, if it is defined in gimprc. In non-interactive call, the user can only render one of GFlare which has been stored in gflare-path already."
  "Eiichi Takamori"
  "Eiichi Takamori, and a lot of GIMP people"
  "1997"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The input image"
    )
    (
      "num-drawables"
      "gint"
      "Number of input drawables (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The input drawables"
    )
    (
      "gflare-name"
      "gchararray"
      "Name of the GFlare to render"
    )
    (
      "center-x"
      "gint"
      "X coordinate of center of GFlare (-524288 <= center-x <= 524288)"
    )
    (
      "center-y"
      "gint"
      "Y coordinate of center of GFlare (-524288 <= center-y <= 524288)"
    )
    (
      "radius"
      "gdouble"
      "Radius of GFlare (pixel) (1 <= radius <= 524288)"
    )
    (
      "rotation"
      "gdouble"
      "Rotation of GFlare (degree) (0 <= rotation <= 360)"
    )
    (
      "hue"
      "gdouble"
      "Hue rotation of GFlare (degree) (0 <= hue <= 360)"
    )
    (
      "vector-angle"
      "gdouble"
      "Vector angle for second flares (degree) (0 <= vector-angle <= 360)"
    )
    (
      "vector-length"
      "gdouble"
      "Vector length for second flares (percentage of Radius) (0 <= vector-length <= 10000)"
    )
    (
      "use-asupsample"
      "gboolean"
      "Use adaptive supersampling while rendering (TRUE or FALSE)"
    )
    (
      "asupsample-max-depth"
      "gint"
      "Max depth for adaptive supersampling (0 <= asupsample-max-depth <= 10)"
    )
    (
      "asupsample-threshold"
      "gdouble"
      "Threshold for adaptive supersampling (0 <= asupsample-threshold <= 1)"
    )
  )
  (
  )
)
(register-procedure "gimp-drawable-edit-stroke-item"
  "Stroke the specified item"
  "This procedure strokes the specified item, painting along its outline (e.g. along a path, or along a channel's boundary), with the active paint method and brush, or using a plain line with configurable properties.

This procedure is affected by the following context setters: 'gimp-context-set-opacity', 'gimp-context-set-paint-mode', 'gimp-context-set-paint-method', 'gimp-context-set-stroke-method', 'gimp-context-set-foreground', 'gimp-context-set-brush' and all brush property settings, 'gimp-context-set-gradient' and all gradient property settings, 'gimp-context-set-line-width' and all line property settings, 'gimp-context-set-antialias'."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2018"
  "Internal GIMP procedure"
  (
    (
      "drawable"
      "GimpDrawable"
      "The drawable to stroke to"
    )
    (
      "item"
      "GimpItem"
      "The item to stroke"
    )
  )
  (
  )
)
(register-procedure "gimp-drawable-colorize-hsl"
  "Render the drawable as a grayscale image seen through a colored glass."
  "Desaturates the drawable, then tints it with the specified color. This tool is only valid on RGB color images. It will not operate on grayscale drawables."
  "Sven Neumann <sven@@gimp.org>"
  "Sven Neumann"
  "2004"
  "Internal GIMP procedure"
  (
    (
      "drawable"
      "GimpDrawable"
      "The drawable"
    )
    (
      "hue"
      "gdouble"
      "Hue in degrees (0 <= hue <= 360)"
    )
    (
      "saturation"
      "gdouble"
      "Saturation in percent (0 <= saturation <= 100)"
    )
    (
      "lightness"
      "gdouble"
      "Lightness in percent (-100 <= lightness <= 100)"
    )
  )
  (
  )
)
(register-procedure "gimp-item-set-expanded"
  "Sets the expanded state of the item."
  "This procedure expands or collapses the item."
  "Ell"
  "Ell"
  "2017"
  "Internal GIMP procedure"
  (
    (
      "item"
      "GimpItem"
      "The item"
    )
    (
      "expanded"
      "gboolean"
      "TRUE to expand the item, FALSE to collapse the item (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "file-cur-save"
  "Saves files in Windows CUR file format"
  "Saves files in Windows CUR file format"
  "Christian Kreibich <christian@@whoop.org>, Nikc M."
  "Christian Kreibich <christian@@whoop.org>, Nikc M."
  "2002-2022"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The image to save"
    )
    (
      "num-drawables"
      "gint"
      "Number of drawables to be saved (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The drawables to save"
    )
    (
      "file"
      "GFile"
      "The file to save to"
    )
    (
      "n-hot-spot-x"
      "gint"
      "Number of hot spot's X coordinates (n-hot-spot-x >= 0)"
    )
    (
      "hot-spot-x"
      "GimpInt32Array"
      "X coordinates of hot spot (one per layer)"
    )
    (
      "n-hot-spot-y"
      "gint"
      "Number of hot spot's Y coordinates (n-hot-spot-y >= 0)"
    )
    (
      "hot-spot-y"
      "GimpInt32Array"
      "Y coordinates of hot spot (one per layer)"
    )
  )
  (
  )
)
(register-procedure "file-pdf-load-thumb"
  "Loads a preview from a PDF file."
  "Loads a small preview of the first page of the PDF format file. Uses the embedded thumbnail if present."
  "Nathan Summers"
  "Nathan Summers"
  "2005"
  "GIMP Plug-In"
  (
    (
      "file"
      "GFile"
      "The file to load the thumbnail from"
    )
    (
      "thumb-size"
      "gint"
      "Preferred thumbnail size (16 <= thumb-size <= 2014)"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "Thumbnail image"
    )
    (
      "image-width"
      "gint"
      "Width of the full-sized image (0 for unknown) (0 <= image-width <= 524288)"
    )
    (
      "image-height"
      "gint"
      "Height of the full-sized image (0 for unknown) (0 <= image-height <= 524288)"
    )
    (
      "image-type"
      "GimpImageType"
      "Type of the image @{ RGB-IMAGE (0), RGBA-IMAGE (1), GRAY-IMAGE (2), GRAYA-IMAGE (3), INDEXED-IMAGE (4), INDEXEDA-IMAGE (5) @}"
    )
    (
      "num-layers"
      "gint"
      "Number of layers in the image (num-layers >= 1)"
    )
  )
)
(register-procedure "gimp-palette-export-text"
  "Write all the colors in a palette to a text file, one hexadecimal value per line (no names)"
  ""
  "Barak Itkin <lightningismyname@@gmail.com>"
  "Barak Itkin"
  "May 15th, 2009"
  "Temporary Procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "dirname"
      "gchararray"
      "Folder for the output file"
    )
    (
      "string"
      "gchararray"
      "The name of the file to create (if a file with this name already exist, it will be replaced)"
    )
  )
  (
  )
)
(register-procedure "file-raw-placeholder-qtk-load"
  "Load files in the QTK raw format via placeholder"
  "This plug-in loads files in Apple's QuickTake QTK raw format by calling placeholder."
  "Tobias Ellinghaus"
  "Tobias Ellinghaus"
  "2016"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "file"
      "GFile"
      "The file to load"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "Output image"
    )
  )
)
(register-procedure "gimp-pdb-get-proc-menu-paths"
  "Queries the procedural database for the procedure's menu paths."
  "This procedure returns the menu paths of the specified procedure."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2019"
  "Internal GIMP procedure"
  (
    (
      "procedure-name"
      "gchararray"
      "The procedure name"
    )
  )
  (
    (
      "menu-paths"
      "GStrv"
      "The menu paths of the plug-in"
    )
  )
)
(register-procedure "gimp-floating-sel-anchor"
  "Anchor the specified floating selection to its associated drawable."
  "This procedure anchors the floating selection to its associated drawable. This is similar to merging with a merge type of ClipToBottomLayer. The floating selection layer is no longer valid after this operation."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "floating-sel"
      "GimpLayer"
      "The floating selection"
    )
  )
  (
  )
)
(register-procedure "plug-in-unit-editor"
  "Create or alter units used in GIMP"
  "The GIMP unit editor"
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer <mitch@@gimp.org>"
  "2000"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
  )
  (
  )
)
(register-procedure "plug-in-goat-exercise-python"
  "Exercise a goat in the Python 3 language"
  "Takes a goat for a walk in Python 3"
  "Jehan"
  "Jehan"
  "2019"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The input image"
    )
    (
      "num-drawables"
      "gint"
      "Number of input drawables (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The input drawables"
    )
  )
  (
  )
)
(register-procedure "gimp-channel-get-opacity"
  "Get the opacity of the specified channel."
  "This procedure returns the specified channel's opacity."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "channel"
      "GimpChannel"
      "The channel"
    )
  )
  (
    (
      "opacity"
      "gdouble"
      "The channel opacity (0 <= opacity <= 100)"
    )
  )
)
(register-procedure "gimp-image-id-is-valid"
  "Returns TRUE if the image ID is valid."
  "This procedure checks if the given image ID is valid and refers to an existing image."
  "Sven Neumann <sven@@gimp.org>"
  "Sven Neumann"
  "2007"
  "Internal GIMP procedure"
  (
    (
      "image-id"
      "gint"
      "The image ID to check"
    )
  )
  (
    (
      "valid"
      "gboolean"
      "Whether the image ID is valid (TRUE or FALSE)"
    )
  )
)
(register-procedure "gimp-channel-get-color"
  "Get the compositing color of the specified channel."
  "This procedure returns the specified channel's compositing color."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "channel"
      "GimpChannel"
      "The channel"
    )
  )
  (
    (
      "color"
      "GimpRGB"
      "The channel compositing color"
    )
  )
)
(register-procedure "gimp-image-set-active-channel"
  "Sets the specified image's active channel."
  "If the channel exists, it is set as the active channel in the image. Any previous active channel or layer is set to inactive. An exception is a previously existing floating selection, in which case this procedure will return an execution error."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "active-channel"
      "GimpChannel"
      "The new image active channel"
    )
  )
  (
  )
)
(register-procedure "gimp-layer-get-opacity"
  "Get the opacity of the specified layer."
  "This procedure returns the specified layer's opacity."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "layer"
      "GimpLayer"
      "The layer"
    )
  )
  (
    (
      "opacity"
      "gdouble"
      "The layer opacity (0 <= opacity <= 100)"
    )
  )
)
(register-procedure "gimp-airbrush-default"
  "Paint in the current brush with varying pressure. Paint application is time-dependent."
  "This tool simulates the use of an airbrush. It is similar to 'gimp-airbrush' except that the pressure is derived from the airbrush tools options box. It the option has not been set the default for the option will be used."
  "Andy Thomas"
  "Andy Thomas"
  "1999"
  "Internal GIMP procedure"
  (
    (
      "drawable"
      "GimpDrawable"
      "The affected drawable"
    )
    (
      "num-strokes"
      "gint"
      "Number of stroke control points (count each coordinate as 2 points) (num-strokes >= 2)"
    )
    (
      "strokes"
      "GimpFloatArray"
      "Array of stroke coordinates: @{ s1.x, s1.y, s2.x, s2.y, ..., sn.x, sn.y @}"
    )
  )
  (
  )
)
(register-procedure "gimp-context-set-defaults"
  "Reset context settings to their default values."
  "This procedure resets context settings used by various procedures to their default value. This procedure will usually be called after a context push so that a script which calls procedures affected by context settings will not be affected by changes in the global context."
  "Kevin Cozens <kcozens@@svn.gnome.org>"
  "Kevin Cozens"
  "2011"
  "Internal GIMP procedure"
  (
  )
  (
  )
)
(register-procedure "file-pnm-load"
  "Loads files in the PNM file format"
  "This plug-in loads files in the various Netpbm portable file formats."
  "Erik Nygren"
  "Erik Nygren"
  "1996"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "file"
      "GFile"
      "The file to load"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "Output image"
    )
  )
)
(register-procedure "gimp-context-set-sample-transparent"
  "Set the sample transparent setting."
  "This procedure modifies the sample transparent setting. If an operation depends on the colors of the pixels present in a drawable, like when doing a seed fill, this setting controls whether transparency is considered to be a unique selectable color. When this setting is TRUE, transparent areas can be selected or filled.

This setting affects the following procedures: 'gimp-image-select-color', 'gimp-image-select-contiguous-color', 'gimp-drawable-edit-bucket-fill'."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2011"
  "Internal GIMP procedure"
  (
    (
      "sample-transparent"
      "gboolean"
      "The sample transparent setting (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "gimp-context-set-ink-speed-sensitivity"
  "Set ink speed sensitivity."
  "Set the ink speed sensitivity for ink tool."
  "Ed Swartz"
  "Ed Swartz"
  "2012"
  "Internal GIMP procedure"
  (
    (
      "speed"
      "gdouble"
      "ink speed sensitivity (0 <= speed <= 1)"
    )
  )
  (
  )
)
(register-procedure "plug-in-pagecurl"
  "Curl up one of the image corners"
  "This plug-in creates a pagecurl-effect."
  "Federico Mena Quintero and Simon Budig"
  "Federico Mena Quintero and Simon Budig"
  "July 2004, 1.0"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The input image"
    )
    (
      "num-drawables"
      "gint"
      "Number of input drawables (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The input drawables"
    )
    (
      "colors"
      "gint"
      "FG- and BG-Color (0), Current gradient (1), Current gradient reversed (2) (0 <= colors <= 2)"
    )
    (
      "edge"
      "gint"
      "Edge to curl (1-4, clockwise, starting in the lower right edge) (1 <= edge <= 4)"
    )
    (
      "orientation"
      "gint"
      "Vertical (0), Horizontal (1) (0 <= orientation <= 1)"
    )
    (
      "shade"
      "gboolean"
      "Shade the region under the curl (TRUE or FALSE)"
    )
  )
  (
    (
      "curl-layer"
      "GimpLayer"
      "The new layer with the curl."
    )
  )
)
(register-procedure "gimp-displays-flush"
  "Flush all internal changes to the user interface"
  "This procedure takes no arguments and returns nothing except a success status. Its purpose is to flush all pending updates of image manipulations to the user interface. It should be called whenever appropriate."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
  )
  (
  )
)
(register-procedure "gimp-item-transform-scale"
  "Scale the specified item."
  "This procedure scales the specified item.

The 2 coordinates specify the new locations of the top-left and bottom-roght corners of the original bounding box.

If a selection exists and the item is a drawable, the portion of the drawable which lies under the selection is cut from the drawable and made into a floating selection which is then scaled as specified. The return value is the ID of the scaled floating selection.

If there is no selection or the item is not a drawable, the entire item will be scaled according to the specified coordinates.
The return value will be equal to the item ID supplied as input.

This procedure is affected by the following context setters: 'gimp-context-set-interpolation', 'gimp-context-set-transform-direction', 'gimp-context-set-transform-resize'."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2010"
  "Internal GIMP procedure"
  (
    (
      "item"
      "GimpItem"
      "The affected item"
    )
    (
      "x0"
      "gdouble"
      "The new x coordinate of the upper-left corner of the scaled region"
    )
    (
      "y0"
      "gdouble"
      "The new y coordinate of the upper-left corner of the scaled region"
    )
    (
      "x1"
      "gdouble"
      "The new x coordinate of the lower-right corner of the scaled region"
    )
    (
      "y1"
      "gdouble"
      "The new y coordinate of the lower-right corner of the scaled region"
    )
  )
  (
    (
      "item"
      "GimpItem"
      "The scaled item"
    )
  )
)
(register-procedure "gimp-item-get-color-tag"
  "Get the color tag of the specified item."
  "This procedure returns the specified item's color tag."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2016"
  "Internal GIMP procedure"
  (
    (
      "item"
      "GimpItem"
      "The item"
    )
  )
  (
    (
      "color-tag"
      "GimpColorTag"
      "The item's color tag @{ COLOR-TAG-NONE (0), COLOR-TAG-BLUE (1), COLOR-TAG-GREEN (2), COLOR-TAG-YELLOW (3), COLOR-TAG-ORANGE (4), COLOR-TAG-BROWN (5), COLOR-TAG-RED (6), COLOR-TAG-VIOLET (7), COLOR-TAG-GRAY (8) @}"
    )
  )
)
(register-procedure "file-pbm-save"
  "Exports files in the PBM file format"
  "PBM exporting produces mono images without transparency."
  "Erik Nygren"
  "Erik Nygren"
  "1996"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The image to save"
    )
    (
      "num-drawables"
      "gint"
      "Number of drawables to be saved (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The drawables to save"
    )
    (
      "file"
      "GFile"
      "The file to save to"
    )
    (
      "raw"
      "gboolean"
      "TRUE for raw output, FALSE for ascii output (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "gimp-online-wiki"
  "Bookmark to the wiki of GIMP"
  ""
  "Alexandre Prokoudine <alexandre.prokoudine@@gmail.com>"
  "Alexandre Prokoudine <alexandre.prokoudine@@gmail.com>"
  "2018"
  "Temporary Procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
  )
  (
  )
)
(register-procedure "gimp-context-set-gradient-fg-bg-rgb"
  "Sets the built-in FG-BG RGB gradient as the active gradient."
  "This procedure sets the built-in FG-BG RGB gradient as the active gradient. The gradient will be used for subsequent gradient operations."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2018"
  "Internal GIMP procedure"
  (
  )
  (
  )
)
(register-procedure "gimp-get-default-unit"
  "Get the default unit (taken from the user's locale)."
  "Returns the default unit's integer ID."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
  )
  (
    (
      "unit-id"
      "GimpUnit"
      "Default unit"
    )
  )
)
(register-procedure "gimp-item-get-image"
  "Returns the item's image."
  "This procedure returns the item's image."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "item"
      "GimpItem"
      "The item"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "The item's image"
    )
  )
)
(register-procedure "file-pgm-save"
  "Exports files in the PGM file format"
  "PGM exporting produces grayscale images without transparency."
  "Erik Nygren"
  "Erik Nygren"
  "1996"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The image to save"
    )
    (
      "num-drawables"
      "gint"
      "Number of drawables to be saved (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The drawables to save"
    )
    (
      "file"
      "GFile"
      "The file to save to"
    )
    (
      "raw"
      "gboolean"
      "TRUE for raw output, FALSE for ascii output (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "gimp-selection-flood"
  "Remove holes from the image's selection"
  "This procedure removes holes from the selection, that can come from selecting a patchy area with the Fuzzy Select Tool. In technical terms this procedure floods the selection. See the Algorithms page in the developer wiki for details."
  "Ell"
  "Ell"
  "2016"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
  )
  (
  )
)
(register-procedure "gimp-layer-set-opacity"
  "Set the opacity of the specified layer."
  "This procedure sets the specified layer's opacity."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "layer"
      "GimpLayer"
      "The layer"
    )
    (
      "opacity"
      "gdouble"
      "The new layer opacity (0 <= opacity <= 100)"
    )
  )
  (
  )
)
(register-procedure "gimp-channel-set-opacity"
  "Set the opacity of the specified channel."
  "This procedure sets the specified channel's opacity."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "channel"
      "GimpChannel"
      "The channel"
    )
    (
      "opacity"
      "gdouble"
      "The new channel opacity (0 <= opacity <= 100)"
    )
  )
  (
  )
)
(register-procedure "file-raw-placeholder-hasselblad-load"
  "Load files in the Hasselblad raw formats via placeholder"
  "This plug-in loads files in Hasselblad's raw formats by calling placeholder."
  "Tobias Ellinghaus"
  "Tobias Ellinghaus"
  "2016"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "file"
      "GFile"
      "The file to load"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "Output image"
    )
  )
)
(register-procedure "gimp-image-convert-color-profile"
  "Convert the image's layers to a color profile"
  "This procedure converts from the image's color profile (or the default RGB or grayscale profile if none is set) to the given color profile. Only RGB and grayscale color profiles are accepted, according to the image's type."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2015"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "num-bytes"
      "gint"
      "Number of bytes in the color_profile array (num-bytes >= 0)"
    )
    (
      "color-profile"
      "GimpUint8Array"
      "The serialized color profile"
    )
    (
      "intent"
      "GimpColorRenderingIntent"
      "Rendering intent @{ COLOR-RENDERING-INTENT-PERCEPTUAL (0), COLOR-RENDERING-INTENT-RELATIVE-COLORIMETRIC (1), COLOR-RENDERING-INTENT-SATURATION (2), COLOR-RENDERING-INTENT-ABSOLUTE-COLORIMETRIC (3) @}"
    )
    (
      "bpc"
      "gboolean"
      "Black point compensation (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "gimp-context-get-font"
  "Retrieve the currently active font."
  "This procedure returns the name of the currently active font."
  "Michael Natterer <mitch@@gimp.org> & Sven Neumann <sven@@gimp.org>"
  "Michael Natterer & Sven Neumann"
  "2004"
  "Internal GIMP procedure"
  (
  )
  (
    (
      "name"
      "gchararray"
      "The name of the active font"
    )
  )
)
(register-procedure "script-fu-guide-new-percent"
  "Add a guide at the position specified as a percentage of the image size"
  ""
  "Alan Horkan"
  "Alan Horkan, 2004"
  "April 2004"
  "Temporary Procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input Image"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input Drawable"
    )
    (
      "option"
      "gint"
      "_Direction"
    )
    (
      "adjustment"
      "gdouble"
      "_Position (in %)"
    )
  )
  (
  )
)
(register-procedure "gimp-drawable-merge-shadow"
  "Merge the shadow buffer with the specified drawable."
  "This procedure combines the contents of the drawable's shadow buffer (for temporary processing) with the specified drawable. The 'undo' parameter specifies whether to add an undo step for the operation. Requesting no undo is useful for such applications as 'auto-apply'."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "drawable"
      "GimpDrawable"
      "The drawable"
    )
    (
      "undo"
      "gboolean"
      "Push merge to undo stack? (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "gimp-image-new"
  "Creates a new image with the specified width, height, and type."
  "Creates a new image, undisplayed, with the specified extents and type. A layer should be created and added before this image is displayed, or subsequent calls to 'gimp-display-new' with this image as an argument will fail. Layers can be created using the 'gimp-layer-new' commands. They can be added to an image using the 'gimp-image-insert-layer' command.

If your image's type if INDEXED, a colormap must also be added with 'gimp-image-set-colormap'. An indexed image without a colormap will output unexpected colors."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "width"
      "gint"
      "The width of the image (1 <= width <= 524288)"
    )
    (
      "height"
      "gint"
      "The height of the image (1 <= height <= 524288)"
    )
    (
      "type"
      "GimpImageBaseType"
      "The type of image @{ RGB (0), GRAY (1), INDEXED (2) @}"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "The newly created image"
    )
  )
)
(register-procedure "gimp-image-get-channel-by-name"
  "Find a channel with a given name in an image."
  "This procedure returns the channel with the given name in the specified image."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2011"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "name"
      "gchararray"
      "The name of the channel to find"
    )
  )
  (
    (
      "channel"
      "GimpChannel"
      "The channel with the specified name"
    )
  )
)
(register-procedure "gimp-edit-paste-as-new-image"
  "Paste buffer to a new image."
  "This procedure pastes a copy of the internal GIMP edit buffer to a new image. The GIMP edit buffer will be empty unless a call was previously made to either 'gimp-edit-cut' or 'gimp-edit-copy'. This procedure returns the new image or -1 if the edit buffer was empty."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2005"
  "Internal GIMP procedure"
  (
  )
  (
    (
      "image"
      "GimpImage"
      "The new image"
    )
  )
)
(register-procedure "gimp-item-set-name"
  "Set the name of the specified item."
  "This procedure sets the specified item's name."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "item"
      "GimpItem"
      "The item"
    )
    (
      "name"
      "gchararray"
      "The new item name"
    )
  )
  (
  )
)
(register-procedure "file-xbm-save"
  "Export a file in X10 or X11 bitmap (XBM) file format"
  "Export a file in X10 or X11 bitmap (XBM) file format. XBM is a lossless format for flat black-and-white (two color indexed) images."
  "Gordon Matzigkeit"
  "Gordon Matzigkeit"
  "1998"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The image to save"
    )
    (
      "num-drawables"
      "gint"
      "Number of drawables to be saved (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The drawables to save"
    )
    (
      "file"
      "GFile"
      "The file to save to"
    )
    (
      "save-comment"
      "gboolean"
      "Write a comment at the beginning of the file. (TRUE or FALSE)"
    )
    (
      "gimp-comment"
      "gchararray"
      "Image description (maximum 72 bytes)"
    )
    (
      "x10-format"
      "gboolean"
      "Export in X10 format (TRUE or FALSE)"
    )
    (
      "use-hot-spot"
      "gboolean"
      "Write hotspot information (TRUE or FALSE)"
    )
    (
      "hot-spot-x"
      "gint"
      "X coordinate of hotspot (0 <= hot-spot-x <= 524288)"
    )
    (
      "hot-spot-y"
      "gint"
      "Y coordinate of hotspot (0 <= hot-spot-y <= 524288)"
    )
    (
      "prefix"
      "gchararray"
      "Identifier prefix [determined from filename]"
    )
    (
      "write-mask"
      "gboolean"
      "Write extra mask file (TRUE or FALSE)"
    )
    (
      "mask-suffix"
      "gchararray"
      "Suffix of the mask file"
    )
  )
  (
  )
)
(register-procedure "script-fu-circuit"
  "Fill the selected region (or alpha) with traces like those on a circuit board"
  ""
  "Adrian Likins <adrian@@gimp.org>"
  "Adrian Likins"
  "10/17/97"
  "Temporary Procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Image"
    )
    (
      "drawable"
      "GimpDrawable"
      "Drawable"
    )
    (
      "adjustment"
      "gdouble"
      "Oilify mask size"
    )
    (
      "adjustment-2"
      "gdouble"
      "Circuit seed"
    )
    (
      "toggle"
      "gboolean"
      "No background (only for separate layer) (TRUE or FALSE)"
    )
    (
      "toggle-2"
      "gboolean"
      "Keep selection (TRUE or FALSE)"
    )
    (
      "toggle-3"
      "gboolean"
      "Separate layer (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "gimp-text-layer-set-justification"
  "Set the justification of the text in a text layer."
  "This procedure sets the alignment of the lines in the text layer relative to each other."
  "Marcus Heese <heese@@cip.ifi.lmu.de>"
  "Marcus Heese"
  "2008"
  "Internal GIMP procedure"
  (
    (
      "layer"
      "GimpLayer"
      "The text layer"
    )
    (
      "justify"
      "GimpTextJustification"
      "The justification for your text. @{ TEXT-JUSTIFY-LEFT (0), TEXT-JUSTIFY-RIGHT (1), TEXT-JUSTIFY-CENTER (2), TEXT-JUSTIFY-FILL (3) @}"
    )
  )
  (
  )
)
(register-procedure "gimp-context-set-ink-size"
  "Set ink blob size in pixels."
  "Set the ink blob size in pixels for ink tool."
  "Ed Swartz"
  "Ed Swartz"
  "2012"
  "Internal GIMP procedure"
  (
    (
      "size"
      "gdouble"
      "ink blob size in pixels (0 <= size <= 200)"
    )
  )
  (
  )
)
(register-procedure "gimp-layer-get-composite-space"
  "Get the composite space of the specified layer."
  "This procedure returns the specified layer's composite space."
  "Ell"
  "Ell"
  "2017"
  "Internal GIMP procedure"
  (
    (
      "layer"
      "GimpLayer"
      "The layer"
    )
  )
  (
    (
      "composite-space"
      "GimpLayerColorSpace"
      "The layer composite space @{ LAYER-COLOR-SPACE-AUTO (0), LAYER-COLOR-SPACE-RGB-LINEAR (1), LAYER-COLOR-SPACE-RGB-PERCEPTUAL (2), LAYER-COLOR-SPACE-LAB (3) @}"
    )
  )
)
(register-procedure "file-raw-placeholder-ari-load"
  "Load files in the ARI raw format via placeholder"
  "This plug-in loads files in Arriflex' raw ARI format by calling placeholder."
  "Tobias Ellinghaus"
  "Tobias Ellinghaus"
  "2016"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "file"
      "GFile"
      "The file to load"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "Output image"
    )
  )
)
(register-procedure "gimp-image-grid-get-offset"
  "Gets the offset of an image's grid."
  "This procedure retrieves the horizontal and vertical offset of an image's grid. It takes the image as parameter."
  "Sylvain Foret"
  "Sylvain Foret"
  "2005"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
  )
  (
    (
      "xoffset"
      "gdouble"
      "The image's grid horizontal offset"
    )
    (
      "yoffset"
      "gdouble"
      "The image's grid vertical offset"
    )
  )
)
(register-procedure "gimp-gradient-delete"
  "Deletes a gradient"
  "This procedure deletes a gradient"
  "Shlomi Fish <shlomif@@iglu.org.il>"
  "Shlomi Fish"
  "2003"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The gradient name"
    )
  )
  (
  )
)
(register-procedure "file-dicom-load"
  "Loads files of the dicom file format"
  "Load a file in the DICOM standard format. The standard is defined at http://medical.nema.org/. The plug-in currently only supports reading images with uncompressed pixel sections."
  "Dov Grobgeld"
  "Dov Grobgeld <dov@@imagic.weizmann.ac.il>"
  "2003"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "file"
      "GFile"
      "The file to load"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "Output image"
    )
  )
)
(register-procedure "gimp-pdb-set-file-proc-mime-types"
  "Associates MIME types with a file handler procedure."
  "Registers MIME types for a file handler procedure. This allows GIMP to determine the MIME type of the file opened or saved using this procedure. It is recommended that only one MIME type is registered per file procedure; when registering more than one MIME type, GIMP will associate the first one with files opened or saved with this procedure."
  "Sven Neumann <sven@@gimp.org>"
  "Sven Neumann"
  "2004"
  "Internal GIMP procedure"
  (
    (
      "procedure-name"
      "gchararray"
      "The name of the procedure to associate a MIME type with."
    )
    (
      "mime-types"
      "gchararray"
      "A comma-separated list of MIME types, such as \"image/jpeg\"."
    )
  )
  (
  )
)
(register-procedure "gimp-image-undo-thaw"
  "Thaw the image's undo stack."
  "This procedure thaws the image's undo stack, allowing subsequent operations to store their undo steps. This is generally called in conjunction with 'gimp-image-undo-freeze' to temporarily freeze an image undo stack. 'gimp-image-undo-thaw' does NOT free the undo stack as 'gimp-image-undo-enable' does, so is suited for situations where one wishes to leave the undo stack in the same state in which one found it despite non-destructively playing with the image in the meantime. An example would be in-situ plug-in previews. Balancing freezes and thaws and ensuring image consistency is the responsibility of the caller."
  "Adam D. Moss"
  "Adam D. Moss"
  "1999"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
  )
  (
    (
      "thawed"
      "gboolean"
      "TRUE if the image undo has been thawed (TRUE or FALSE)"
    )
  )
)
(register-procedure "gimp-unit-get-singular"
  "Returns the singular form of the unit."
  "This procedure returns the singular form of the unit."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "1999"
  "Internal GIMP procedure"
  (
    (
      "unit-id"
      "GimpUnit"
      "The unit's integer ID"
    )
  )
  (
    (
      "singular"
      "gchararray"
      "The unit's singular form"
    )
  )
)
(register-procedure "plug-in-drawable-compose"
  "Compose an image from multiple drawables of gray images"
  "This function creates a new image from multiple drawables of gray images"
  "Peter Kirchgessner"
  "Peter Kirchgessner (peter@@kirchgessner.net)"
  "1998"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The input image"
    )
    (
      "num-drawables"
      "gint"
      "Number of input drawables (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The input drawables"
    )
    (
      "drawable-2"
      "GimpDrawable"
      "Second input drawable"
    )
    (
      "drawable-3"
      "GimpDrawable"
      "Third input drawable"
    )
    (
      "drawable-4"
      "GimpDrawable"
      "Fourth input drawable"
    )
    (
      "compose-type"
      "gchararray"
      "What to compose: \"RGB\", \"RGBA\", \"HSV\", \"HSL\", \"CMYK\", \"LAB\", \"LCH\", \"YCbCr_ITU_R470\", \"YCbCr_ITU_R709\", \"YCbCr_ITU_R470_256\", \"YCbCr_ITU_R709_256\""
    )
  )
  (
    (
      "new-image"
      "GimpImage"
      "Output image"
    )
  )
)
(register-procedure "file-gbr-load"
  "Loads GIMP brushes"
  "Loads GIMP brushes (1 or 4 bpp and old .gpb format)"
  "Tim Newsome, Jens Lautenbacher, Sven Neumann, Michael Natterer"
  "Tim Newsome, Jens Lautenbacher, Sven Neumann, Michael Natterer"
  "1995-2019"
  "Internal GIMP procedure"
  (
    (
      "dummy-param"
      "GimpRunMode"
      "Dummy parameter @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "file"
      "GFile"
      "The file to load"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "Output image"
    )
  )
)
(register-procedure "gimp-edit-cut"
  "Cut from the specified drawables."
  "If there is a selection in the image, then the area specified by the selection is cut from the specified drawables and placed in an internal GIMP edit buffer. It can subsequently be retrieved using the 'gimp-edit-paste' command. If there is no selection and only one specified drawable, then the specified drawable will be removed and its contents stored in the internal GIMP edit buffer. This procedure will fail if the selected area lies completely outside the bounds of the current drawables and there is nothing to cut from."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "num-drawables"
      "gint"
      "The number of drawables (num-drawables >= 1)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The drawables to cut from"
    )
  )
  (
    (
      "non-empty"
      "gboolean"
      "TRUE if the cut was successful, FALSE if there was nothing to copy from (TRUE or FALSE)"
    )
  )
)
(register-procedure "gimp-context-set-gradient-reverse"
  "Set the gradient reverse setting."
  "Set the gradient reverse setting for paint tools and the gradient tool."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2018"
  "Internal GIMP procedure"
  (
    (
      "reverse"
      "gboolean"
      "Reverse (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "plug-in-gimpressionist"
  "Performs various artistic operations"
  "Performs various artistic operations on an image"
  "Vidar Madsen <vidar@@prosalg.no>"
  "Vidar Madsen"
  "v1.0, November 2003"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The input image"
    )
    (
      "num-drawables"
      "gint"
      "Number of input drawables (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The input drawables"
    )
    (
      "preset"
      "gchararray"
      "Preset Name"
    )
  )
  (
  )
)
(register-procedure "gimp-layer-resize-to-image-size"
  "Resize a layer to the image size."
  "This procedure resizes the layer so that it's new width and height are equal to the width and height of its image container."
  "Manish Singh"
  "Manish Singh"
  "2003"
  "Internal GIMP procedure"
  (
    (
      "layer"
      "GimpLayer"
      "The layer to resize"
    )
  )
  (
  )
)
(register-procedure "gimp-help"
  "Load a help page."
  "This procedure loads the specified help page into the helpbrowser or what ever is configured as help viewer. The help page is identified by its domain and ID: if help_domain is NULL, we use the help_domain which was registered using the 'gimp-plugin-help-register' procedure. If help_domain is NULL and no help domain was registered, the help domain of the main GIMP installation is used."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2000"
  "Internal GIMP procedure"
  (
    (
      "help-domain"
      "gchararray"
      "The help domain in which help_id is registered"
    )
    (
      "help-id"
      "gchararray"
      "The help page's ID"
    )
  )
  (
  )
)
(register-procedure "plug-in-curve-bend"
  "Bend the image using two control curves"
  "This plug-in does bend the active layer If there is a current selection it is copied to floating selection and the curve_bend distortion is done on the floating selection. If work_on_copy parameter is TRUE, the curve_bend distortion is done on a copy of the active layer (or floating selection). The upper and lower edges are bent in shape of 2 spline curves. both (upper and lower) curves are determined by upto 17 points or by 256 Y-Values if curve_type == 1 (freehand mode) If rotation is not 0, the layer is rotated before and rotated back after the bend operation. This enables bending in other directions than vertical. bending usually changes the size of the handled layer. this plug-in sets the offsets of the handled layer to keep its center at the same position"
  "Wolfgang Hofer (hof@@hotbot.com)"
  "Wolfgang Hofer"
  "v1.3.18 (2003/08/26)"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The input image"
    )
    (
      "num-drawables"
      "gint"
      "Number of input drawables (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The input drawables"
    )
    (
      "rotation"
      "gdouble"
      "Direction @{angle 0 to 360 degree @} of the bend effect (0 <= rotation <= 360)"
    )
    (
      "smoothing"
      "gboolean"
      "Smoothing (TRUE or FALSE)"
    )
    (
      "antialias"
      "gboolean"
      "Antialias (TRUE or FALSE)"
    )
    (
      "work-on-copy"
      "gboolean"
      "Copy the drawable and bend the copy (TRUE or FALSE)"
    )
    (
      "curve-type"
      "gint"
      "@{ 0 == smooth (use 17 points), 1 == freehand (use 256 val_y) @} (0 <= curve-type <= 1)"
    )
    (
      "argc-upper-point-x"
      "gint"
      "Argc upper point X (2 <= argc-upper-point-x <= 17)"
    )
    (
      "upper-point-x"
      "GimpFloatArray"
      "Array of 17 x point coords @{ 0.0 <= x <= 1.0 or -1 for unused point @}"
    )
    (
      "argc-upper-point-y"
      "gint"
      "Argc upper point Y (2 <= argc-upper-point-y <= 17)"
    )
    (
      "upper-point-y"
      "GimpFloatArray"
      "Array of 17 y point coords @{ 0.0 <= y <= 1.0 or -1 for unused point @}"
    )
    (
      "argc-lower-point-x"
      "gint"
      "Argc lower point X (2 <= argc-lower-point-x <= 17)"
    )
    (
      "lower-point-x"
      "GimpFloatArray"
      "Array of 17 x point coords @{ 0.0 <= x <= 1.0 or -1 for unused point @}"
    )
    (
      "argc-lower-point-y"
      "gint"
      "Argc lower point Y (2 <= argc-lower-point-y <= 17)"
    )
    (
      "lower-point-y"
      "GimpFloatArray"
      "Array of 17 y point coords @{ 0.0 <= y <= 1.0 or -1 for unused point @}"
    )
    (
      "argc-upper-val-y"
      "gint"
      "Argc upper val Y (256 <= argc-upper-val-y <= 256)"
    )
    (
      "upper-val-y"
      "GimpUint8Array"
      "Array of 256 y freehand coords @{ 0 <= y <= 255 @}"
    )
    (
      "argc-lower-val-y"
      "gint"
      "Argc lower val Y (256 <= argc-lower-val-y <= 256)"
    )
    (
      "lower-val-y"
      "GimpUint8Array"
      "Array of 256 y freehand coords @{ 0 <= y <= 255 @}"
    )
  )
  (
    (
      "bent-layer"
      "GimpLayer"
      "The transformed layer"
    )
  )
)
(register-procedure "gimp-image-lower-item-to-bottom"
  "Lower the specified item to the bottom of its level in its item tree"
  "This procedure lowers the specified item to bottom of its level in the item tree. It will not move the layer if there is no layer below it."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2010"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "item"
      "GimpItem"
      "The item to lower to bottom"
    )
  )
  (
  )
)
(register-procedure "gimp-item-transform-flip-simple"
  "Flip the specified item either vertically or horizontally."
  "This procedure flips the specified item.

If a selection exists and the item is a drawable, the portion of the drawable which lies under the selection is cut from the drawable and made into a floating selection which is then flipped. If auto_center is set to TRUE, the flip is around the selection's center. Otherwise, the coordinate of the axis needs to be specified. The return value is the ID of the flipped floating selection.

If there is no selection or the item is not a drawable, the entire item will be flipped around its center if auto_center is set to TRUE, otherwise the coordinate of the axis needs to be specified. The return value will be equal to the item ID supplied as input.

This procedure is affected by the following context setters: 'gimp-context-set-transform-resize'."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2004"
  "Internal GIMP procedure"
  (
    (
      "item"
      "GimpItem"
      "The affected item"
    )
    (
      "flip-type"
      "GimpOrientationType"
      "Type of flip @{ ORIENTATION-HORIZONTAL (0), ORIENTATION-VERTICAL (1) @}"
    )
    (
      "auto-center"
      "gboolean"
      "Whether to automatically position the axis in the selection center (TRUE or FALSE)"
    )
    (
      "axis"
      "gdouble"
      "coord. of flip axis"
    )
  )
  (
    (
      "item"
      "GimpItem"
      "The flipped item"
    )
  )
)
(register-procedure "python-fu-test-gimp-pdb"
  "Test Gimp PDB"
  "Test Gimp PDB procedures by calling them with improvised arguments."
  "Lloyd Konneker"
  "Copyright 2020 Lloyd Konneker"
  "2020"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The input image"
    )
    (
      "num-drawables"
      "gint"
      "Number of input drawables (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The input drawables"
    )
    (
      "shouldTestScriptFu"
      "gint"
      "blurb (0 <= shouldTestScriptFu <= 1)"
    )
    (
      "shouldTestPythonFu"
      "gint"
      "blurb (0 <= shouldTestPythonFu <= 1)"
    )
    (
      "shouldTestCPlugin"
      "gint"
      "blurb (0 <= shouldTestCPlugin <= 1)"
    )
    (
      "shouldTestExportImport"
      "gint"
      "blurb (0 <= shouldTestExportImport <= 1)"
    )
    (
      "shouldTestTemporary"
      "gint"
      "blurb (0 <= shouldTestTemporary <= 1)"
    )
    (
      "shouldTestOther"
      "gint"
      "blurb (0 <= shouldTestOther <= 1)"
    )
    (
      "oneToTest"
      "gchararray"
      "blurb"
    )
  )
  (
  )
)
(register-procedure "gimp-palette-get-info"
  "Retrieve information about the specified palette."
  "This procedure retrieves information about the specified palette. This includes the name, and the number of colors."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2004"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The palette name"
    )
  )
  (
    (
      "num-colors"
      "gint"
      "The number of colors in the palette"
    )
  )
)
(register-procedure "python-fu-dump-pdb"
  "blurb"
  "help message"
  "author"
  "copyright"
  "year"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The input image"
    )
    (
      "num-drawables"
      "gint"
      "Number of input drawables (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The input drawables"
    )
  )
  (
  )
)
(register-procedure "python-fu-palette-to-gradient"
  "Create a gradient using colors from the palette"
  "Create a new gradient using colors from the palette."
  "Carol Spears, reproduced from previous work by Adrian Likins and Jeff Trefftz"
  "Carol Spears"
  "2006"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode (unused) @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "palette"
      "gchararray"
      "Palette name or empty string for the currently selected palette"
    )
  )
  (
    (
      "new-gradient"
      "gchararray"
      "Read-write integer property."
    )
  )
)
(register-procedure "gimp-context-get-ink-size"
  "Get ink blob size in pixels."
  "Get the ink blob size in pixels for ink tool."
  "Ed Swartz"
  "Ed Swartz"
  "2012"
  "Internal GIMP procedure"
  (
  )
  (
    (
      "size"
      "gdouble"
      "ink blob size in pixels (0 <= size <= 200)"
    )
  )
)
(register-procedure "gimp-image-flip"
  "Flips the image horizontally or vertically."
  "This procedure flips (mirrors) the image."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "flip-type"
      "GimpOrientationType"
      "Type of flip @{ ORIENTATION-HORIZONTAL (0), ORIENTATION-VERTICAL (1) @}"
    )
  )
  (
  )
)
(register-procedure "script-fu-reverse-layers"
  "Reverse the order of layers in the image"
  ""
  "Akkana Peck"
  "Akkana Peck"
  "August 2006"
  "Temporary Procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Image"
    )
    (
      "drawable"
      "GimpDrawable"
      "Drawable"
    )
  )
  (
  )
)
(register-procedure "gimp-drawable-equalize"
  "Equalize the contents of the specified drawable."
  "This procedure equalizes the contents of the specified drawable. Each intensity channel is equalized independently. The equalized intensity is given as inten' = (255 - inten). The 'mask_only' option specifies whether to adjust only the area of the image within the selection bounds, or the entire image based on the histogram of the selected area. If there is no selection, the entire image is adjusted based on the histogram for the entire image."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "drawable"
      "GimpDrawable"
      "The drawable"
    )
    (
      "mask-only"
      "gboolean"
      "Equalization option (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "gimp-image-get-xcf-file"
  "Returns the XCF file for the specified image."
  "This procedure returns the XCF file associated with the image. If there is no such file, this procedure returns %NULL."
  "Eric Grivel <gimp@@lumenssolutions.com>"
  "Eric Grivel"
  "2011"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
  )
  (
    (
      "file"
      "GFile"
      "The imported XCF file."
    )
  )
)
(register-procedure "gimp-image-floating-sel-attached-to"
  "Return the drawable the floating selection is attached to."
  "This procedure returns the drawable the image's floating selection is attached to, if it exists. If it doesn't exist, -1 is returned as the drawable ID."
  "Wolfgang Hofer"
  "Wolfgang Hofer"
  "1998"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
  )
  (
    (
      "drawable"
      "GimpDrawable"
      "The drawable the floating selection is attached to"
    )
  )
)
(register-procedure "gimp-palettes-close-popup"
  "Close the palette selection dialog."
  "This procedure closes an opened palette selection dialog."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2002"
  "Internal GIMP procedure"
  (
    (
      "palette-callback"
      "gchararray"
      "The name of the callback registered for this pop-up"
    )
  )
  (
  )
)
(register-procedure "gimp-context-set-gradient-fg-bg-hsv-ccw"
  "Sets the built-in FG-BG HSV (ccw) gradient as the active gradient."
  "This procedure sets the built-in FG-BG HSV (ccw) gradient as the active gradient. The gradient will be used for subsequent gradient operations."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2018"
  "Internal GIMP procedure"
  (
  )
  (
  )
)
(register-procedure "plug-in-lic"
  "Special effects that nobody understands"
  "No help yet"
  "Tom Bech & Federico Mena Quintero"
  "Tom Bech & Federico Mena Quintero"
  "Version 0.14, September 24 1997"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The input image"
    )
    (
      "num-drawables"
      "gint"
      "Number of input drawables (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The input drawables"
    )
  )
  (
  )
)
(register-procedure "script-fu-add-bevel"
  "Add a beveled border to an image"
  ""
  "Andrew Donkin <ard@@cs.waikato.ac.nz>"
  "Andrew Donkin"
  "1997/11/06"
  "Temporary Procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Image"
    )
    (
      "drawable"
      "GimpDrawable"
      "Drawable"
    )
    (
      "adjustment"
      "gdouble"
      "Thickness"
    )
    (
      "toggle"
      "gboolean"
      "Work on copy (TRUE or FALSE)"
    )
    (
      "toggle-2"
      "gboolean"
      "Keep bump layer (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "gimp-context-set-transform-direction"
  "Set the transform direction."
  "This procedure modifies the transform direction setting.

This setting affects affects the following procedures: 'gimp-item-transform-flip', 'gimp-item-transform-perspective', 'gimp-item-transform-rotate', 'gimp-item-transform-scale', 'gimp-item-transform-shear', 'gimp-item-transform-2d', 'gimp-item-transform-matrix'."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2010"
  "Internal GIMP procedure"
  (
    (
      "transform-direction"
      "GimpTransformDirection"
      "The transform direction @{ TRANSFORM-FORWARD (0), TRANSFORM-BACKWARD (1) @}"
    )
  )
  (
  )
)
(register-procedure "gimp-drawable-get-height"
  "Returns the height of the drawable."
  "This procedure returns the specified drawable's height in pixels."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "drawable"
      "GimpDrawable"
      "The drawable"
    )
  )
  (
    (
      "height"
      "gint"
      "Height of drawable"
    )
  )
)
(register-procedure "script-fu-weave"
  "Create a new layer filled with a weave effect to be used as an overlay or bump map"
  ""
  "Federico Mena Quintero"
  "Federico Mena Quintero"
  "June 1997"
  "Temporary Procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Image to Weave"
    )
    (
      "drawable"
      "GimpDrawable"
      "Drawable to Weave"
    )
    (
      "adjustment"
      "gdouble"
      "Ribbon width"
    )
    (
      "adjustment-2"
      "gdouble"
      "Ribbon spacing"
    )
    (
      "adjustment-3"
      "gdouble"
      "Shadow darkness"
    )
    (
      "adjustment-4"
      "gdouble"
      "Shadow depth"
    )
    (
      "adjustment-5"
      "gdouble"
      "Thread length"
    )
    (
      "adjustment-6"
      "gdouble"
      "Thread density"
    )
    (
      "adjustment-7"
      "gdouble"
      "Thread intensity"
    )
  )
  (
  )
)
(register-procedure "gimp-heal"
  "Heal from the source to the dest drawable using the current brush"
  "This tool heals the source drawable starting at the specified source coordinates to the dest drawable. For image healing, if the sum of the src coordinates and subsequent stroke offsets exceeds the extents of the src drawable, then no paint is transferred. The healing tool is capable of transforming between any image types except RGB->Indexed."
  "Kevin Sookocheff"
  "Kevin Sookocheff"
  "2006"
  "Internal GIMP procedure"
  (
    (
      "drawable"
      "GimpDrawable"
      "The affected drawable"
    )
    (
      "src-drawable"
      "GimpDrawable"
      "The source drawable"
    )
    (
      "src-x"
      "gdouble"
      "The x coordinate in the source image"
    )
    (
      "src-y"
      "gdouble"
      "The y coordinate in the source image"
    )
    (
      "num-strokes"
      "gint"
      "Number of stroke control points (count each coordinate as 2 points) (num-strokes >= 2)"
    )
    (
      "strokes"
      "GimpFloatArray"
      "Array of stroke coordinates: @{ s1.x, s1.y, s2.x, s2.y, ..., sn.x, sn.y @}"
    )
  )
  (
  )
)
(register-procedure "gimp-context-get-sample-threshold"
  "Get the sample threshold setting."
  "This procedure returns the sample threshold setting."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2011"
  "Internal GIMP procedure"
  (
  )
  (
    (
      "sample-threshold"
      "gdouble"
      "The sample threshold setting (0 <= sample-threshold <= 1)"
    )
  )
)
(register-procedure "gimp-vectors-get-strokes"
  "List the strokes associated with the passed path."
  "Returns an Array with the stroke-IDs associated with the passed path."
  "Simon Budig"
  "Simon Budig"
  "2005"
  "Internal GIMP procedure"
  (
    (
      "vectors"
      "GimpVectors"
      "The vectors object"
    )
  )
  (
    (
      "num-strokes"
      "gint"
      "The number of strokes returned. (num-strokes >= 0)"
    )
    (
      "stroke-ids"
      "GimpInt32Array"
      "List of the strokes belonging to the path."
    )
  )
)
(register-procedure "gimp-pdb-set-file-proc-priority"
  "Sets the priority of a file handler procedure."
  "Sets the priority of a file handler procedure. When more than one procedure matches a given file, the procedure with the lowest priority is used; if more than one procedure has the lowest priority, it is unspecified which one of them is used. The default priority for file handler procedures is 0."
  "Ell"
  "Ell"
  "2018"
  "Internal GIMP procedure"
  (
    (
      "procedure-name"
      "gchararray"
      "The name of the procedure to set the priority of."
    )
    (
      "priority"
      "gint"
      "The procedure priority."
    )
  )
  (
  )
)
(register-procedure "plug-in-gauss"
  "Simplest, most commonly used way of blurring"
  "Applies a gaussian blur to the drawable, with specified radius of affect. The standard deviation of the normal distribution used to modify pixel values is calculated based on the supplied radius. Horizontal and vertical blurring can be independently invoked by specifying only one to run. The 'method' parameter is ignored."
  "Compatibility procedure. Please see 'gegl:gaussian-blur' for credits."
  "Compatibility procedure. Please see 'gegl:gaussian-blur' for credits."
  "2014"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
    (
      "horizontal"
      "gdouble"
      "Horizontal radius of gaussian blur (in pixels (0 <= horizontal <= 500)"
    )
    (
      "vertical"
      "gdouble"
      "Vertical radius of gaussian blur (in pixels (0 <= vertical <= 500)"
    )
    (
      "method"
      "gint"
      "Blur method @{ IIR (0), RLE (1) @} (0 <= method <= 1)"
    )
  )
  (
  )
)
(register-procedure "gimp-image-is-dirty"
  "Checks if the image has unsaved changes."
  "This procedure checks the specified image's dirty count to see if it needs to be saved. Note that saving the image does not automatically set the dirty count to 0, you need to call 'gimp-image-clean-all' after calling a save procedure to make the image clean."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
  )
  (
    (
      "dirty"
      "gboolean"
      "TRUE if the image has unsaved changes. (TRUE or FALSE)"
    )
  )
)
(register-procedure "gimp-selection-border"
  "Border the image's selection"
  "This procedure borders the selection. Bordering creates a new selection which is defined along the boundary of the previous selection at every point within the specified radius."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "radius"
      "gint"
      "Radius of border (in pixels) (radius >= 0)"
    )
  )
  (
  )
)
(register-procedure "plug-in-lens-distortion"
  "Corrects lens distortion"
  "Corrects barrel or pincushion lens distortion."
  "Compatibility procedure. Please see 'gegl:lens-distortion' for credits."
  "Compatibility procedure. Please see 'gegl:lens-distortion' for credits."
  "2013"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
    (
      "offset-x"
      "gdouble"
      "Effect centre offset in X (-100 <= offset-x <= 100)"
    )
    (
      "offset-y"
      "gdouble"
      "Effect centre offset in Y (-100 <= offset-y <= 100)"
    )
    (
      "main-adjust"
      "gdouble"
      "Amount of second-order distortion (-100 <= main-adjust <= 100)"
    )
    (
      "edge-adjust"
      "gdouble"
      "Amount of fourth-order distortion (-100 <= edge-adjust <= 100)"
    )
    (
      "rescale"
      "gdouble"
      "Rescale overall image size (-100 <= rescale <= 100)"
    )
    (
      "brighten"
      "gdouble"
      "Adjust brightness in corners (-100 <= brighten <= 100)"
    )
  )
  (
  )
)
(register-procedure "plug-in-warp"
  "Twist or smear image in many different ways"
  "Smears an image along vector paths calculated as the gradient of a separate control matrix. The effect can look like brushstrokes of acrylic or watercolor paint, in some cases."
  "John P. Beale"
  "John P. Beale"
  "1997"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The input image"
    )
    (
      "num-drawables"
      "gint"
      "Number of input drawables (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The input drawables"
    )
    (
      "amount"
      "gdouble"
      "Pixel displacement multiplier"
    )
    (
      "warp-map"
      "GimpDrawable"
      "Displacement control map"
    )
    (
      "iter"
      "gint"
      "Iteration count (1 <= iter <= 100)"
    )
    (
      "dither"
      "gdouble"
      "Random dither amount (0 <= dither <= 100)"
    )
    (
      "angle"
      "gdouble"
      "Angle of gradient vector rotation (0 <= angle <= 360)"
    )
    (
      "wrap-type"
      "gint"
      "Edge behavior: @{ WRAP (0), SMEAR (1), BLACK (2), COLOR (3) @} (0 <= wrap-type <= 3)"
    )
    (
      "mag-map"
      "GimpDrawable"
      "Magnitude control map"
    )
    (
      "mag-use"
      "gboolean"
      "Use magnitude map (TRUE or FALSE)"
    )
    (
      "substeps"
      "gint"
      "Substeps between image updates (1 <= substeps <= 100)"
    )
    (
      "grad-map"
      "GimpDrawable"
      "Gradient control map"
    )
    (
      "grad-scale"
      "gdouble"
      "Scaling factor for gradient map (0=don't use)"
    )
    (
      "vector-map"
      "GimpDrawable"
      "Fixed vector control map"
    )
    (
      "vector-scale"
      "gdouble"
      "Scaling factor for fixed vector map (0=don't use)"
    )
    (
      "vector-angle"
      "gdouble"
      "Angle for fixed vector map (0 <= vector-angle <= 360)"
    )
  )
  (
  )
)
(register-procedure "gimp-image-undo-enable"
  "Enable the image's undo stack."
  "This procedure enables the image's undo stack, allowing subsequent operations to store their undo steps. This is generally called in conjunction with 'gimp-image-undo-disable' to temporarily disable an image undo stack."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
  )
  (
    (
      "enabled"
      "gboolean"
      "TRUE if the image undo has been enabled (TRUE or FALSE)"
    )
  )
)
(register-procedure "gimp-context-get-sample-merged"
  "Get the sample merged setting."
  "This procedure returns the sample merged setting."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2011"
  "Internal GIMP procedure"
  (
  )
  (
    (
      "sample-merged"
      "gboolean"
      "The sample merged setting (TRUE or FALSE)"
    )
  )
)
(register-procedure "gimp-buffer-get-image-type"
  "Retrieves the specified buffer's image type."
  "This procedure retrieves the specified named buffer's image type."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2005"
  "Internal GIMP procedure"
  (
    (
      "buffer-name"
      "gchararray"
      "The buffer name"
    )
  )
  (
    (
      "image-type"
      "GimpImageBaseType"
      "The buffer image type @{ RGB (0), GRAY (1), INDEXED (2) @}"
    )
  )
)
(register-procedure "gimp-item-delete"
  "Delete a item."
  "This procedure deletes the specified item. This must not be done if the image containing this item was already deleted or if the item was already removed from the image. The only case in which this procedure is useful is if you want to get rid of a item which has not yet been added to an image."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "item"
      "GimpItem"
      "The item to delete"
    )
  )
  (
  )
)
(register-procedure "script-fu-paste-as-pattern"
  "Paste the clipboard contents into a new pattern"
  ""
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2005-09-25"
  "Temporary Procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "string"
      "gchararray"
      "_Pattern name"
    )
    (
      "string-2"
      "gchararray"
      "_File name"
    )
  )
  (
  )
)
(register-procedure "gimp-context-get-ink-blob-type"
  "Get ink blob type."
  "Get the ink blob type for ink tool."
  "Ed Swartz"
  "Ed Swartz"
  "2012"
  "Internal GIMP procedure"
  (
  )
  (
    (
      "type"
      "GimpInkBlobType"
      "Ink blob type @{ INK-BLOB-TYPE-CIRCLE (0), INK-BLOB-TYPE-SQUARE (1), INK-BLOB-TYPE-DIAMOND (2) @}"
    )
  )
)
(register-procedure "file-gif-load-thumb"
  "Loads only the first frame of a GIF image, to be used as a thumbnail"
  ""
  "Sven Neumann"
  "Sven Neumann"
  "2006"
  "GIMP Plug-In"
  (
    (
      "file"
      "GFile"
      "The file to load the thumbnail from"
    )
    (
      "thumb-size"
      "gint"
      "Preferred thumbnail size (16 <= thumb-size <= 2014)"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "Thumbnail image"
    )
    (
      "image-width"
      "gint"
      "Width of the full-sized image (0 for unknown) (0 <= image-width <= 524288)"
    )
    (
      "image-height"
      "gint"
      "Height of the full-sized image (0 for unknown) (0 <= image-height <= 524288)"
    )
    (
      "image-type"
      "GimpImageType"
      "Type of the image @{ RGB-IMAGE (0), RGBA-IMAGE (1), GRAY-IMAGE (2), GRAYA-IMAGE (3), INDEXED-IMAGE (4), INDEXEDA-IMAGE (5) @}"
    )
    (
      "num-layers"
      "gint"
      "Number of layers in the image (num-layers >= 1)"
    )
  )
)
(register-procedure "gimp-drawable-posterize"
  "Posterize the specified drawable."
  "This procedures reduces the number of shades allows in each intensity channel to the specified 'levels' parameter."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1997"
  "Internal GIMP procedure"
  (
    (
      "drawable"
      "GimpDrawable"
      "The drawable"
    )
    (
      "levels"
      "gint"
      "Levels of posterization (2 <= levels <= 255)"
    )
  )
  (
  )
)
(register-procedure "gimp-gradient-segment-range-split-midpoint"
  "Splits each segment in the segment range at midpoint"
  "This function splits each segment in the segment range at its midpoint."
  "Shlomi Fish <shlomif@@iglu.org.il>"
  "Shlomi Fish"
  "2003"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The gradient name"
    )
    (
      "start-segment"
      "gint"
      "The index of the first segment to operate on (start-segment >= 0)"
    )
    (
      "end-segment"
      "gint"
      "The index of the last segment to operate on. If negative, the selection will extend to the end of the string."
    )
  )
  (
  )
)
(register-procedure "gimp-channel-set-color"
  "Set the compositing color of the specified channel."
  "This procedure sets the specified channel's compositing color."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "channel"
      "GimpChannel"
      "The channel"
    )
    (
      "color"
      "GimpRGB"
      "The new channel compositing color"
    )
  )
  (
  )
)
(register-procedure "plug-in-emboss"
  "Simulate an image created by embossing"
  "Emboss or Bumpmap the given drawable, specifying the angle and elevation for the light source."
  "Compatibility procedure. Please see 'gegl:emboss' for credits."
  "Compatibility procedure. Please see 'gegl:emboss' for credits."
  "2019"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
    (
      "azimuth"
      "gdouble"
      "The Light Angle (degrees) (0 <= azimuth <= 360)"
    )
    (
      "elevation"
      "gdouble"
      "The Elevation Angle (degrees) (0 <= elevation <= 180)"
    )
    (
      "depth"
      "gint"
      "The Filter Width (1 <= depth <= 99)"
    )
    (
      "emboss"
      "gboolean"
      "Emboss (TRUE), Bumpmap (FALSE) (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "gimp-image-get-tattoo-state"
  "Returns the tattoo state associated with the image."
  "This procedure returns the tattoo state of the image. Use only by save/load plug-ins that wish to preserve an images tattoo state. Using this function at other times will produce unexpected results."
  "Andy Thomas"
  "Andy Thomas"
  "2000"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
  )
  (
    (
      "tattoo-state"
      "guint"
      "The tattoo state"
    )
  )
)
(register-procedure "plug-in-dbbrowser"
  "List available procedures in the PDB"
  ""
  "Thomas Noel"
  "Thomas Noel"
  "23th june 1997"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
  )
  (
  )
)
(register-procedure "gimp-image-merge-down"
  "Merge the layer passed and the first visible layer below."
  "This procedure combines the passed layer and the first visible layer below it using the specified merge type. A merge type of EXPAND_AS_NECESSARY expands the final layer to encompass the areas of the visible layers. A merge type of CLIP_TO_IMAGE clips the final layer to the extents of the image. A merge type of CLIP_TO_BOTTOM_LAYER clips the final layer to the size of the bottommost layer."
  "Larry Ewing"
  "Larry Ewing"
  "1998"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "merge-layer"
      "GimpLayer"
      "The layer to merge down from"
    )
    (
      "merge-type"
      "GimpMergeType"
      "The type of merge @{ EXPAND-AS-NECESSARY (0), CLIP-TO-IMAGE (1), CLIP-TO-BOTTOM-LAYER (2) @}"
    )
  )
  (
    (
      "layer"
      "GimpLayer"
      "The resulting layer"
    )
  )
)
(register-procedure "gimp-gradient-rename"
  "Rename a gradient"
  "This procedure renames a gradient"
  "Shlomi Fish <shlomif@@iglu.org.il>"
  "Shlomi Fish"
  "2003"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The gradient name"
    )
    (
      "new-name"
      "gchararray"
      "The new name of the gradient"
    )
  )
  (
    (
      "actual-name"
      "gchararray"
      "The actual new name of the gradient"
    )
  )
)
(register-procedure "plug-in-oilify"
  "Smear colors to simulate an oil painting"
  "This function performs the well-known oil-paint effect on the specified drawable."
  "Compatibility procedure. Please see 'gegl:oilify' for credits."
  "Compatibility procedure. Please see 'gegl:oilify' for credits."
  "2019"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
    (
      "mask-size"
      "gint"
      "Oil paint mask size (1 <= mask-size <= 200)"
    )
    (
      "mode"
      "gint"
      "Algorithm @{ RGB (0), INTENSITY (1) @} (0 <= mode <= 1)"
    )
  )
  (
  )
)
(register-procedure "plug-in-c-astretch"
  "Stretch contrast to cover the maximum possible range"
  "This simple plug-in does an automatic contrast stretch. For each channel in the image, it finds the minimum and maximum values... it uses those values to stretch the individual histograms to the full contrast range. For some images it may do just what you want; for others it may not work that well."
  "Compatibility procedure. Please see 'gegl:stretch-contrast' for credits."
  "Compatibility procedure. Please see 'gegl:stretch-contrast' for credits."
  "2013"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
  )
  (
  )
)
(register-procedure "gimp-dynamics-get-list"
  "Retrieve the list of loaded paint dynamics."
  "This procedure returns a list of the paint dynamics that are currently available."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2011"
  "Internal GIMP procedure"
  (
    (
      "filter"
      "gchararray"
      "An optional regular expression used to filter the list"
    )
  )
  (
    (
      "dynamics-list"
      "GStrv"
      "The list of paint dynamics names"
    )
  )
)
(register-procedure "gimp-pdb-get-proc-documentation"
  "Queries the procedural database for documentation on the specified procedure."
  "This procedure returns documentation on the specified procedure. A short blurb, detailed help and help_id."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2019"
  "Internal GIMP procedure"
  (
    (
      "procedure-name"
      "gchararray"
      "The procedure name"
    )
  )
  (
    (
      "blurb"
      "gchararray"
      "A short blurb"
    )
    (
      "help"
      "gchararray"
      "Detailed procedure help"
    )
    (
      "help-id"
      "gchararray"
      "The procedure help_id"
    )
  )
)
(register-procedure "gimp-pattern-get-pixels"
  "Retrieve information about the specified pattern (including pixels)."
  "This procedure retrieves information about the specified. This includes the pattern extents (width and height), its bpp and its pixel data."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2004"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The pattern name."
    )
  )
  (
    (
      "width"
      "gint"
      "The pattern width"
    )
    (
      "height"
      "gint"
      "The pattern height"
    )
    (
      "bpp"
      "gint"
      "The pattern bpp"
    )
    (
      "num-color-bytes"
      "gint"
      "Number of pattern bytes (num-color-bytes >= 0)"
    )
    (
      "color-bytes"
      "GimpUint8Array"
      "The pattern data."
    )
  )
)
(register-procedure "script-fu-make-brush-rectangular-feathered"
  "Create a rectangular brush with feathered edges"
  ""
  "Seth Burgess <sjburges@@ou.edu>"
  "Seth Burgess"
  "1997"
  "Temporary Procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "string"
      "gchararray"
      "Name"
    )
    (
      "adjustment"
      "gdouble"
      "Width"
    )
    (
      "adjustment-2"
      "gdouble"
      "Height"
    )
    (
      "adjustment-3"
      "gdouble"
      "Feathering"
    )
    (
      "adjustment-4"
      "gdouble"
      "Spacing"
    )
  )
  (
  )
)
(register-procedure "gimp-smudge-default"
  "Smudge image with varying pressure."
  "This tool simulates a smudge using the current brush. It behaves exactly the same as 'gimp-smudge' except that the pressure value is taken from the smudge tool options or the options default if the tools option dialog has not been activated."
  "Andy Thomas"
  "Andy Thomas"
  "1999"
  "Internal GIMP procedure"
  (
    (
      "drawable"
      "GimpDrawable"
      "The affected drawable"
    )
    (
      "num-strokes"
      "gint"
      "Number of stroke control points (count each coordinate as 2 points) (num-strokes >= 2)"
    )
    (
      "strokes"
      "GimpFloatArray"
      "Array of stroke coordinates: @{ s1.x, s1.y, s2.x, s2.y, ..., sn.x, sn.y @}"
    )
  )
  (
  )
)
(register-procedure "gimp-image-set-active-layer"
  "Sets the specified image's active layer."
  "If the layer exists, it is set as the active layer in the image. Any previous active layer or channel is set to inactive. An exception is a previously existing floating selection, in which case this procedure will return an execution error."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "active-layer"
      "GimpLayer"
      "The new image active layer"
    )
  )
  (
  )
)
(register-procedure "plug-in-gauss-rle2"
  "Apply a gaussian blur"
  "Applies a gaussian blur to the drawable, with specified radius of affect. The standard deviation of the normal distribution used to modify pixel values is calculated based on the supplied radius. Horizontal and vertical blurring can be independently invoked by specifying only one to run."
  "Compatibility procedure. Please see 'gegl:gaussian-blur' for credits."
  "Compatibility procedure. Please see 'gegl:gaussian-blur' for credits."
  "2014"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
    (
      "horizontal"
      "gdouble"
      "Horizontal radius of gaussian blur (in pixels (0 <= horizontal <= 500)"
    )
    (
      "vertical"
      "gdouble"
      "Vertical radius of gaussian blur (in pixels (0 <= vertical <= 500)"
    )
  )
  (
  )
)
(register-procedure "gimp-brush-get-pixels"
  "Retrieves information about the specified brush."
  "This procedure retrieves information about the specified brush. This includes the brush extents (width and height) and its pixels data."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2004"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The brush name"
    )
  )
  (
    (
      "width"
      "gint"
      "The brush width"
    )
    (
      "height"
      "gint"
      "The brush height"
    )
    (
      "mask-bpp"
      "gint"
      "The brush mask bpp"
    )
    (
      "num-mask-bytes"
      "gint"
      "Length of brush mask data (num-mask-bytes >= 0)"
    )
    (
      "mask-bytes"
      "GimpUint8Array"
      "The brush mask data"
    )
    (
      "color-bpp"
      "gint"
      "The brush color bpp"
    )
    (
      "num-color-bytes"
      "gint"
      "Length of brush color data (num-color-bytes >= 0)"
    )
    (
      "color-bytes"
      "GimpUint8Array"
      "The brush color data"
    )
  )
)
(register-procedure "plug-in-nova"
  "Add a starburst to the image"
  "This plug-in produces an effect like a supernova burst. The amount of the light effect is approximately in proportion to 1/r, where r is the distance from the center of the star."
  "Compatibility procedure. Please see 'gegl:supernova' for credits."
  "Compatibility procedure. Please see 'gegl:supernova' for credits."
  "2014"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
    (
      "xcenter"
      "gint"
      "X coordinates of the center of supernova"
    )
    (
      "ycenter"
      "gint"
      "Y coordinates of the center of supernova"
    )
    (
      "color"
      "GimpRGB"
      "Color of supernova"
    )
    (
      "radius"
      "gint"
      "Radius of supernova (1 <= radius <= 3000)"
    )
    (
      "nspoke"
      "gint"
      "Number of spokes (1 <= nspoke <= 1024)"
    )
    (
      "randomhue"
      "gint"
      "Random hue (0 <= randomhue <= 360)"
    )
  )
  (
  )
)
(register-procedure "gimp-eraser-default"
  "Erase using the current brush."
  "This tool erases using the current brush mask. This function performs exactly the same as the 'gimp-eraser' function except that the tools arguments are obtained from the eraser option dialog. It this dialog has not been activated then the dialogs default values will be used."
  "Andy Thomas"
  "Andy Thomas"
  "1999"
  "Internal GIMP procedure"
  (
    (
      "drawable"
      "GimpDrawable"
      "The affected drawable"
    )
    (
      "num-strokes"
      "gint"
      "Number of stroke control points (count each coordinate as 2 points) (num-strokes >= 2)"
    )
    (
      "strokes"
      "GimpFloatArray"
      "Array of stroke coordinates: @{ s1.x, s1.y, s2.x, s2.y, ..., sn.x, sn.y @}"
    )
  )
  (
  )
)
(register-procedure "gimp-plug-in-help-register"
  "Register a help path for a plug-in."
  "This procedure registers user documentation for the calling plug-in with the GIMP help system. The domain_uri parameter points to the root directory where the plug-in help is installed. For each supported language there should be a file called 'gimp-help.xml' that maps the help IDs to the actual help files."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2000"
  "Internal GIMP procedure"
  (
    (
      "domain-name"
      "gchararray"
      "The XML namespace of the plug-in's help pages"
    )
    (
      "domain-file"
      "GFile"
      "The root URI of the plug-in's help pages"
    )
  )
  (
  )
)
(register-procedure "gimp-help-concepts-usage"
  "Bookmark to the user manual"
  ""
  "Roman Joost <romanofski@@gimp.org>"
  "Roman Joost <romanofski@@gimp.org>"
  "2006"
  "Temporary Procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
  )
  (
  )
)
(register-procedure "gimp-layer-create-mask"
  "Create a layer mask for the specified layer."
  "This procedure creates a layer mask for the specified layer.
Layer masks serve as an additional alpha channel for a layer. Different types of masks are allowed for initialisation:
- white mask (leaves the layer fully visible);
- black mask (gives the layer complete transparency);
- the layer's alpha channel (either a copy, or a transfer, which leaves the layer fully visible, but which may be more useful than a white mask);
- the current selection;
- a grayscale copy of the layer;
- or a copy of the active channel.

The layer mask still needs to be added to the layer. This can be done with a call to 'gimp-layer-add-mask'.

'gimp-layer-create-mask' will fail if there are no active channels on the image, when called with 'ADD-CHANNEL-MASK'. It will return a black mask when called with 'ADD-ALPHA-MASK' or 'ADD-ALPHA-TRANSFER-MASK' on a layer with no alpha channels, or with 'ADD-SELECTION-MASK' when there is no selection on the image."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "layer"
      "GimpLayer"
      "The layer to which to add the mask"
    )
    (
      "mask-type"
      "GimpAddMaskType"
      "The type of mask @{ ADD-MASK-WHITE (0), ADD-MASK-BLACK (1), ADD-MASK-ALPHA (2), ADD-MASK-ALPHA-TRANSFER (3), ADD-MASK-SELECTION (4), ADD-MASK-COPY (5), ADD-MASK-CHANNEL (6) @}"
    )
  )
  (
    (
      "mask"
      "GimpLayerMask"
      "The newly created mask"
    )
  )
)
(register-procedure "gimp-pattern-get-info"
  "Retrieve information about the specified pattern."
  "This procedure retrieves information about the specified pattern. This includes the pattern extents (width and height)."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2004"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The pattern name."
    )
  )
  (
    (
      "width"
      "gint"
      "The pattern width"
    )
    (
      "height"
      "gint"
      "The pattern height"
    )
    (
      "bpp"
      "gint"
      "The pattern bpp"
    )
  )
)
(register-procedure "gimp-context-set-default-colors"
  "Set the current GIMP foreground and background colors to black and white."
  "This procedure sets the current GIMP foreground and background colors to their initial default values, black and white."
  "Michael Natterer <mitch@@gimp.org> & Sven Neumann <sven@@gimp.org>"
  "Michael Natterer & Sven Neumann"
  "2004"
  "Internal GIMP procedure"
  (
  )
  (
  )
)
(register-procedure "gimp-pdb-dump"
  "Dumps the current contents of the procedural database"
  "This procedure dumps the contents of the procedural database to the specified file. The file will contain all of the information provided for each registered procedure."
  "Spencer Kimball & Josh MacDonald"
  "Spencer Kimball & Josh MacDonald & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "file"
      "GFile"
      "The dump filename"
    )
  )
  (
  )
)
(register-procedure "gimp-brush-is-editable"
  "Tests if brush can be edited."
  "Returns TRUE if you have permission to change the brush."
  "Bill Skaggs <weskaggs@@primate.ucdavis.edu>"
  "Bill Skaggs"
  "2004"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The brush name"
    )
  )
  (
    (
      "editable"
      "gboolean"
      "TRUE if the brush can be edited (TRUE or FALSE)"
    )
  )
)
(register-procedure "gimp-edit-named-copy-visible"
  "Copy from the projection into a named buffer."
  "This procedure works like 'gimp-edit-copy-visible', but additionally stores the copied buffer into a named buffer that will stay available for later pasting, regardless of any intermediate copy or cut operations."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2005"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image to copy from"
    )
    (
      "buffer-name"
      "gchararray"
      "The name of the buffer to create"
    )
  )
  (
    (
      "real-name"
      "gchararray"
      "The real name given to the buffer, or NULL if the copy failed"
    )
  )
)
(register-procedure "gimp-context-set-ink-size-sensitivity"
  "Set ink size sensitivity."
  "Set the ink size sensitivity for ink tool."
  "Ed Swartz"
  "Ed Swartz"
  "2012"
  "Internal GIMP procedure"
  (
    (
      "size"
      "gdouble"
      "ink size sensitivity (0 <= size <= 1)"
    )
  )
  (
  )
)
(register-procedure "python-fu-eval"
  "Evaluate Python code"
  "Evaluate python code under the python interpreter (primarily for batch mode)"
  "Manish Singh"
  "Manish Singh"
  "2006"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "script"
      "gchararray"
      "Batch commands in the target language, which will be run by the interpreter"
    )
  )
  (
  )
)
(register-procedure "gimp-gradient-segment-range-blend-opacity"
  "Blend the opacity of the segment range."
  "This function blends the opacity (but not the colors) of the segments' range of the gradient. Using it, the opacity's transition will be uniform across the range."
  "Shlomi Fish <shlomif@@iglu.org.il>"
  "Shlomi Fish"
  "2003"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The gradient name"
    )
    (
      "start-segment"
      "gint"
      "The index of the first segment to operate on (start-segment >= 0)"
    )
    (
      "end-segment"
      "gint"
      "The index of the last segment to operate on. If negative, the selection will extend to the end of the string."
    )
  )
  (
  )
)
(register-procedure "file-colorxhtml-save"
  "Save as colored HTML text"
  "Saves the image as colored XHTML text (based on Perl version by Marc Lehmann)"
  "Manish Singh and Carol Spears"
  "(c) GPL V3.0 or later"
  "2003"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The image to save"
    )
    (
      "num-drawables"
      "gint"
      "Number of drawables to be saved (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The drawables to save"
    )
    (
      "file"
      "GFile"
      "The file to save to"
    )
    (
      "source-file"
      "gboolean"
      "_Read characters from file, if true, or use text entry (TRUE or FALSE)"
    )
    (
      "characters"
      "gchararray"
      "_File to read or characters to use"
    )
    (
      "font-size"
      "gint"
      "Fo_nt size in pixels (5 <= font-size <= 100)"
    )
    (
      "separate"
      "gboolean"
      "_Write a separate CSS file (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "gimp-context-set-brush-force"
  "Set brush application force."
  "Set the brush application force for brush based paint tools."
  "Alexia Death"
  "Alexia Death"
  "2014"
  "Internal GIMP procedure"
  (
    (
      "force"
      "gdouble"
      "Brush application force (0 <= force <= 1)"
    )
  )
  (
  )
)
(register-procedure "plug-in-unsharp-mask"
  "The most widely useful method for sharpening an image"
  "The unsharp mask is a sharpening filter that works by comparing using the difference of the image and a blurred version of the image. It is commonly used on photographic images, and is provides a much more pleasing result than the standard sharpen filter."
  "Compatibility procedure. Please see 'gegl:unsharp-mask' for credits."
  "Compatibility procedure. Please see 'gegl:unsharp-mask' for credits."
  "2018"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
    (
      "radius"
      "gdouble"
      "Radius of gaussian blur (0 <= radius <= 300)"
    )
    (
      "amount"
      "gdouble"
      "Strength of effect (0 <= amount <= 300)"
    )
    (
      "threshold"
      "gint"
      "Threshold (0 <= threshold <= 255)"
    )
  )
  (
  )
)
(register-procedure "gimp-drawable-edit-fill"
  "Fill selected area of drawable."
  "This procedure fills the specified drawable according to fill mode. This procedure only affects regions within a selection if there is a selection active. If you want to fill the whole drawable, regardless of the selection, use 'gimp-drawable-fill'.

This procedure is affected by the following context setters: 'gimp-context-set-opacity', 'gimp-context-set-paint-mode', 'gimp-context-set-foreground', 'gimp-context-set-background', 'gimp-context-set-pattern'."
  "Spencer Kimball & Peter Mattis & Raphael Quinet"
  "Spencer Kimball & Peter Mattis"
  "1995-2000"
  "Internal GIMP procedure"
  (
    (
      "drawable"
      "GimpDrawable"
      "The drawable to fill to"
    )
    (
      "fill-type"
      "GimpFillType"
      "The type of fill @{ FILL-FOREGROUND (0), FILL-BACKGROUND (1), FILL-WHITE (2), FILL-TRANSPARENT (3), FILL-PATTERN (4) @}"
    )
  )
  (
  )
)
(register-procedure "gimp-image-convert-precision"
  "Convert the image to the specified precision"
  "This procedure converts the image to the specified precision. Note that indexed images cannot be converted and are always in GIMP_PRECISION_U8."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2012"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "precision"
      "GimpPrecision"
      "The new precision @{ PRECISION-U8-LINEAR (100), PRECISION-U8-NON-LINEAR (150), PRECISION-U8-PERCEPTUAL (175), PRECISION-U16-LINEAR (200), PRECISION-U16-NON-LINEAR (250), PRECISION-U16-PERCEPTUAL (275), PRECISION-U32-LINEAR (300), PRECISION-U32-NON-LINEAR (350), PRECISION-U32-PERCEPTUAL (375), PRECISION-HALF-LINEAR (500), PRECISION-HALF-NON-LINEAR (550), PRECISION-HALF-PERCEPTUAL (575), PRECISION-FLOAT-LINEAR (600), PRECISION-FLOAT-NON-LINEAR (650), PRECISION-FLOAT-PERCEPTUAL (675), PRECISION-DOUBLE-LINEAR (700), PRECISION-DOUBLE-NON-LINEAR (750), PRECISION-DOUBLE-PERCEPTUAL (775), PRECISION-U8-GAMMA (150), PRECISION-U16-GAMMA (250), PRECISION-U32-GAMMA (350), PRECISION-HALF-GAMMA (550), PRECISION-FLOAT-GAMMA (650), PRECISION-DOUBLE-GAMMA (750) @}"
    )
  )
  (
  )
)
(register-procedure "gimp-layer-get-blend-space"
  "Get the blend space of the specified layer."
  "This procedure returns the specified layer's blend space."
  "Ell"
  "Ell"
  "2017"
  "Internal GIMP procedure"
  (
    (
      "layer"
      "GimpLayer"
      "The layer"
    )
  )
  (
    (
      "blend-space"
      "GimpLayerColorSpace"
      "The layer blend space @{ LAYER-COLOR-SPACE-AUTO (0), LAYER-COLOR-SPACE-RGB-LINEAR (1), LAYER-COLOR-SPACE-RGB-PERCEPTUAL (2), LAYER-COLOR-SPACE-LAB (3) @}"
    )
  )
)
(register-procedure "plug-in-video"
  "Simulate distortion produced by a fuzzy or low-res monitor"
  "This function simulates the degradation of being on an old low-dotpitch RGB video monitor to the specified drawable."
  "Compatibility procedure. Please see 'gegl:video-degradation' for credits."
  "Compatibility procedure. Please see 'gegl:video-degradation' for credits."
  "2014"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
    (
      "pattern-number"
      "gint"
      "Type of RGB pattern to use (0 <= pattern-number <= 8)"
    )
    (
      "additive"
      "gboolean"
      "Whether the function adds the result to the original image (TRUE or FALSE)"
    )
    (
      "rotated"
      "gboolean"
      "Whether to rotate the RGB pattern by ninety degrees (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "file-raw-placeholder-kodak-load"
  "Load files in the Kodak raw formats via placeholder"
  "This plug-in loads files in Kodak's raw formats by calling placeholder."
  "Tobias Ellinghaus"
  "Tobias Ellinghaus"
  "2016"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "file"
      "GFile"
      "The file to load"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "Output image"
    )
  )
)
(register-procedure "gimp-brushes-refresh"
  "Refresh current brushes. This function always succeeds."
  "This procedure retrieves all brushes currently in the user's brush path and updates the brush dialogs accordingly."
  "Seth Burgess"
  "Seth Burgess"
  "1997"
  "Internal GIMP procedure"
  (
  )
  (
  )
)
(register-procedure "gimp-context-set-feather"
  "Set the feather setting."
  "This procedure modifies the feather setting. If the feather option is enabled, selections will be blurred before combining. The blur is a gaussian blur; its radii can be controlled using 'gimp-context-set-feather-radius'.

This setting affects the following procedures: 'gimp-image-select-color', 'gimp-image-select-contiguous-color', 'gimp-image-select-rectangle', 'gimp-image-select-round-rectangle', 'gimp-image-select-ellipse', 'gimp-image-select-polygon', 'gimp-image-select-item'."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2010"
  "Internal GIMP procedure"
  (
    (
      "feather"
      "gboolean"
      "The feather setting (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "script-fu-grid-system"
  "Draw a grid as specified by the lists of X and Y locations using the current brush"
  ""
  "Shuji Narazaki <narazaki@@InetQ.or.jp>"
  "Shuji Narazaki"
  "1997"
  "Temporary Procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Image to use"
    )
    (
      "drawable"
      "GimpDrawable"
      "Drawable to draw grid"
    )
    (
      "value"
      "gchararray"
      "X divisions"
    )
    (
      "value-2"
      "gchararray"
      "Y divisions"
    )
  )
  (
  )
)
(register-procedure "gimp-edit-named-copy"
  "Copy into a named buffer."
  "This procedure works like 'gimp-edit-copy', but additionally stores the copied buffer into a named buffer that will stay available for later pasting, regardless of any intermediate copy or cut operations."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2005"
  "Internal GIMP procedure"
  (
    (
      "num-drawables"
      "gint"
      "The number of drawables (num-drawables >= 1)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The drawables to copy from"
    )
    (
      "buffer-name"
      "gchararray"
      "The name of the buffer to create"
    )
  )
  (
    (
      "real-name"
      "gchararray"
      "The real name given to the buffer, or NULL if the copy failed"
    )
  )
)
(register-procedure "gimp-context-set-background"
  "Set the current GIMP background color."
  "This procedure sets the current GIMP background color. After this is set, operations which use background such as blending, filling images, clearing, and erasing (in non-alpha images) will use the new value."
  "Michael Natterer <mitch@@gimp.org> & Sven Neumann <sven@@gimp.org>"
  "Michael Natterer & Sven Neumann"
  "2004"
  "Internal GIMP procedure"
  (
    (
      "background"
      "GimpRGB"
      "The background color"
    )
  )
  (
  )
)
(register-procedure "gimp-file-save"
  "Saves a file by extension."
  "This procedure invokes the correct file save handler according to the file's extension and/or prefix."
  "Josh MacDonald"
  "Josh MacDonald"
  "1997"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image"
    )
    (
      "num-drawables"
      "gint"
      "The number of drawables to save (num-drawables >= 1)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "Drawables to save"
    )
    (
      "file"
      "GFile"
      "The file to save the image in"
    )
  )
  (
  )
)
(register-procedure "gimp-image-insert-vectors"
  "Add the specified vectors to the image."
  "This procedure adds the specified vectors to the image at the given position. Since vectors groups are not currently supported, the parent argument must always be 0. The position argument specifies the location of the vectors inside the stack, starting from the top (0) and increasing. If the position is specified as -1, then the vectors is inserted above the active vectors."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "vectors"
      "GimpVectors"
      "The vectors"
    )
    (
      "parent"
      "GimpVectors"
      "The parent vectors"
    )
    (
      "position"
      "gint"
      "The vectors position"
    )
  )
  (
  )
)
(register-procedure "gimp-vectors-stroke-new-from-points"
  "Adds a stroke of a given type to the vectors object."
  "Adds a stroke of a given type to the vectors object. The coordinates of the control points can be specified. For now only strokes of the type GIMP_VECTORS_STROKE_TYPE_BEZIER are supported. The control points are specified as a pair of float values for the x- and y-coordinate. The Bezier stroke type needs a multiple of three control points. Each Bezier segment endpoint (anchor, A) has two additional control points (C) associated. They are specified in the order CACCACCAC..."
  "Simon Budig"
  "Simon Budig"
  "2006"
  "Internal GIMP procedure"
  (
    (
      "vectors"
      "GimpVectors"
      "The vectors object"
    )
    (
      "type"
      "GimpVectorsStrokeType"
      "type of the stroke (always GIMP_VECTORS_STROKE_TYPE_BEZIER for now). @{ VECTORS-STROKE-TYPE-BEZIER (0) @}"
    )
    (
      "num-points"
      "gint"
      "The number of elements in the array, i.e. the number of controlpoints in the stroke * 2 (x- and y-coordinate). (num-points >= 0)"
    )
    (
      "controlpoints"
      "GimpFloatArray"
      "List of the x- and y-coordinates of the control points."
    )
    (
      "closed"
      "gboolean"
      "Whether the stroke is to be closed or not. (TRUE or FALSE)"
    )
  )
  (
    (
      "stroke-id"
      "gint"
      "The stroke ID of the newly created stroke."
    )
  )
)
(register-procedure "gimp-pdb-set-proc-icon"
  "Register an icon for a plug-in procedure."
  "This procedure installs an icon for the given procedure."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2019"
  "Internal GIMP procedure"
  (
    (
      "procedure-name"
      "gchararray"
      "The procedure for which to install the icon"
    )
    (
      "icon-type"
      "GimpIconType"
      "The type of the icon @{ ICON-TYPE-ICON-NAME (0), ICON-TYPE-PIXBUF (1), ICON-TYPE-IMAGE-FILE (2) @}"
    )
    (
      "icon-data-length"
      "gint"
      "The length of 'icon-data' (icon-data-length >= 1)"
    )
    (
      "icon-data"
      "GimpUint8Array"
      "The procedure's icon. The format depends on the 'icon_type' parameter"
    )
  )
  (
  )
)
(register-procedure "plug-in-animationoptimize"
  "Modify image to reduce size when saved as GIF animation"
  "This procedure applies various optimizations to a GIMP layer-based animation in an attempt to reduce the final file size.  If a frame of theanimation can use the 'combine' mode, this procedure attempts to maximize the number of ajdacent pixels having the same color, whichimproves the compression for some image formats such as GIF or MNG."
  "Adam D. Moss <adam@@gimp.org>"
  "Adam D. Moss <adam@@gimp.org>"
  "1997-2003"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The input image"
    )
    (
      "num-drawables"
      "gint"
      "Number of input drawables (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The input drawables"
    )
  )
  (
    (
      "result"
      "GimpImage"
      "Resultimg image"
    )
  )
)
(register-procedure "gimp-context-set-distance-metric"
  "Set the distance metric used in some computations."
  "This procedure modifies the distance metric used in some computations, such as 'gimp-drawable-edit-gradient-fill'. In particular, it does not change the metric used in generic distance computation on canvas, as in the Measure tool.

This setting affects the following procedures: 'gimp-drawable-edit-gradient-fill'."
  "Jehan"
  "Jehan"
  "2018"
  "Internal GIMP procedure"
  (
    (
      "metric"
      "GeglDistanceMetric"
      "The distance metric @{ Euclidean (0), Manhattan (1), Chebyshev (2) @}"
    )
  )
  (
  )
)
(register-procedure "plug-in-spyrogimp"
  "Draw spyrographs using current tool settings and selection."
  "Uses current tool settings to draw Spyrograph patterns. The size and location of the pattern is based on the current selection."
  "Elad Shahar"
  "Elad Shahar"
  "2018"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The input image"
    )
    (
      "num-drawables"
      "gint"
      "Number of input drawables (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The input drawables"
    )
    (
      "curve-type"
      "gint"
      "The curve type @{ Spyrograph (0), Epitrochoid (1), Sine (2), Lissajous(3) @} (0 <= curve-type <= 3)"
    )
    (
      "shape"
      "gint"
      "Shape of fixed gear (shape >= 0)"
    )
    (
      "sides"
      "gint"
      "Number of sides of fixed gear (3 or greater). Only used by some shapes. (sides >= 3)"
    )
    (
      "morph"
      "gdouble"
      "Morph shape of fixed gear, between 0 and 1. Only used by some shapes. (0 <= morph <= 1)"
    )
    (
      "fixed-teeth"
      "gint"
      "Number of teeth for fixed gear (fixed-teeth >= 0)"
    )
    (
      "moving-teeth"
      "gint"
      "Number of teeth for moving gear (moving-teeth >= 0)"
    )
    (
      "hole-percent"
      "gdouble"
      "Location of hole in moving gear in percent, where 100 means that the hole is at the edge of the gear, and 0 means the hole is at the center (0 <= hole-percent <= 100)"
    )
    (
      "margin"
      "gint"
      "Margin from selection, in pixels (margin >= 0)"
    )
    (
      "equal-w-h"
      "gboolean"
      "Make height and width equal (TRUE or FALSE)"
    )
    (
      "pattern-rotation"
      "gdouble"
      "Pattern rotation, in degrees (-360 <= pattern-rotation <= 360)"
    )
    (
      "shape-rotation"
      "gdouble"
      "Shape rotation of fixed gear, in degrees (-360 <= shape-rotation <= 360)"
    )
    (
      "tool"
      "gint"
      "Tool to use for drawing the pattern. (tool >= 0)"
    )
    (
      "long-gradient"
      "gboolean"
      "Whether to apply a long gradient to match the length of the pattern. Only applicable to some of the tools. (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "gimp-context-get-stroke-method"
  "Retrieve the currently active stroke method."
  "This procedure returns the currently active stroke method."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2015"
  "Internal GIMP procedure"
  (
  )
  (
    (
      "stroke-method"
      "GimpStrokeMethod"
      "The active stroke method @{ STROKE-LINE (0), STROKE-PAINT-METHOD (1) @}"
    )
  )
)
(register-procedure "file-raw-placeholder-rwl-load"
  "Load files in the RWL raw format via placeholder"
  "This plug-in loads files in Leica's raw RWL format by calling placeholder."
  "Tobias Ellinghaus"
  "Tobias Ellinghaus"
  "2016"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "file"
      "GFile"
      "The file to load"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "Output image"
    )
  )
)
(register-procedure "gimp-clone"
  "Clone from the source to the dest drawable using the current brush"
  "This tool clones (copies) from the source drawable starting at the specified source coordinates to the dest drawable. If the \"clone_type\" argument is set to PATTERN-CLONE, then the current pattern is used as the source and the \"src_drawable\" argument is ignored. Pattern cloning assumes a tileable pattern and mods the sum of the src coordinates and subsequent stroke offsets with the width and height of the pattern. For image cloning, if the sum of the src coordinates and subsequent stroke offsets exceeds the extents of the src drawable, then no paint is transferred. The clone tool is capable of transforming between any image types including RGB->Indexed--although converting from any type to indexed is significantly slower."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "drawable"
      "GimpDrawable"
      "The affected drawable"
    )
    (
      "src-drawable"
      "GimpDrawable"
      "The source drawable"
    )
    (
      "clone-type"
      "GimpCloneType"
      "The type of clone @{ CLONE-IMAGE (0), CLONE-PATTERN (1) @}"
    )
    (
      "src-x"
      "gdouble"
      "The x coordinate in the source image"
    )
    (
      "src-y"
      "gdouble"
      "The y coordinate in the source image"
    )
    (
      "num-strokes"
      "gint"
      "Number of stroke control points (count each coordinate as 2 points) (num-strokes >= 2)"
    )
    (
      "strokes"
      "GimpFloatArray"
      "Array of stroke coordinates: @{ s1.x, s1.y, s2.x, s2.y, ..., sn.x, sn.y @}"
    )
  )
  (
  )
)
(register-procedure "gimp-buffer-rename"
  "Renames a named buffer."
  "This procedure renames a named buffer."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2005"
  "Internal GIMP procedure"
  (
    (
      "buffer-name"
      "gchararray"
      "The buffer name"
    )
    (
      "new-name"
      "gchararray"
      "The buffer's new name"
    )
  )
  (
    (
      "real-name"
      "gchararray"
      "The real name given to the buffer"
    )
  )
)
(register-procedure "script-fu-round-corners"
  "Round the corners of an image and optionally add a drop-shadow and background"
  ""
  "Sven Neumann <sven@@gimp.org>"
  "Sven Neumann"
  "1999/12/21"
  "Temporary Procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Image"
    )
    (
      "drawable"
      "GimpDrawable"
      "Drawable"
    )
    (
      "adjustment"
      "gdouble"
      "Edge radius"
    )
    (
      "toggle"
      "gboolean"
      "Add drop-shadow (TRUE or FALSE)"
    )
    (
      "adjustment-2"
      "gdouble"
      "Shadow X offset"
    )
    (
      "adjustment-3"
      "gdouble"
      "Shadow Y offset"
    )
    (
      "adjustment-4"
      "gdouble"
      "Blur radius"
    )
    (
      "toggle-2"
      "gboolean"
      "Add background (TRUE or FALSE)"
    )
    (
      "toggle-3"
      "gboolean"
      "Work on copy (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "plug-in-alienmap2"
  "Alter colors in various psychedelic ways"
  "No help yet. Just try it and you'll see!"
  "Compatibility procedure. Please see 'gegl:alien-map' for credits."
  "Compatibility procedure. Please see 'gegl:alien-map' for credits."
  "2013"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
    (
      "redfrequency"
      "gdouble"
      "Red/hue component frequency factor (0 <= redfrequency <= 20)"
    )
    (
      "redangle"
      "gdouble"
      "Red/hue component angle factor (0-360) (0 <= redangle <= 360)"
    )
    (
      "greenfrequency"
      "gdouble"
      "Green/saturation component frequency factor (0 <= greenfrequency <= 20)"
    )
    (
      "greenangle"
      "gdouble"
      "Green/saturation component angle factor (0-360) (0 <= greenangle <= 360)"
    )
    (
      "bluefrequency"
      "gdouble"
      "Blue/luminance component frequency factor (0 <= bluefrequency <= 20)"
    )
    (
      "blueangle"
      "gdouble"
      "Blue/luminance component angle factor (0-360) (0 <= blueangle <= 360)"
    )
    (
      "colormodel"
      "guchar"
      "Color model @{ RGB-MODEL (0), HSL-MODEL (1) @}"
    )
    (
      "redmode"
      "guchar"
      "Red/hue application mode @{ TRUE, FALSE @}"
    )
    (
      "greenmode"
      "guchar"
      "Green/saturation application mode @{ TRUE, FALSE @}"
    )
    (
      "bluemode"
      "guchar"
      "Blue/luminance application mode @{ TRUE, FALSE @}"
    )
  )
  (
  )
)
(register-procedure "gimp-gradient-segment-range-split-uniform"
  "Splits each segment in the segment range uniformly"
  "This function splits each segment in the segment range uniformly according to the number of times specified by the parameter."
  "Shlomi Fish <shlomif@@iglu.org.il>"
  "Shlomi Fish"
  "2003"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The gradient name"
    )
    (
      "start-segment"
      "gint"
      "The index of the first segment to operate on (start-segment >= 0)"
    )
    (
      "end-segment"
      "gint"
      "The index of the last segment to operate on. If negative, the selection will extend to the end of the string."
    )
    (
      "split-parts"
      "gint"
      "The number of uniform divisions to split each segment to (2 <= split-parts <= 1024)"
    )
  )
  (
  )
)
(register-procedure "gimp-layer-scale"
  "Scale the layer using the default interpolation method."
  "This procedure scales the layer so that its new width and height are equal to the supplied parameters. The 'local-origin' parameter specifies whether to scale from the center of the layer, or from the image origin. This operation only works if the layer has been added to an image. The interpolation method used can be set with 'gimp-context-set-interpolation'."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "layer"
      "GimpLayer"
      "The layer"
    )
    (
      "new-width"
      "gint"
      "New layer width (1 <= new-width <= 524288)"
    )
    (
      "new-height"
      "gint"
      "New layer height (1 <= new-height <= 524288)"
    )
    (
      "local-origin"
      "gboolean"
      "Use a local origin (as opposed to the image origin) (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "gimp-item-get-lock-position"
  "Get the 'lock position' state of the specified item."
  "This procedure returns the specified item's lock position state."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2012"
  "Internal GIMP procedure"
  (
    (
      "item"
      "GimpItem"
      "The item"
    )
  )
  (
    (
      "lock-position"
      "gboolean"
      "Whether the item's position is locked (TRUE or FALSE)"
    )
  )
)
(register-procedure "plug-in-mosaic"
  "Convert the image into irregular tiles"
  "Mosaic is a filter which transforms an image into what appears to be a mosaic, composed of small primitives, each of constant color and of an approximate size."
  "Compatibility procedure. Please see 'gegl:mosaic' for credits."
  "Compatibility procedure. Please see 'gegl:mosaic' for credits."
  "2013"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
    (
      "tile-size"
      "gdouble"
      "Average diameter of each tile (in pixels) (1 <= tile-size <= 1000)"
    )
    (
      "tile-height"
      "gdouble"
      "Apparent height of each tile (in pixels) (1 <= tile-height <= 1000)"
    )
    (
      "tile-spacing"
      "gdouble"
      "Inter_tile spacing (in pixels) (0.1 <= tile-spacing <= 1000)"
    )
    (
      "tile-neatness"
      "gdouble"
      "Deviation from perfectly formed tiles (0 <= tile-neatness <= 1)"
    )
    (
      "tile-allow-split"
      "gint"
      "Allows splitting tiles at hard edges (0 <= tile-allow-split <= 1)"
    )
    (
      "light-dir"
      "gdouble"
      "Direction of light_source (in degrees) (0 <= light-dir <= 360)"
    )
    (
      "color-variation"
      "gdouble"
      "Magnitude of random color variations (0 <= color-variation <= 1)"
    )
    (
      "antialiasing"
      "gint"
      "Enables smoother tile output at the cost of speed (0 <= antialiasing <= 1)"
    )
    (
      "color-averaging"
      "gint"
      "Tile color based on average of subsumed pixels (0 <= color-averaging <= 1)"
    )
    (
      "tile-type"
      "gint"
      "Tile geometry @{ SQUARES (0), HEXAGONS (1), OCTAGONS (2), TRIANGLES (3) @} (0 <= tile-type <= 3)"
    )
    (
      "tile-surface"
      "gint"
      "Surface characteristics @{ SMOOTH (0), ROUGH (1) @} (0 <= tile-surface <= 1)"
    )
    (
      "grout-color"
      "gint"
      "Grout color (black/white or fore/background) @{ BW (0), FG-BG (1) @} (0 <= grout-color <= 1)"
    )
  )
  (
  )
)
(register-procedure "gimp-online-roadmap"
  "Bookmark to the roadmap of GIMP"
  ""
  "Alexandre Prokoudine <alexandre.prokoudine@@gmail.com>"
  "Alexandre Prokoudine <alexandre.prokoudine@@gmail.com>"
  "2018"
  "Temporary Procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
  )
  (
  )
)
(register-procedure "gimp-gradient-segment-range-set-coloring-type"
  "Change the coloring type of a segments range"
  "This function changes the coloring type of a segment range to the specified coloring type."
  "Shlomi Fish <shlomif@@iglu.org.il>"
  "Shlomi Fish"
  "2003"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The gradient name"
    )
    (
      "start-segment"
      "gint"
      "The index of the first segment to operate on (start-segment >= 0)"
    )
    (
      "end-segment"
      "gint"
      "The index of the last segment to operate on. If negative, the selection will extend to the end of the string."
    )
    (
      "coloring-type"
      "GimpGradientSegmentColor"
      "The coloring type @{ GRADIENT-SEGMENT-RGB (0), GRADIENT-SEGMENT-HSV-CCW (1), GRADIENT-SEGMENT-HSV-CW (2) @}"
    )
  )
  (
  )
)
(register-procedure "gimp-drawable-color-balance"
  "Modify the color balance of the specified drawable."
  "Modify the color balance of the specified drawable. There are three axis which can be modified: cyan-red, magenta-green, and yellow-blue. Negative values increase the amount of the former, positive values increase the amount of the latter. Color balance can be controlled with the 'transfer_mode' setting, which allows shadows, mid-tones, and highlights in an image to be affected differently. The 'preserve-lum' parameter, if TRUE, ensures that the luminosity of each pixel remains fixed."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1997"
  "Internal GIMP procedure"
  (
    (
      "drawable"
      "GimpDrawable"
      "The drawable"
    )
    (
      "transfer-mode"
      "GimpTransferMode"
      "Transfer mode @{ TRANSFER-SHADOWS (0), TRANSFER-MIDTONES (1), TRANSFER-HIGHLIGHTS (2) @}"
    )
    (
      "preserve-lum"
      "gboolean"
      "Preserve luminosity values at each pixel (TRUE or FALSE)"
    )
    (
      "cyan-red"
      "gdouble"
      "Cyan-Red color balance (-100 <= cyan-red <= 100)"
    )
    (
      "magenta-green"
      "gdouble"
      "Magenta-Green color balance (-100 <= magenta-green <= 100)"
    )
    (
      "yellow-blue"
      "gdouble"
      "Yellow-Blue color balance (-100 <= yellow-blue <= 100)"
    )
  )
  (
  )
)
(register-procedure "plug-in-screenshot"
  "Create an image from an area of the screen"
  "The plug-in takes screenshots of an interactively selected window or of the desktop, either the whole desktop or an interactively selected region. When called non-interactively, it may grab the root window or use the window-id passed as a parameter.  The last four parameters are optional and can be used to specify the corners of the region to be grabbed.On Mac OS X, when called non-interactively, the plug-inonly can take screenshots of the entire root window.Grabbing a window or a region is not supportednon-interactively. To grab a region or a particularwindow, you need to use the interactive mode."
  "Sven Neumann <sven@@gimp.org>, Henrik Brix Andersen <brix@@gimp.org>,Simone Karin Lehmann"
  "1998 - 2008"
  "v1.1 (2008/04)"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "shoot-type"
      "gint"
      "The shoot type @{ SHOOT-WINDOW (0), SHOOT-ROOT (1), SHOOT-REGION (2) @} (0 <= shoot-type <= 2)"
    )
    (
      "x1"
      "gint"
      "Region left x coord for SHOOT-WINDOW"
    )
    (
      "y1"
      "gint"
      "Region top y coord for SHOOT-WINDOW"
    )
    (
      "x2"
      "gint"
      "Region right x coord for SHOOT-WINDOW"
    )
    (
      "y2"
      "gint"
      "Region bottom y coord for SHOOT-WINDOW"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "Output image"
    )
  )
)
(register-procedure "gimp-drawable-curves-explicit"
  "Modifies the intensity curve(s) for specified drawable."
  "Modifies the intensity mapping for one channel in the specified drawable. The channel can be either an intensity component, or the value. The 'values' parameter is an array of doubles which explicitly defines how each pixel value in the drawable will be modified. Use the 'gimp-drawable-curves-spline' function to modify intensity levels with Catmull Rom splines."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "drawable"
      "GimpDrawable"
      "The drawable"
    )
    (
      "channel"
      "GimpHistogramChannel"
      "The channel to modify @{ HISTOGRAM-VALUE (0), HISTOGRAM-RED (1), HISTOGRAM-GREEN (2), HISTOGRAM-BLUE (3), HISTOGRAM-ALPHA (4), HISTOGRAM-LUMINANCE (5), HISTOGRAM-RGB (6) @}"
    )
    (
      "num-values"
      "gint"
      "The number of values in the new curve (256 <= num-values <= 2096)"
    )
    (
      "values"
      "GimpFloatArray"
      "The explicit curve"
    )
  )
  (
  )
)
(register-procedure "gimp-xcf-save"
  "Saves file in the .xcf file format"
  "The XCF file format has been designed specifically for loading and saving tiled and layered images in GIMP. This procedure will save the specified image in the xcf file format."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "dummy-param"
      "GimpRunMode"
      "Dummy parameter @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image"
    )
    (
      "n-drawables"
      "gint"
      "Number of drawables (n-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "Selected drawables"
    )
    (
      "file"
      "GFile"
      "The file to save the image in"
    )
  )
  (
  )
)
(register-procedure "gimp-gradient-segment-get-coloring-type"
  "Retrieves the gradient segment's coloring type"
  "This procedure retrieves the coloring type of the segment at the specified gradient name and segment index."
  "Shlomi Fish <shlomif@@iglu.org.il>"
  "Shlomi Fish"
  "2003"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The gradient name"
    )
    (
      "segment"
      "gint"
      "The index of the segment within the gradient (segment >= 0)"
    )
  )
  (
    (
      "coloring-type"
      "GimpGradientSegmentColor"
      "The coloring type of the segment @{ GRADIENT-SEGMENT-RGB (0), GRADIENT-SEGMENT-HSV-CCW (1), GRADIENT-SEGMENT-HSV-CW (2) @}"
    )
  )
)
(register-procedure "plug-in-busy-dialog"
  "Show a dialog while waiting for an operation to finish"
  "Used by GIMP to display a dialog, containing a spinner and a custom message, while waiting for an ongoing operation to finish. Optionally, the dialog may provide a \"Cancel\" button, which can be used to cancel the operation."
  "Ell"
  "Ell"
  "2018"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "read-fd"
      "gint"
      "The read file descriptor"
    )
    (
      "write-fd"
      "gint"
      "The write file descriptor"
    )
    (
      "message"
      "gchararray"
      "The message"
    )
    (
      "cancelable"
      "gboolean"
      "Whether the dialog is cancelable (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "gimp-display-present"
  "Present the specified display."
  "This procedure presents the specified display at the top of the display stack."
  "Jehan"
  "Jehan"
  "2021"
  "Internal GIMP procedure"
  (
    (
      "display"
      "GimpDisplay"
      "The display to present"
    )
  )
  (
  )
)
(register-procedure "gimp-gradients-get-list"
  "Retrieve the list of loaded gradients."
  "This procedure returns a list of the gradients that are currently loaded. You can later use the 'gimp-context-set-gradient' function to set the active gradient."
  "Federico Mena Quintero"
  "Federico Mena Quintero"
  "1997"
  "Internal GIMP procedure"
  (
    (
      "filter"
      "gchararray"
      "An optional regular expression used to filter the list"
    )
  )
  (
    (
      "gradient-list"
      "GStrv"
      "The list of gradient names"
    )
  )
)
(register-procedure "gimp-drawable-free-shadow"
  "Free the specified drawable's shadow data (if it exists)."
  "This procedure is intended as a memory saving device. If any shadow memory has been allocated, it will be freed automatically when the drawable is removed from the image, or when the plug-in procedure which allocated it returns."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2008"
  "Internal GIMP procedure"
  (
    (
      "drawable"
      "GimpDrawable"
      "The drawable"
    )
  )
  (
  )
)
(register-procedure "gimp-drawable-offset"
  "Offset the drawable by the specified amounts in the X and Y directions"
  "This procedure offsets the specified drawable by the amounts specified by 'offset_x' and 'offset_y'. If 'wrap_around' is set to TRUE, then portions of the drawable which are offset out of bounds are wrapped around. Alternatively, the undefined regions of the drawable can be filled with transparency or the background color, as specified by the 'fill-type' parameter."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1997"
  "Internal GIMP procedure"
  (
    (
      "drawable"
      "GimpDrawable"
      "The drawable to offset"
    )
    (
      "wrap-around"
      "gboolean"
      "wrap image around or fill vacated regions (TRUE or FALSE)"
    )
    (
      "fill-type"
      "GimpOffsetType"
      "fill vacated regions of drawable with background or transparent @{ OFFSET-BACKGROUND (0), OFFSET-TRANSPARENT (1), OFFSET-WRAP-AROUND (2) @}"
    )
    (
      "offset-x"
      "gint"
      "offset by this amount in X direction"
    )
    (
      "offset-y"
      "gint"
      "offset by this amount in Y direction"
    )
  )
  (
  )
)
(register-procedure "gimp-pdb-set-proc-sensitivity-mask"
  "Set the sensitivity mask for a plug-in procedure."
  "This procedure sets the sensitivity mask for the given procedure."
  "Jehan"
  "Jehan"
  "2021"
  "Internal GIMP procedure"
  (
    (
      "procedure-name"
      "gchararray"
      "The procedure"
    )
    (
      "mask"
      "gint"
      "The procedure's sensitivity mask"
    )
  )
  (
  )
)
(register-procedure "plug-in-metadata-editor"
  "Edit metadata (IPTC, EXIF, XMP)"
  "Edit metadata information attached to the current image. Some or all of this metadata will be saved in the file, depending on the output file format."
  "Ben Touchette"
  "Ben Touchette"
  "2017"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The input image"
    )
  )
  (
  )
)
(register-procedure "gimp-gradients-popup"
  "Invokes the Gimp gradients selection."
  "This procedure opens the gradient selection dialog."
  "Andy Thomas"
  "Andy Thomas"
  "1998"
  "Internal GIMP procedure"
  (
    (
      "gradient-callback"
      "gchararray"
      "The callback PDB proc to call when gradient selection is made"
    )
    (
      "popup-title"
      "gchararray"
      "Title of the gradient selection dialog"
    )
    (
      "initial-gradient"
      "gchararray"
      "The name of the gradient to set as the first selected"
    )
    (
      "sample-size"
      "gint"
      "Size of the sample to return when the gradient is changed (1 <= sample-size <= 10000)"
    )
  )
  (
  )
)
(register-procedure "gimp-floating-sel-to-layer"
  "Transforms the specified floating selection into a layer."
  "This procedure transforms the specified floating selection into a layer with the same offsets and extents. The composited image will look precisely the same, but the floating selection layer will no longer be clipped to the extents of the drawable it was attached to. The floating selection will become the active layer. This procedure will not work if the floating selection has a different base type from the underlying image. This might be the case if the floating selection is above an auxiliary channel or a layer mask."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "floating-sel"
      "GimpLayer"
      "The floating selection"
    )
  )
  (
  )
)
(register-procedure "plug-in-sparkle"
  "Turn bright spots into starry sparkles"
  "Uses a percentage based luminoisty threhsold to find candidate pixels for adding some sparkles (spikes)."
  "John Beale, & (ported to GIMP v0.54) Michael J. Hammel & ted to GIMP v1.0) & Seth Burgess & Spencer Kimball"
  "John Beale"
  "Version 1.27, September 2003"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The input image"
    )
    (
      "num-drawables"
      "gint"
      "Number of input drawables (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The input drawables"
    )
    (
      "lum-threshold"
      "gdouble"
      "Luminosity threshold (0 <= lum-threshold <= 1)"
    )
    (
      "flare-inten"
      "gdouble"
      "Flare intensity (0 <= flare-inten <= 1)"
    )
    (
      "spike-len"
      "gint"
      "Spike length (in pixels) (1 <= spike-len <= 1000)"
    )
    (
      "spike-points"
      "gint"
      "# of spike points (1 <= spike-points <= 1000)"
    )
    (
      "spike-angle"
      "gint"
      "Spike angle (-1: random) (-1 <= spike-angle <= 360)"
    )
    (
      "density"
      "gdouble"
      "Spike density (0 <= density <= 1)"
    )
    (
      "transparency"
      "gdouble"
      "Transparency (0 <= transparency <= 1)"
    )
    (
      "random-hue"
      "gdouble"
      "Random hue (0 <= random-hue <= 1)"
    )
    (
      "random-saturation"
      "gdouble"
      "Random saturation (0 <= random-saturation <= 1)"
    )
    (
      "preserve-luminosity"
      "gboolean"
      "Preserve luminosity (TRUE or FALSE)"
    )
    (
      "inverse"
      "gboolean"
      "Inverse (TRUE or FALSE)"
    )
    (
      "border"
      "gboolean"
      "Add border (TRUE or FALSE)"
    )
    (
      "color-type"
      "gint"
      "Color of sparkles: @{ NATURAL (0), FOREGROUND (1), BACKGROUND (2) @} (0 <= color-type <= 2)"
    )
  )
  (
  )
)
(register-procedure "gimp-image-set-component-visible"
  "Sets if the specified image's image component is visible."
  "This procedure sets if the specified image's image component (i.e. Red, Green, Blue intensity channels in an RGB image) is visible or invisible -- whether or not it can be seen. If the specified component is not valid for the image type, an error is returned."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "component"
      "GimpChannelType"
      "The image component @{ CHANNEL-RED (0), CHANNEL-GREEN (1), CHANNEL-BLUE (2), CHANNEL-GRAY (3), CHANNEL-INDEXED (4), CHANNEL-ALPHA (5) @}"
    )
    (
      "visible"
      "gboolean"
      "Component is visible (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "gimp-image-rotate"
  "Rotates the image by the specified degrees."
  "This procedure rotates the image."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2003"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "rotate-type"
      "GimpRotationType"
      "Angle of rotation @{ ROTATE-90 (0), ROTATE-180 (1), ROTATE-270 (2) @}"
    )
  )
  (
  )
)
(register-procedure "gimp-help-using-selections"
  "Bookmark to the user manual"
  ""
  "Roman Joost <romanofski@@gimp.org>"
  "Roman Joost <romanofski@@gimp.org>"
  "2006"
  "Temporary Procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
  )
  (
  )
)
(register-procedure "gimp-drawable-curves-spline"
  "Modifies the intensity curve(s) for specified drawable."
  "Modifies the intensity mapping for one channel in the specified drawable. The channel can be either an intensity component, or the value. The 'points' parameter is an array of doubles which define a set of control points which describe a Catmull Rom spline which yields the final intensity curve. Use the 'gimp-drawable-curves-explicit' function to explicitly modify intensity levels."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "drawable"
      "GimpDrawable"
      "The drawable"
    )
    (
      "channel"
      "GimpHistogramChannel"
      "The channel to modify @{ HISTOGRAM-VALUE (0), HISTOGRAM-RED (1), HISTOGRAM-GREEN (2), HISTOGRAM-BLUE (3), HISTOGRAM-ALPHA (4), HISTOGRAM-LUMINANCE (5), HISTOGRAM-RGB (6) @}"
    )
    (
      "num-points"
      "gint"
      "The number of values in the control point array (4 <= num-points <= 2048)"
    )
    (
      "points"
      "GimpFloatArray"
      "The spline control points: @{ cp1.x, cp1.y, cp2.x, cp2.y, ... @}"
    )
  )
  (
  )
)
(register-procedure "plug-in-film"
  "Combine several images on a film strip"
  "Compose several images to a roll film"
  "Peter Kirchgessner"
  "Peter Kirchgessner (peter@@kirchgessner.net)"
  "1997"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The input image"
    )
    (
      "num-drawables"
      "gint"
      "Number of input drawables (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The input drawables"
    )
    (
      "film-height"
      "gint"
      "Height of film (0: fit to images) (0 <= film-height <= 524288)"
    )
    (
      "film-color"
      "GimpRGB"
      "Color of the film"
    )
    (
      "number-start"
      "gint"
      "Start index for numbering"
    )
    (
      "number-font"
      "gchararray"
      "Font for drawing numbers"
    )
    (
      "number-color"
      "GimpRGB"
      "Color for numbers"
    )
    (
      "at-top"
      "gboolean"
      "Draw numbers at top (TRUE or FALSE)"
    )
    (
      "at-bottom"
      "gboolean"
      "Draw numbers at bottom (TRUE or FALSE)"
    )
    (
      "num-images"
      "gint"
      "Number of images to be used for film (1 <= num-images <= 64)"
    )
    (
      "images"
      "GimpObjectArray"
      "num-images images to be used for film"
    )
  )
  (
    (
      "new-image"
      "GimpImage"
      "Output image"
    )
  )
)
(register-procedure "script-fu-guide-new"
  "Add a guide at the orientation and position specified (in pixels)"
  ""
  "Alan Horkan"
  "Alan Horkan, 2004.  Public Domain."
  "2004-04-02"
  "Temporary Procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Image"
    )
    (
      "drawable"
      "GimpDrawable"
      "Drawable"
    )
    (
      "option"
      "gint"
      "_Direction"
    )
    (
      "adjustment"
      "gdouble"
      "_Position"
    )
  )
  (
  )
)
(register-procedure "gimp-context-set-line-dash-offset"
  "Set the line dash offset setting."
  "This procedure modifies the line dash offset setting for stroking lines.

This setting affects the following procedures: 'gimp-drawable-edit-stroke-selection', 'gimp-drawable-edit-stroke-item'."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2015"
  "Internal GIMP procedure"
  (
    (
      "dash-offset"
      "gdouble"
      "The line dash offset setting (0 <= dash-offset <= 100)"
    )
  )
  (
  )
)
(register-procedure "gimp-context-set-line-width-unit"
  "Set the line width unit setting."
  "This procedure modifies the line width unit setting for stroking lines.

This setting affects the following procedures: 'gimp-drawable-edit-stroke-selection', 'gimp-drawable-edit-stroke-item'."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2015"
  "Internal GIMP procedure"
  (
    (
      "line-width-unit"
      "GimpUnit"
      "The line width setting unit"
    )
  )
  (
  )
)
(register-procedure "gimp-brush-get-shape"
  "Gets the shape of a generated brush."
  "This procedure gets the shape value for a generated brush. If called for any other type of brush, it does not succeed. The current possibilities are Circle (GIMP_BRUSH_GENERATED_CIRCLE), Square (GIMP_BRUSH_GENERATED_SQUARE), and Diamond (GIMP_BRUSH_GENERATED_DIAMOND). Other shapes are likely to be added in the future."
  "Bill Skaggs <weskaggs@@primate.ucdavis.edu>"
  "Bill Skaggs"
  "2004"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The brush name"
    )
  )
  (
    (
      "shape"
      "GimpBrushGeneratedShape"
      "The brush shape @{ BRUSH-GENERATED-CIRCLE (0), BRUSH-GENERATED-SQUARE (1), BRUSH-GENERATED-DIAMOND (2) @}"
    )
  )
)
(register-procedure "gimp-layer-add-alpha"
  "Add an alpha channel to the layer if it doesn't already have one."
  "This procedure adds an additional component to the specified layer if it does not already possess an alpha channel. An alpha channel makes it possible to clear and erase to transparency, instead of the background color. This transforms layers of type RGB to RGBA, GRAY to GRAYA, and INDEXED to INDEXEDA."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "layer"
      "GimpLayer"
      "The layer"
    )
  )
  (
  )
)
(register-procedure "file-exr-save"
  "Saves files in the OpenEXR file format"
  "This procedure saves images in the OpenEXR format, using gegl:exr-save"
  ""
  ""
  ""
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The image to save"
    )
    (
      "num-drawables"
      "gint"
      "Number of drawables to be saved (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The drawables to save"
    )
    (
      "file"
      "GFile"
      "The file to save to"
    )
  )
  (
  )
)
(register-procedure "gimp-gradient-segment-range-redistribute-handles"
  "Uniformly redistribute the segment range's handles"
  "This function redistributes the handles of the specified segment range of the specified gradient, so they'll be evenly spaced."
  "Shlomi Fish <shlomif@@iglu.org.il>"
  "Shlomi Fish"
  "2003"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The gradient name"
    )
    (
      "start-segment"
      "gint"
      "The index of the first segment to operate on (start-segment >= 0)"
    )
    (
      "end-segment"
      "gint"
      "The index of the last segment to operate on. If negative, the selection will extend to the end of the string."
    )
  )
  (
  )
)
(register-procedure "plug-in-dog"
  "Edge detection with control of edge thickness"
  "Applies two Gaussian blurs to the drawable, and subtracts the results. This is robust and widely used method for detecting edges."
  "Compatibility procedure. Please see 'gegl:difference-of-gaussians' for credits."
  "Compatibility procedure. Please see 'gegl:difference-of-gaussians' for credits."
  "2015"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
    (
      "inner"
      "gdouble"
      "Radius of inner gaussian blur in pixels (0 <= inner <= 10)"
    )
    (
      "outer"
      "gdouble"
      "Radius of outer gaussian blur in pixels (0 <= outer <= 10)"
    )
    (
      "normalize"
      "gboolean"
      "Normalize (TRUE or FALSE)"
    )
    (
      "invert"
      "gboolean"
      "Invert (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "gimp-context-set-ink-blob-angle"
  "Set ink blob angle in degrees."
  "Set the ink blob angle in degrees for ink tool."
  "Ed Swartz"
  "Ed Swartz"
  "2012"
  "Internal GIMP procedure"
  (
    (
      "angle"
      "gdouble"
      "ink blob angle in degrees (-180 <= angle <= 180)"
    )
  )
  (
  )
)
(register-procedure "gimp-palettes-refresh"
  "Refreshes current palettes. This function always succeeds."
  "This procedure retrieves all palettes currently in the user's palette path and updates the palette dialogs accordingly."
  "Adrian Likins <adrian@@gimp.org>"
  "Adrian Likins"
  "1998"
  "Internal GIMP procedure"
  (
  )
  (
  )
)
(register-procedure "gimp-context-set-brush-default-size"
  "Set brush size to its default."
  "Set the brush size to the default (max of width and height) for paintbrush, airbrush, or pencil tools."
  "Ed Swartz"
  "Ed Swartz"
  "2012"
  "Internal GIMP procedure"
  (
  )
  (
  )
)
(register-procedure "plug-in-sobel"
  "Specialized direction-dependent edge detection"
  "This plug-in calculates the gradient with a sobel operator. The user can specify which direction to use. When both directions are used, the result is the RMS of the two gradients; if only one direction is used, the result either the absolute value of the gradient, or 127 + gradient (if the 'keep sign' switch is on). This way, information about the direction of the gradient is preserved. Resulting images are not autoscaled.\""
  "Compatibility procedure. Please see 'gegl:edge-sobel' for credits."
  "Compatibility procedure. Please see 'gegl:edge-sobel' for credits."
  "2014"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
    (
      "horizontal"
      "gboolean"
      "Sobel in horizontal direction (TRUE or FALSE)"
    )
    (
      "vertical"
      "gboolean"
      "Sobel in vertical direction (TRUE or FALSE)"
    )
    (
      "keep-sign"
      "gboolean"
      "Keep sign of result (one direction only) (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "gimp-vectors-bezier-stroke-new-moveto"
  "Adds a bezier stroke with a single moveto to the vectors object."
  "Adds a bezier stroke with a single moveto to the vectors object."
  "Simon Budig"
  "Simon Budig"
  "2005"
  "Internal GIMP procedure"
  (
    (
      "vectors"
      "GimpVectors"
      "The vectors object"
    )
    (
      "x0"
      "gdouble"
      "The x-coordinate of the moveto"
    )
    (
      "y0"
      "gdouble"
      "The y-coordinate of the moveto"
    )
  )
  (
    (
      "stroke-id"
      "gint"
      "The resulting stroke"
    )
  )
)
(register-procedure "script-fu-old-photo"
  "Make an image look like an old photo"
  ""
  "Chris Gutteridge"
  "1998, Chris Gutteridge / ECS dept, University of Southampton, England."
  "16th April 1998"
  "Temporary Procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "drawable"
      "GimpDrawable"
      "The layer"
    )
    (
      "toggle"
      "gboolean"
      "Defocus (TRUE or FALSE)"
    )
    (
      "adjustment"
      "gdouble"
      "Border size"
    )
    (
      "toggle-2"
      "gboolean"
      "Sepia (TRUE or FALSE)"
    )
    (
      "toggle-3"
      "gboolean"
      "Mottle (TRUE or FALSE)"
    )
    (
      "toggle-4"
      "gboolean"
      "Work on copy (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "gimp-text-layer-get-line-spacing"
  "Get the spacing between lines of text."
  "This procedure returns the line-spacing between lines of text in a text layer."
  "Marcus Heese <heese@@cip.ifi.lmu.de>"
  "Marcus Heese"
  "2008"
  "Internal GIMP procedure"
  (
    (
      "layer"
      "GimpLayer"
      "The text layer."
    )
  )
  (
    (
      "line-spacing"
      "gdouble"
      "The line-spacing value."
    )
  )
)
(register-procedure "gimp-fonts-get-list"
  "Retrieve the list of loaded fonts."
  "This procedure returns a list of the fonts that are currently available."
  "Sven Neumann <sven@@gimp.org>"
  "Sven Neumann"
  "2003"
  "Internal GIMP procedure"
  (
    (
      "filter"
      "gchararray"
      "An optional regular expression used to filter the list"
    )
  )
  (
    (
      "font-list"
      "GStrv"
      "The list of font names"
    )
  )
)
(register-procedure "plug-in-bump-map"
  "Create an embossing effect using a bump map"
  "This plug-in uses the algorithm described by John Schlag, \"Fast Embossing Effects on Raster Image Data\" in Graphics GEMS IV (ISBN 0-12-336155-9). It takes a drawable to be applied as a bump map to another image and produces a nice embossing effect."
  "Compatibility procedure. Please see 'gegl:bump-map' for credits."
  "Compatibility procedure. Please see 'gegl:bump-map' for credits."
  "2015"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
    (
      "bumpmap"
      "GimpDrawable"
      "Bump map drawable"
    )
    (
      "azimuth"
      "gdouble"
      "Azimuth (0 <= azimuth <= 360)"
    )
    (
      "elevation"
      "gdouble"
      "Elevation (0.5 <= elevation <= 90)"
    )
    (
      "depth"
      "gint"
      "Depth (1 <= depth <= 65)"
    )
    (
      "xofs"
      "gint"
      "X offset"
    )
    (
      "yofs"
      "gint"
      "Y offset"
    )
    (
      "waterlevel"
      "gdouble"
      "Level that full transparency should represent (0 <= waterlevel <= 1)"
    )
    (
      "ambient"
      "gdouble"
      "Ambient lighting factor (0 <= ambient <= 1)"
    )
    (
      "compensate"
      "gboolean"
      "Compensate for darkening (TRUE or FALSE)"
    )
    (
      "invert"
      "gboolean"
      "Invert bumpmap (TRUE or FALSE)"
    )
    (
      "type"
      "gint"
      "Type of map @{ LINEAR (0), SPHERICAL (1), SINUSOIDAL (2) @} (0 <= type <= 3)"
    )
  )
  (
  )
)
(register-procedure "gimp-context-get-distance-metric"
  "Get the distance metric used in some computations."
  "This procedure returns the distance metric in the current context. See 'gimp-context-set-distance-metric' to know more about its usage."
  "Jehan"
  "Jehan"
  "2018"
  "Internal GIMP procedure"
  (
  )
  (
    (
      "metric"
      "GeglDistanceMetric"
      "The distance metric @{ Euclidean (0), Manhattan (1), Chebyshev (2) @}"
    )
  )
)
(register-procedure "gimp-get-monitor-resolution"
  "Get the monitor resolution as specified in the Preferences."
  "Returns the resolution of the monitor in pixels/inch. This value is taken from the Preferences (or the windowing system if this is set in the Preferences) and there's no guarantee for the value to be reasonable."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
  )
  (
    (
      "xres"
      "gdouble"
      "X resolution"
    )
    (
      "yres"
      "gdouble"
      "Y resolution"
    )
  )
)
(register-procedure "gimp-pdb-proc-exists"
  "Checks if the specified procedure exists in the procedural database"
  "This procedure checks if the specified procedure is registered in the procedural database."
  "Sven Neumann <sven@@gimp.org>"
  "Sven Neumann"
  "2008"
  "Internal GIMP procedure"
  (
    (
      "procedure-name"
      "gchararray"
      "The procedure name"
    )
  )
  (
    (
      "exists"
      "gboolean"
      "Whether a procedure of that name is registered (TRUE or FALSE)"
    )
  )
)
(register-procedure "gimp-image-grid-get-style"
  "Gets the style of an image's grid."
  "This procedure retrieves the style of an image's grid."
  "Sylvain Foret"
  "Sylvain Foret"
  "2005"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
  )
  (
    (
      "style"
      "GimpGridStyle"
      "The image's grid style @{ GRID-DOTS (0), GRID-INTERSECTIONS (1), GRID-ON-OFF-DASH (2), GRID-DOUBLE-DASH (3), GRID-SOLID (4) @}"
    )
  )
)
(register-procedure "gimp-unit-set-deletion-flag"
  "Sets the deletion flag of a unit."
  "This procedure sets the unit's deletion flag. If the deletion flag of a unit is TRUE on gimp exit, this unit's definition will not be saved in the user's unitrc."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "1999"
  "Internal GIMP procedure"
  (
    (
      "unit-id"
      "GimpUnit"
      "The unit's integer ID"
    )
    (
      "deletion-flag"
      "gboolean"
      "The new deletion flag of the unit (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "plug-in-engrave"
  "Simulate an antique engraving"
  "Creates a black-and-white 'engraved' version of an image as seen in old illustrations."
  "Compatibility procedure. Please see 'gegl:engrave' for credits."
  "Compatibility procedure. Please see 'gegl:engrave' for credits."
  "2014"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
    (
      "height"
      "gint"
      "Resolution in pixels (2 <= height <= 16)"
    )
    (
      "limit"
      "gboolean"
      "Limit line width (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "gimp-context-set-brush-angle"
  "Set brush angle in degrees."
  "Set the angle in degrees for brush based paint tools."
  "Ed Swartz"
  "Ed Swartz"
  "2012"
  "Internal GIMP procedure"
  (
    (
      "angle"
      "gdouble"
      "Angle in degrees (-180 <= angle <= 180)"
    )
  )
  (
  )
)
(register-procedure "file-xwd-load"
  "Loads files in the XWD (X Window Dump) format"
  "Loads files in the XWD (X Window Dump) format. XWD image files are produced by the program xwd. Xwd is an X Window System window dumping utility."
  "Peter Kirchgessner"
  "Peter Kirchgessner"
  "1996"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "file"
      "GFile"
      "The file to load"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "Output image"
    )
  )
)
(register-procedure "file-svg-load"
  "Loads files in the SVG file format"
  "Renders SVG files to raster graphics using librsvg."
  "Dom Lachowicz, Sven Neumann"
  "Dom Lachowicz <cinamod@@hotmail.com>"
  "2.5.0"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "file"
      "GFile"
      "The file to load"
    )
    (
      "resolution"
      "gdouble"
      "Resolution to use for rendering the SVG (0.005 <= resolution <= 1.04858e+06)"
    )
    (
      "width"
      "gint"
      "Width (in pixels) to load the SVG in. (0 for original width, a negative width to specify a maximum width) (-524288 <= width <= 524288)"
    )
    (
      "height"
      "gint"
      "Height (in pixels) to load the SVG in. (0 for original height, a negative height to specify a maximum height) (-524288 <= height <= 524288)"
    )
    (
      "paths"
      "gint"
      "(0) don't import paths, (1) paths individually, (2) paths merged (0 <= paths <= 2)"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "Output image"
    )
  )
)
(register-procedure "gimp-gradient-segment-get-middle-pos"
  "Retrieves the middle point position of the specified segment"
  "This procedure retrieves the middle point position of the specified segment of the specified gradient."
  "Shlomi Fish <shlomif@@iglu.org.il>"
  "Shlomi Fish"
  "2003"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The gradient name"
    )
    (
      "segment"
      "gint"
      "The index of the segment within the gradient (segment >= 0)"
    )
  )
  (
    (
      "pos"
      "gdouble"
      "The return position"
    )
  )
)
(register-procedure "script-fu-paste-as-brush"
  "Paste the clipboard contents into a new brush"
  ""
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2005-09-25"
  "Temporary Procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "string"
      "gchararray"
      "_Brush name"
    )
    (
      "string-2"
      "gchararray"
      "_File name"
    )
    (
      "adjustment"
      "gdouble"
      "_Spacing"
    )
  )
  (
  )
)
(register-procedure "plug-in-neon"
  "Simulate the glowing boundary of a neon light"
  "This filter works in a manner similar to the edge plug-in, but uses the first derivative of the gaussian operator to achieve resolution independence. The IIR method of calculating the effect is utilized to keep the processing time constant between large and small standard deviations."
  "Compatibility procedure. Please see 'gegl:edge-neon' for credits."
  "Compatibility procedure. Please see 'gegl:edge-neon' for credits."
  "2019"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
    (
      "radius"
      "gdouble"
      "Radius of neon effect (in pixels) (0 <= radius <= 1500)"
    )
    (
      "amount"
      "gdouble"
      "Effect enhancement variable (0 <= amount <= 100)"
    )
  )
  (
  )
)
(register-procedure "gimp-palette-export-css"
  "Export the active palette as a CSS stylesheet with the color entry name as their class name, and the color itself as the color attribute"
  ""
  "Barak Itkin <lightningismyname@@gmail.com>"
  "Barak Itkin"
  "May 15th, 2009"
  "Temporary Procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "dirname"
      "gchararray"
      "Folder for the output file"
    )
    (
      "string"
      "gchararray"
      "The name of the file to create (if a file with this name already exist, it will be replaced)"
    )
  )
  (
  )
)
(register-procedure "file-sunras-save"
  "Export file in the SunRaster file format"
  "SUNRAS exporting handles all image types except those with alpha channels."
  "Peter Kirchgessner"
  "Peter Kirchgessner"
  "1996"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The image to save"
    )
    (
      "num-drawables"
      "gint"
      "Number of drawables to be saved (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The drawables to save"
    )
    (
      "file"
      "GFile"
      "The file to save to"
    )
    (
      "rle"
      "gboolean"
      "Use RLE output (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "gimp-pdb-query"
  "Queries the procedural database for its contents using regular expression matching."
  "This procedure queries the contents of the procedural database. It is supplied with seven arguments matching procedures on @{ name, blurb, help, authors, copyright, date, procedure type@}. This is accomplished using regular expression matching. For instance, to find all procedures with \"jpeg\" listed in the blurb, all seven arguments can be supplied as \".*\", except for the second, which can be supplied as \".*jpeg.*\". There are two return arguments for this procedure. The first is the number of procedures matching the query. The second is a concatenated list of procedure names corresponding to those matching the query. If no matching entries are found, then the returned string is NULL and the number of entries is 0."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The regex for procedure name"
    )
    (
      "blurb"
      "gchararray"
      "The regex for procedure blurb"
    )
    (
      "help"
      "gchararray"
      "The regex for procedure help"
    )
    (
      "authors"
      "gchararray"
      "The regex for procedure authors"
    )
    (
      "copyright"
      "gchararray"
      "The regex for procedure copyright"
    )
    (
      "date"
      "gchararray"
      "The regex for procedure date"
    )
    (
      "proc-type"
      "gchararray"
      "The regex for procedure type: @{ 'Internal GIMP procedure', 'GIMP Plug-in', 'GIMP Extension', 'Temporary Procedure' @}"
    )
  )
  (
    (
      "procedure-names"
      "GStrv"
      "The list of procedure names"
    )
  )
)
(register-procedure "file-raw-placeholder-pxn-load"
  "Load files in the PXN raw format via placeholder"
  "This plug-in loads files in Logitech's raw PXN format by calling placeholder."
  "Tobias Ellinghaus"
  "Tobias Ellinghaus"
  "2016"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "file"
      "GFile"
      "The file to load"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "Output image"
    )
  )
)
(register-procedure "gimp-image-remove-layer"
  "Remove the specified layer from the image."
  "This procedure removes the specified layer from the image. If the layer doesn't exist, an error is returned. If there are no layers left in the image, this call will fail. If this layer is the last layer remaining, the image will become empty and have no active layer."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "layer"
      "GimpLayer"
      "The layer"
    )
  )
  (
  )
)
(register-procedure "gimp-vectors-stroke-flip-free"
  "flips the given stroke about an arbitrary axis."
  "Flips the given stroke about an arbitrary axis. Axis is defined by two coordinates in the image (in pixels), through which the flipping axis passes."
  "João S. O. Bueno"
  "João S. O. Bueno"
  "2006"
  "Internal GIMP procedure"
  (
    (
      "vectors"
      "GimpVectors"
      "The vectors object"
    )
    (
      "stroke-id"
      "gint"
      "The stroke ID"
    )
    (
      "x1"
      "gdouble"
      "X coordinate of the first point of the flipping axis"
    )
    (
      "y1"
      "gdouble"
      "Y coordinate of the first point of the flipping axis"
    )
    (
      "x2"
      "gdouble"
      "X coordinate of the second point of the flipping axis"
    )
    (
      "y2"
      "gdouble"
      "Y coordinate of the second point of the flipping axis"
    )
  )
  (
  )
)
(register-procedure "gimp-context-set-line-join-style"
  "Set the line join style setting."
  "This procedure modifies the line join style setting for stroking lines.

This setting affects the following procedures: 'gimp-drawable-edit-stroke-selection', 'gimp-drawable-edit-stroke-item'."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2015"
  "Internal GIMP procedure"
  (
    (
      "join-style"
      "GimpJoinStyle"
      "The line join style setting @{ JOIN-MITER (0), JOIN-ROUND (1), JOIN-BEVEL (2) @}"
    )
  )
  (
  )
)
(register-procedure "script-fu-set-cmap"
  "Change the colormap of an image to the colors in a specified palette."
  ""
  "Kevin Cozens <kcozens@@interlog.com>"
  "Kevin Cozens"
  "September 29, 2004"
  "Temporary Procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Image"
    )
    (
      "drawable"
      "GimpDrawable"
      "Drawable"
    )
    (
      "palette"
      "gchararray"
      "Palette"
    )
  )
  (
  )
)
(register-procedure "gimp-context-set-brush-size"
  "Set brush size in pixels."
  "Set the brush size in pixels for brush based paint tools."
  "Ed Swartz"
  "Ed Swartz"
  "2012"
  "Internal GIMP procedure"
  (
    (
      "size"
      "gdouble"
      "Brush size in pixels (1 <= size <= 10000)"
    )
  )
  (
  )
)
(register-procedure "gimp-palette-entry-get-name"
  "Gets the specified palette entry from the specified palette."
  "This procedure retrieves the name of the zero-based entry specified for the specified palette. It returns an error if the entry does not exist."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2004"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The palette name"
    )
    (
      "entry-num"
      "gint"
      "The entry to retrieve"
    )
  )
  (
    (
      "entry-name"
      "gchararray"
      "The name requested"
    )
  )
)
(register-procedure "gimp-gradients-set-popup"
  "Sets the current gradient in a gradient selection dialog."
  "Sets the current gradient in a gradient selection dialog."
  "Andy Thomas"
  "Andy Thomas"
  "1998"
  "Internal GIMP procedure"
  (
    (
      "gradient-callback"
      "gchararray"
      "The name of the callback registered for this pop-up"
    )
    (
      "gradient-name"
      "gchararray"
      "The name of the gradient to set as selected"
    )
  )
  (
  )
)
(register-procedure "gimp-drawable-type-with-alpha"
  "Returns the drawable's type with alpha."
  "This procedure returns the drawable's type as if had an alpha channel. If the type is currently Gray, for instance, the returned type would be GrayA. If the drawable already has an alpha channel, the drawable's type is simply returned."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "drawable"
      "GimpDrawable"
      "The drawable"
    )
  )
  (
    (
      "type-with-alpha"
      "GimpImageType"
      "The drawable's type with alpha @{ RGBA-IMAGE (1), GRAYA-IMAGE (3), INDEXEDA-IMAGE (5) @}"
    )
  )
)
(register-procedure "plug-in-sel-gauss"
  "Blur neighboring pixels, but only in low-contrast areas"
  "This filter functions similar to the regular gaussian blur filter except that neighbouring pixels that differ more than the given maxdelta parameter will not be blended with. This way with the correct parameters, an image can be smoothed out without losing details. However, this filter can be rather slow."
  "Compatibility procedure. Please see 'gegl:gaussian-blur-selective' for credits."
  "Compatibility procedure. Please see 'gegl:gaussian-blur-selective' for credits."
  "2099"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
    (
      "radius"
      "gdouble"
      "Radius of gaussian blur (in pixels) (radius >= 0)"
    )
    (
      "max-delta"
      "gint"
      "Maximum delta (0 <= max-delta <= 255)"
    )
  )
  (
  )
)
(register-procedure "plug-in-flarefx"
  "Add a lens flare effect"
  "Adds a lens flare effects. Makes your image look like it was snapped with a cheap camera with a lot of lens :)"
  "Compatibility procedure. Please see 'gegl:lens-flare' for credits."
  "Compatibility procedure. Please see 'gegl:lens-flare' for credits."
  "2015"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
    (
      "pos-x"
      "gint"
      "X-Position"
    )
    (
      "pos-y"
      "gint"
      "Y-Position"
    )
  )
  (
  )
)
(register-procedure "file-cel-save"
  "Exports files in KISS CEL file format"
  "This plug-in exports individual KISS cell files."
  "Nick Lamb"
  "Nick Lamb <njl195@@zepler.org.uk>"
  "May 1998"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The image to save"
    )
    (
      "num-drawables"
      "gint"
      "Number of drawables to be saved (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The drawables to save"
    )
    (
      "file"
      "GFile"
      "The file to save to"
    )
    (
      "palette-filename"
      "gchararray"
      "Filename to save palette to"
    )
  )
  (
  )
)
(register-procedure "file-ico-load-thumb"
  "Loads a preview from a Windows ICO or CUR files"
  ""
  "Dom Lachowicz, Sven Neumann"
  "Sven Neumann <sven@@gimp.org>"
  "2005"
  "GIMP Plug-In"
  (
    (
      "file"
      "GFile"
      "The file to load the thumbnail from"
    )
    (
      "thumb-size"
      "gint"
      "Preferred thumbnail size (16 <= thumb-size <= 2014)"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "Thumbnail image"
    )
    (
      "image-width"
      "gint"
      "Width of the full-sized image (0 for unknown) (0 <= image-width <= 524288)"
    )
    (
      "image-height"
      "gint"
      "Height of the full-sized image (0 for unknown) (0 <= image-height <= 524288)"
    )
    (
      "image-type"
      "GimpImageType"
      "Type of the image @{ RGB-IMAGE (0), RGBA-IMAGE (1), GRAY-IMAGE (2), GRAYA-IMAGE (3), INDEXED-IMAGE (4), INDEXEDA-IMAGE (5) @}"
    )
    (
      "num-layers"
      "gint"
      "Number of layers in the image (num-layers >= 1)"
    )
  )
)
(register-procedure "gimp-get-images"
  "Returns the list of images currently open."
  "This procedure returns the list of images currently open in GIMP."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
  )
  (
    (
      "num-images"
      "gint"
      "The number of images currently open (num-images >= 0)"
    )
    (
      "images"
      "GimpObjectArray"
      "The list of images currently open."
    )
  )
)
(register-procedure "gimp-gradient-segment-get-right-pos"
  "Retrieves the right endpoint position of the specified segment"
  "This procedure retrieves the right endpoint position of the specified segment of the specified gradient."
  "Shlomi Fish <shlomif@@iglu.org.il>"
  "Shlomi Fish"
  "2003"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The gradient name"
    )
    (
      "segment"
      "gint"
      "The index of the segment within the gradient (segment >= 0)"
    )
  )
  (
    (
      "pos"
      "gdouble"
      "The return position"
    )
  )
)
(register-procedure "gimp-paintbrush-default"
  "Paint in the current brush. The fade out parameter and pull colors from a gradient parameter are set from the paintbrush options dialog. If this dialog has not been activated then the dialog defaults will be used."
  "This tool is similar to the standard paintbrush. It draws linearly interpolated lines through the specified stroke coordinates. It operates on the specified drawable in the foreground color with the active brush. The 'fade-out' parameter is measured in pixels and allows the brush stroke to linearly fall off (value obtained from the option dialog). The pressure is set to the maximum at the beginning of the stroke. As the distance of the stroke nears the fade-out value, the pressure will approach zero. The gradient-length (value obtained from the option dialog) is the distance to spread the gradient over. It is measured in pixels. If the gradient-length is 0, no gradient is used."
  "Andy Thomas"
  "Andy Thomas"
  "1999"
  "Internal GIMP procedure"
  (
    (
      "drawable"
      "GimpDrawable"
      "The affected drawable"
    )
    (
      "num-strokes"
      "gint"
      "Number of stroke control points (count each coordinate as 2 points) (num-strokes >= 2)"
    )
    (
      "strokes"
      "GimpFloatArray"
      "Array of stroke coordinates: @{ s1.x, s1.y, s2.x, s2.y, ..., sn.x, sn.y @}"
    )
  )
  (
  )
)
(register-procedure "script-fu-waves-anim"
  "Create a multi-layer image with an effect like a stone was thrown into the current image"
  ""
  "Sven Neumann <sven@@gimp.org>"
  "Sven Neumann"
  "1997/13/12"
  "Temporary Procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Image"
    )
    (
      "drawable"
      "GimpDrawable"
      "Drawable"
    )
    (
      "adjustment"
      "gdouble"
      "Amplitude"
    )
    (
      "adjustment-2"
      "gdouble"
      "Wavelength"
    )
    (
      "adjustment-3"
      "gdouble"
      "Number of frames"
    )
    (
      "toggle"
      "gboolean"
      "Invert direction (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "gimp-drawable-is-gray"
  "Returns whether the drawable is a grayscale type."
  "This procedure returns TRUE if the specified drawable is of type @{ Gray, GrayA @}."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "drawable"
      "GimpDrawable"
      "The drawable"
    )
  )
  (
    (
      "is-gray"
      "gboolean"
      "TRUE if the drawable is a grayscale type (TRUE or FALSE)"
    )
  )
)
(register-procedure "gimp-text-get-extents-fontname"
  "Get extents of the bounding box for the specified text."
  "This tool returns the width and height of a bounding box for the specified text string with the specified font information. Ascent and descent for the specified font are returned as well. Parameter size-type is not used and is currently ignored. If you need to display a font in points, divide the size in points by 72.0 and multiply it by the vertical resolution of the image you are taking into account."
  "Martin Edlman & Sven Neumann"
  "Spencer Kimball & Peter Mattis"
  "1998- 2001"
  "Internal GIMP procedure"
  (
    (
      "text"
      "gchararray"
      "The text to generate (in UTF-8 encoding)"
    )
    (
      "size"
      "gdouble"
      "The size of text in either pixels or points (size >= 0)"
    )
    (
      "size-type"
      "GimpSizeType"
      "The units of specified size @{ PIXELS (0), POINTS (1) @}"
    )
    (
      "fontname"
      "gchararray"
      "The name of the font"
    )
  )
  (
    (
      "width"
      "gint"
      "The width of the specified font"
    )
    (
      "height"
      "gint"
      "The height of the specified font"
    )
    (
      "ascent"
      "gint"
      "The ascent of the specified font"
    )
    (
      "descent"
      "gint"
      "The descent of the specified font"
    )
  )
)
(register-procedure "plug-in-photocopy"
  "Simulate color distortion produced by a copy machine"
  "Propagates dark values in an image based on each pixel's relative darkness to a neighboring average. The idea behind this filter is to give the look of a photocopied version of the image, with toner transferred based on the relative darkness of a particular region. This is achieved by darkening areas of the image which are measured to be darker than a neighborhood average and setting other pixels to white. In this way, sufficiently large shifts in intensity are darkened to black. The rate at which they are darkened to black is determined by the second pct_black parameter. The mask_radius parameter controls the size of the pixel neighborhood over which the average intensity is computed and then compared to each pixel in the neighborhood to decide whether or not to darken it to black. Large values for mask_radius result in very thick black areas bordering the regions of white and much less detail for black areas everywhere including inside regions of color. Small values result in
less toner overall and more detail everywhere. Small values for the pct_black make the blend from the white regions to the black border lines smoother and the toner regions themselves thinner and less noticeable; larger values achieve the opposite effect."
  "Compatibility procedure. Please see 'gegl:photocopy' for credits."
  "Compatibility procedure. Please see 'gegl:photocopy' for credits."
  "2019"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
    (
      "mask-radius"
      "gdouble"
      "Photocopy mask radius (radius of pixel neighborhood) (3 <= mask-radius <= 50)"
    )
    (
      "sharpness"
      "gdouble"
      "Sharpness (detail level) (0 <= sharpness <= 1)"
    )
    (
      "pct-black"
      "gdouble"
      "Percentage of darkened pixels to set to black (0 <= pct-black <= 1)"
    )
    (
      "pct-white"
      "gdouble"
      "Percentage of non-darkened pixels left white (0 <= pct-white <= 1)"
    )
  )
  (
  )
)
(register-procedure "gimp-drawable-get-thumbnail-format"
  "Returns the drawable's thumbnail Babl format"
  "This procedure returns the drawable's thumbnail Babl format.
Thumbnails are always 8-bit images, see 'gimp-drawable-thumbnail' and 'gimp-drawable-sub-thmbnail'."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2019"
  "Internal GIMP procedure"
  (
    (
      "drawable"
      "GimpDrawable"
      "The drawable"
    )
  )
  (
    (
      "format"
      "gchararray"
      "The drawable's thumbnail Babl format"
    )
  )
)
(register-procedure "gimp-vectors-import-from-string"
  "Import paths from an SVG string."
  "This procedure works like 'gimp-vectors-import-from-file' but takes a string rather than reading the SVG from a file. This allows you to write scripts that generate SVG and feed it to GIMP."
  "Simon Budig"
  "Simon Budig"
  "2006"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "string"
      "gchararray"
      "A string that must be a complete and valid SVG document."
    )
    (
      "length"
      "gint"
      "Number of bytes in string or -1 if the string is NULL terminated."
    )
    (
      "merge"
      "gboolean"
      "Merge paths into a single vectors object. (TRUE or FALSE)"
    )
    (
      "scale"
      "gboolean"
      "Scale the SVG to image dimensions. (TRUE or FALSE)"
    )
  )
  (
    (
      "num-vectors"
      "gint"
      "The number of newly created vectors (num-vectors >= 0)"
    )
    (
      "vectors"
      "GimpObjectArray"
      "The list of newly created vectors"
    )
  )
)
(register-procedure "gimp-unit-new"
  "Creates a new unit and returns it's integer ID."
  "This procedure creates a new unit and returns it's integer ID. Note that the new unit will have it's deletion flag set to TRUE, so you will have to set it to FALSE with 'gimp-unit-set-deletion-flag' to make it persistent."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "1999"
  "Internal GIMP procedure"
  (
    (
      "identifier"
      "gchararray"
      "The new unit's identifier"
    )
    (
      "factor"
      "gdouble"
      "The new unit's factor"
    )
    (
      "digits"
      "gint"
      "The new unit's digits"
    )
    (
      "symbol"
      "gchararray"
      "The new unit's symbol"
    )
    (
      "abbreviation"
      "gchararray"
      "The new unit's abbreviation"
    )
    (
      "singular"
      "gchararray"
      "The new unit's singular form"
    )
    (
      "plural"
      "gchararray"
      "The new unit's plural form"
    )
  )
  (
    (
      "unit-id"
      "GimpUnit"
      "The new unit's ID"
    )
  )
)
(register-procedure "gimp-context-set-gradient-repeat-mode"
  "Set the gradient repeat mode."
  "Set the gradient repeat mode for paint tools and the gradient tool."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2018"
  "Internal GIMP procedure"
  (
    (
      "repeat-mode"
      "GimpRepeatMode"
      "Repeat mode @{ REPEAT-NONE (0), REPEAT-SAWTOOTH (1), REPEAT-TRIANGULAR (2), REPEAT-TRUNCATE (3) @}"
    )
  )
  (
  )
)
(register-procedure "gimp-palettes-get-list"
  "Retrieves a list of all of the available palettes"
  "This procedure returns a complete listing of available palettes. Each name returned can be used as input to the command 'gimp-context-set-palette'."
  "Nathan Summers <rock@@gimp.org>"
  "Nathan Summers"
  "2001"
  "Internal GIMP procedure"
  (
    (
      "filter"
      "gchararray"
      "An optional regular expression used to filter the list"
    )
  )
  (
    (
      "palette-list"
      "GStrv"
      "The list of palette names"
    )
  )
)
(register-procedure "file-ico-save"
  "Saves files in Windows ICO file format"
  "Saves files in Windows ICO file format"
  "Christian Kreibich <christian@@whoop.org>"
  "Christian Kreibich <christian@@whoop.org>"
  "2002"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The image to save"
    )
    (
      "num-drawables"
      "gint"
      "Number of drawables to be saved (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The drawables to save"
    )
    (
      "file"
      "GFile"
      "The file to save to"
    )
  )
  (
  )
)
(register-procedure "plug-in-gradmap"
  "Recolor the image using colors from the active gradient"
  "This plug-in maps the contents of the specified drawable with active gradient. It calculates luminosity of each pixel and replaces the pixel by the sample of active gradient at the position proportional to that luminosity. Complete black pixel becomes the leftmost color of the gradient, and complete white becomes the rightmost. Works on both Grayscale and RGB image with/without alpha channel."
  "Eiichi Takamori"
  "Eiichi Takamori"
  "1997"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The input image"
    )
    (
      "num-drawables"
      "gint"
      "Number of input drawables (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The input drawables"
    )
  )
  (
  )
)
(register-procedure "file-tga-load"
  "Loads files of Targa file format"
  "FIXME: write help for tga_load"
  "Raphael FRANCOIS, Gordon Matzigkeit"
  "Raphael FRANCOIS, Gordon Matzigkeit"
  "1997,2000,2007"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "file"
      "GFile"
      "The file to load"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "Output image"
    )
  )
)
(register-procedure "gimp-gimprc-set"
  "Sets a gimprc token to a value and saves it in the gimprc."
  "This procedure is used to add or change additional information in the gimprc file that is considered extraneous to the operation of GIMP. Plug-ins that need configuration information can use this function to store it, and 'gimp-gimprc-query' to retrieve it. This will accept _only_ string values in UTF-8 encoding."
  "Seth Burgess"
  "Seth Burgess"
  "1999"
  "Internal GIMP procedure"
  (
    (
      "token"
      "gchararray"
      "The token to add or modify"
    )
    (
      "value"
      "gchararray"
      "The value to set the token to"
    )
  )
  (
  )
)
(register-procedure "gimp-pdb-set-batch-interpreter"
  "Registers a batch interpreter procedure."
  "Registers a procedural database procedure to be called with the command line interface options --batch-interpreter and --batch."
  "Jehan"
  "Jehan"
  "2022"
  "Internal GIMP procedure"
  (
    (
      "procedure-name"
      "gchararray"
      "The name of the procedure to be used for running batch commands"
    )
    (
      "interpreter-name"
      "gchararray"
      "A public-facing name for the interpreter, such as \"Python 3\"."
    )
  )
  (
  )
)
(register-procedure "script-fu-selection-to-brush"
  "Convert a selection to a brush"
  ""
  "Adrian Likins <adrian@@gimp.org>"
  "Adrian Likins"
  "10/07/97"
  "Temporary Procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Image"
    )
    (
      "drawable"
      "GimpDrawable"
      "Drawable"
    )
    (
      "string"
      "gchararray"
      "_Brush name"
    )
    (
      "string-2"
      "gchararray"
      "_File name"
    )
    (
      "adjustment"
      "gdouble"
      "_Spacing"
    )
  )
  (
  )
)
(register-procedure "gimp-layer-get-mask"
  "Get the specified layer's mask if it exists."
  "This procedure returns the specified layer's mask, or -1 if none exists."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "layer"
      "GimpLayer"
      "The layer"
    )
  )
  (
    (
      "mask"
      "GimpLayerMask"
      "The layer mask"
    )
  )
)
(register-procedure "gimp-brush-set-hardness"
  "Sets the hardness of a generated brush."
  "This procedure sets the hardness for a generated brush. If called for any other type of brush, it does not succeed. The value should be a float between 0.0 and 1.0."
  "Bill Skaggs <weskaggs@@primate.ucdavis.edu>"
  "Bill Skaggs"
  "2004"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The brush name"
    )
    (
      "hardness-in"
      "gdouble"
      "The desired brush hardness"
    )
  )
  (
    (
      "hardness-out"
      "gdouble"
      "The brush hardness actually assigned"
    )
  )
)
(register-procedure "gimp-patterns-refresh"
  "Refresh current patterns. This function always succeeds."
  "This procedure retrieves all patterns currently in the user's pattern path and updates all pattern dialogs accordingly."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2002"
  "Internal GIMP procedure"
  (
  )
  (
  )
)
(register-procedure "gimp-unit-get-plural"
  "Returns the plural form of the unit."
  "This procedure returns the plural form of the unit."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "1999"
  "Internal GIMP procedure"
  (
    (
      "unit-id"
      "GimpUnit"
      "The unit's integer ID"
    )
  )
  (
    (
      "plural"
      "gchararray"
      "The unit's plural form"
    )
  )
)
(register-procedure "gimp-context-set-ink-blob-type"
  "Set ink blob type."
  "Set the ink blob type for ink tool."
  "Ed Swartz"
  "Ed Swartz"
  "2012"
  "Internal GIMP procedure"
  (
    (
      "type"
      "GimpInkBlobType"
      "Ink blob type @{ INK-BLOB-TYPE-CIRCLE (0), INK-BLOB-TYPE-SQUARE (1), INK-BLOB-TYPE-DIAMOND (2) @}"
    )
  )
  (
  )
)
(register-procedure "gimp-image-set-resolution"
  "Sets the specified image's resolution."
  "This procedure sets the specified image's resolution in dots per inch. This value is independent of any of the layers in this image. No scaling or resizing is performed."
  "Austin Donnelly"
  "Austin Donnelly"
  "1998"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "xresolution"
      "gdouble"
      "The new image resolution in the x-axis, in dots per inch"
    )
    (
      "yresolution"
      "gdouble"
      "The new image resolution in the y-axis, in dots per inch"
    )
  )
  (
  )
)
(register-procedure "gimp-context-set-font"
  "Set the specified font as the active font."
  "This procedure allows the active font to be set by specifying its name. The name is simply a string which corresponds to one of the names of the installed fonts. If no matching font is found, this procedure will return an error. Otherwise, the specified font becomes active and will be used in all subsequent font operations."
  "Michael Natterer <mitch@@gimp.org> & Sven Neumann <sven@@gimp.org>"
  "Michael Natterer & Sven Neumann"
  "2004"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The name of the font"
    )
  )
  (
  )
)
(register-procedure "gimp-image-remove-channel"
  "Remove the specified channel from the image."
  "This procedure removes the specified channel from the image. If the channel doesn't exist, an error is returned."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "channel"
      "GimpChannel"
      "The channel"
    )
  )
  (
  )
)
(register-procedure "plug-in-newsprint"
  "Halftone the image to give newspaper-like effect"
  "Halftone the image to give newspaper-like effect"
  "Compatibility procedure. Please see 'gegl:newsprint' for credits."
  "Compatibility procedure. Please see 'gegl:newsprint' for credits."
  "2019"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
    (
      "cell-width"
      "gint"
      "Screen cell width in pixels (0 <= cell-width <= 1500)"
    )
    (
      "colorspace"
      "gint"
      "Separate to @{ GRAYSCALE (0), RGB (1), CMYK (2), LUMINANCE (3) @} (0 <= colorspace <= 3)"
    )
    (
      "k-pullout"
      "gint"
      "Percentage of black to pullout (CMYK only) (0 <= k-pullout <= 100)"
    )
    (
      "gry-ang"
      "gdouble"
      "Grey/black screen angle (degrees) (0 <= gry-ang <= 360)"
    )
    (
      "gry-spotfn"
      "gint"
      "Grey/black spot function @{ DOTS (0), LINES (1), DIAMONDS (2), EUCLIDIAN-DOT (3), PS-DIAMONDS (4) @} (0 <= gry-spotfn <= 4)"
    )
    (
      "red-ang"
      "gdouble"
      "Red/cyan screen angle (degrees) (0 <= red-ang <= 360)"
    )
    (
      "red-spotfn"
      "gint"
      "Red/cyan spot function @{ DOTS (0), LINES (1), DIAMONDS (2), EUCLIDIAN-DOT (3), PS-DIAMONDS (4) @} (0 <= red-spotfn <= 4)"
    )
    (
      "grn-ang"
      "gdouble"
      "Green/magenta screen angle (degrees) (0 <= grn-ang <= 360)"
    )
    (
      "grn-spotfn"
      "gint"
      "Green/magenta spot function @{ DOTS (0), LINES (1), DIAMONDS (2), EUCLIDIAN-DOT (3), PS-DIAMONDS (4) @} (0 <= grn-spotfn <= 4)"
    )
    (
      "blu-ang"
      "gdouble"
      "Blue/yellow screen angle (degrees) (0 <= blu-ang <= 360)"
    )
    (
      "blu-spotfn"
      "gint"
      "Blue/yellow spot function @{ DOTS (0), LINES (1), DIAMONDS (2), EUCLIDIAN-DOT (3), PS-DIAMONDS (4) @} (0 <= blu-spotfn <= 4)"
    )
    (
      "oversample"
      "gint"
      "how many times to oversample spot fn (0 <= oversample <= 128)"
    )
  )
  (
  )
)
(register-procedure "file-gih-save"
  "exports images in GIMP brush pipe format"
  "This plug-in exports an image in the GIMP brush pipe format. For a colored brush pipe, RGBA layers are used, otherwise the layers should be grayscale masks. The image can be multi-layered, and additionally the layers can be divided into a rectangular array of brushes."
  "Tor Lillqvist"
  "Tor Lillqvist"
  "1999"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The image to save"
    )
    (
      "num-drawables"
      "gint"
      "Number of drawables to be saved (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The drawables to save"
    )
    (
      "file"
      "GFile"
      "The file to save to"
    )
    (
      "spacing"
      "gint"
      "Spacing of the brush (1 <= spacing <= 1000)"
    )
    (
      "description"
      "gchararray"
      "Short description of the gihtern"
    )
    (
      "cell-width"
      "gint"
      "Width of the brush cells (1 <= cell-width <= 1000)"
    )
    (
      "cell-height"
      "gint"
      "Height of the brush cells (1 <= cell-height <= 1000)"
    )
    (
      "display-cols"
      "gint"
      "Display column number (1 <= display-cols <= 1000)"
    )
    (
      "display-rows"
      "gint"
      "Display row number (1 <= display-rows <= 1000)"
    )
    (
      "dimension"
      "gint"
      "Dimension of the brush pipe (1 <= dimension <= 4)"
    )
    (
      "rank"
      "GimpUint8Array"
      "Ranks of the dimensions"
    )
    (
      "dimension-2"
      "gint"
      "Dimension of the brush pipe (same as dimension) (1 <= dimension-2 <= 4)"
    )
    (
      "sel"
      "GStrv"
      "Selection modes"
    )
  )
  (
  )
)
(register-procedure "gimp-context-set-sample-merged"
  "Set the sample merged setting."
  "This procedure modifies the sample merged setting. If an operation depends on the colors of the pixels present in a drawable, like when doing a seed fill, this setting controls whether the pixel data from the specified drawable is used ('sample-merged' is FALSE), or the pixel data from the composite image ('sample-merged' is TRUE. This is equivalent to sampling for colors after merging all visible layers).

This setting affects the following procedures: 'gimp-image-select-color', 'gimp-image-select-contiguous-color', 'gimp-drawable-edit-bucket-fill'."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2011"
  "Internal GIMP procedure"
  (
    (
      "sample-merged"
      "gboolean"
      "The sample merged setting (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "file-ppm-save"
  "Exports files in the PPM file format"
  "PPM export handles RGB images without transparency."
  "Erik Nygren"
  "Erik Nygren"
  "1996"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The image to save"
    )
    (
      "num-drawables"
      "gint"
      "Number of drawables to be saved (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The drawables to save"
    )
    (
      "file"
      "GFile"
      "The file to save to"
    )
    (
      "raw"
      "gboolean"
      "TRUE for raw output, FALSE for ascii output (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "gimp-item-transform-rotate"
  "Rotate the specified item about given coordinates through the specified angle."
  "This function rotates the specified item.

If a selection exists and the item is a drawable, the portion of the drawable which lies under the selection is cut from the drawable and made into a floating selection which is then rotated by the specified amount. If auto_center is set to TRUE, the rotation is around the selection's center. Otherwise, the coordinate of the center point needs to be specified. The return value is the ID of the rotated floating selection.

If there is no selection or the item is not a drawable, the entire item will be rotated around its center if auto_center is set to TRUE, otherwise the coordinate of the center point needs to be specified.
The return value will be equal to the item ID supplied as input.

This procedure is affected by the following context setters: 'gimp-context-set-interpolation', 'gimp-context-set-transform-direction', 'gimp-context-set-transform-resize'."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2010"
  "Internal GIMP procedure"
  (
    (
      "item"
      "GimpItem"
      "The affected item"
    )
    (
      "angle"
      "gdouble"
      "The angle of rotation (radians)"
    )
    (
      "auto-center"
      "gboolean"
      "Whether to automatically rotate around the selection center (TRUE or FALSE)"
    )
    (
      "center-x"
      "gdouble"
      "The hor. coordinate of the center of rotation"
    )
    (
      "center-y"
      "gdouble"
      "The vert. coordinate of the center of rotation"
    )
  )
  (
    (
      "item"
      "GimpItem"
      "The rotated item"
    )
  )
)
(register-procedure "gimp-image-attach-parasite"
  "Add a parasite to an image."
  "This procedure attaches a parasite to an image. It has no return values."
  "Jay Cox"
  "Jay Cox"
  "1998"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "parasite"
      "GimpParasite"
      "The parasite to attach to an image"
    )
  )
  (
  )
)
(register-procedure "plug-in-median-blur"
  "Blur using the median color near each pixel"
  "Blur resulting from computing the median color in the neighborhood of each pixel"
  "Compatibility procedure. Please see 'gegl:median-blur' for credits."
  "Compatibility procedure. Please see 'gegl:median-blur' for credits."
  "2021"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
    (
      "radius"
      "gint"
      "Neighborhood radius, a negative value will calculate with inverted percentiles (-400 <= radius <= 400)"
    )
    (
      "percentile"
      "gdouble"
      "Neighborhood color percentile (0 <= percentile <= 100)"
    )
  )
  (
  )
)
(register-procedure "plug-in-wavelet-decompose"
  "Wavelet decompose"
  "Compute and render wavelet scales"
  "Miroslav Talasek <miroslav.talasek@@seznam.cz>"
  "Miroslav Talasek <miroslav.talasek@@seznam.cz>"
  "19january 2017"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The input image"
    )
    (
      "num-drawables"
      "gint"
      "Number of input drawables (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The input drawables"
    )
    (
      "scales"
      "gint"
      "Number of scales (1 <= scales <= 7)"
    )
    (
      "create-group"
      "gboolean"
      "Create a layer group to store the decomposition (TRUE or FALSE)"
    )
    (
      "create-masks"
      "gboolean"
      "Add a layer mask to each scales layer (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "gimp-selection-save"
  "Copy the selection mask to a new channel."
  "This procedure copies the selection mask and stores the content in a new channel. The new channel is automatically inserted into the image's list of channels."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
  )
  (
    (
      "channel"
      "GimpChannel"
      "The new channel"
    )
  )
)
(register-procedure "gimp-gimprc-query"
  "Queries the gimprc file parser for information on a specified token."
  "This procedure is used to locate additional information contained in the gimprc file considered extraneous to the operation of GIMP. Plug-ins that need configuration information can expect it will be stored in the user gimprc file and can use this procedure to retrieve it. This query procedure will return the value associated with the specified token. This corresponds _only_ to entries with the format: (<token> <value>). The value must be a string. Entries not corresponding to this format will cause warnings to be issued on gimprc parsing and will not be queryable."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1997"
  "Internal GIMP procedure"
  (
    (
      "token"
      "gchararray"
      "The token to query for"
    )
  )
  (
    (
      "value"
      "gchararray"
      "The value associated with the queried token"
    )
  )
)
(register-procedure "plug-in-jigsaw"
  "Add a jigsaw-puzzle pattern to the image"
  "Jigsaw puzzle look"
  "Nigel Wetten"
  "Nigel Wetten"
  "May 2000"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The input image"
    )
    (
      "num-drawables"
      "gint"
      "Number of input drawables (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The input drawables"
    )
    (
      "x"
      "gint"
      "Number of tiles across (1 <= x <= 524288)"
    )
    (
      "y"
      "gint"
      "Number of tiles down (1 <= y <= 524288)"
    )
    (
      "style"
      "gint"
      "The style/shape of the jigsaw puzzle @{ 0, 1 @} (0 <= style <= 1)"
    )
    (
      "blend-lines"
      "gint"
      "Number of lines for shading bevels (1 <= blend-lines <= 524288)"
    )
    (
      "blend-amount"
      "gdouble"
      "The power of the light highlights (0 <= blend-amount <= 5)"
    )
  )
  (
  )
)
(register-procedure "extension-script-fu"
  "A scheme interpreter for scripting GIMP operations"
  "More help here later"
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1997"
  "GIMP Extension"
  (
  )
  (
  )
)
(register-procedure "gimp-brush-get-info"
  "Retrieves information about the specified brush."
  "This procedure retrieves information about the specified brush: brush extents (width and height), color depth and mask depth."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2004"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The brush name"
    )
  )
  (
    (
      "width"
      "gint"
      "The brush width"
    )
    (
      "height"
      "gint"
      "The brush height"
    )
    (
      "mask-bpp"
      "gint"
      "The brush mask bpp"
    )
    (
      "color-bpp"
      "gint"
      "The brush color bpp"
    )
  )
)
(register-procedure "gimp-context-set-line-width"
  "Set the line width setting."
  "This procedure modifies the line width setting for stroking lines.

This setting affects the following procedures: 'gimp-drawable-edit-stroke-selection', 'gimp-drawable-edit-stroke-item'."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2015"
  "Internal GIMP procedure"
  (
    (
      "line-width"
      "gdouble"
      "The line width setting (0 <= line-width <= 2000)"
    )
  )
  (
  )
)
(register-procedure "plug-in-whirl-pinch"
  "Distort an image by whirling and pinching"
  "Distorts the image by whirling and pinching, which are two common center-based, circular distortions. Whirling is like projecting the image onto the surface of water in a toilet and flushing. Pinching is similar to projecting the image onto an elastic surface and pressing or pulling on the center of the surface."
  "Compatibility procedure. Please see 'gegl:whirl-pinch' for credits."
  "Compatibility procedure. Please see 'gegl:whirl-pinch' for credits."
  "2013"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
    (
      "whirl"
      "gdouble"
      "Whirl angle (degrees) (-720 <= whirl <= 720)"
    )
    (
      "pinch"
      "gdouble"
      "Pinch amount (-1 <= pinch <= 1)"
    )
    (
      "radius"
      "gdouble"
      "Radius (1.0 is the largest circle that fits in the image, and 2.0 goes all the way to the corners) (0 <= radius <= 2)"
    )
  )
  (
  )
)
(register-procedure "plug-in-semiflatten"
  "Replace partial transparency with the current background color"
  "This plug-in flattens pixels in an RGBA image that aren't completely transparent against the current GIMP background color."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1997"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
  )
  (
  )
)
(register-procedure "gimp-pdb-get-proc-info"
  "Queries the procedural database for information on the specified procedure."
  "This procedure returns information on the specified procedure. The procedure type, number of input, and number of return values are returned. For specific information on each input argument and return value, use the 'gimp-pdb-db-proc-argument' and 'gimp-pdb-db-proc-return-value' procedures."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1997"
  "Internal GIMP procedure"
  (
    (
      "procedure-name"
      "gchararray"
      "The procedure name"
    )
  )
  (
    (
      "proc-type"
      "GimpPDBProcType"
      "The procedure type @{ PDB-PROC-TYPE-INTERNAL (0), PDB-PROC-TYPE-PLUGIN (1), PDB-PROC-TYPE-EXTENSION (2), PDB-PROC-TYPE-TEMPORARY (3) @}"
    )
    (
      "num-args"
      "gint"
      "The number of input arguments"
    )
    (
      "num-values"
      "gint"
      "The number of return values"
    )
  )
)
(register-procedure "gimp-layer-set-composite-mode"
  "Set the composite mode of the specified layer."
  "This procedure sets the specified layer's composite mode."
  "Ell"
  "Ell"
  "2017"
  "Internal GIMP procedure"
  (
    (
      "layer"
      "GimpLayer"
      "The layer"
    )
    (
      "composite-mode"
      "GimpLayerCompositeMode"
      "The new layer composite mode @{ LAYER-COMPOSITE-AUTO (0), LAYER-COMPOSITE-UNION (1), LAYER-COMPOSITE-CLIP-TO-BACKDROP (2), LAYER-COMPOSITE-CLIP-TO-LAYER (3), LAYER-COMPOSITE-INTERSECTION (4) @}"
    )
  )
  (
  )
)
(register-procedure "gimp-context-get-paint-method"
  "Retrieve the currently active paint method."
  "This procedure returns the name of the currently active paint method."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2005"
  "Internal GIMP procedure"
  (
  )
  (
    (
      "name"
      "gchararray"
      "The name of the active paint method"
    )
  )
)
(register-procedure "gimp-brush-get-hardness"
  "Gets the hardness of a generated brush."
  "This procedure gets the hardness of a generated brush. The hardness of a brush is the amount its intensity fades at the outside edge, as a float between 0.0 and 1.0. If called for any other type of brush, the function does not succeed."
  "Bill Skaggs <weskaggs@@primate.ucdavis.edu>"
  "Bill Skaggs"
  "2004"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The brush name"
    )
  )
  (
    (
      "hardness"
      "gdouble"
      "The hardness of the brush."
    )
  )
)
(register-procedure "gimp-image-grid-set-offset"
  "Sets the offset of an image's grid."
  "This procedure sets the horizontal and vertical offset of an image's grid."
  "Sylvain Foret"
  "Sylvain Foret"
  "2005"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "xoffset"
      "gdouble"
      "The image's grid horizontal offset"
    )
    (
      "yoffset"
      "gdouble"
      "The image's grid vertical offset"
    )
  )
  (
  )
)
(register-procedure "script-fu-burn-in-anim"
  "Create intermediate layers to produce an animated 'burn-in' transition between two layers"
  ""
  "Roland Berger roland@@fuchur.leute.server.de"
  "Roland Berger"
  "January 2001"
  "Temporary Procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "drawable"
      "GimpDrawable"
      "Layer to animate"
    )
    (
      "color"
      "GimpRGB"
      "Glow color"
    )
    (
      "toggle"
      "gboolean"
      "Fadeout (TRUE or FALSE)"
    )
    (
      "value"
      "gchararray"
      "Fadeout width"
    )
    (
      "value-2"
      "gchararray"
      "Corona width"
    )
    (
      "value-3"
      "gchararray"
      "After glow"
    )
    (
      "toggle-2"
      "gboolean"
      "Add glowing (TRUE or FALSE)"
    )
    (
      "toggle-3"
      "gboolean"
      "Prepare for GIF (TRUE or FALSE)"
    )
    (
      "value-4"
      "gchararray"
      "Speed (pixels/frame)"
    )
  )
  (
  )
)
(register-procedure "plug-in-flame"
  "Create cosmic recursive fractal flames"
  "Create cosmic recursive fractal flames"
  "Scott Draves"
  "Scott Draves"
  "1997"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The input image"
    )
    (
      "num-drawables"
      "gint"
      "Number of input drawables (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The input drawables"
    )
  )
  (
  )
)
(register-procedure "gimp-help-concepts-paths"
  "Bookmark to the user manual"
  ""
  "Roman Joost <romanofski@@gimp.org>"
  "Roman Joost <romanofski@@gimp.org>"
  "2006"
  "Temporary Procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
  )
  (
  )
)
(register-procedure "gimp-layer-is-floating-sel"
  "Is the specified layer a floating selection?"
  "This procedure returns whether the layer is a floating selection. Floating selections are special cases of layers which are attached to a specific drawable."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "layer"
      "GimpLayer"
      "The layer"
    )
  )
  (
    (
      "is-floating-sel"
      "gboolean"
      "TRUE if the layer is a floating selection (TRUE or FALSE)"
    )
  )
)
(register-procedure "python-fu-foggify"
  "Add a layer of fog"
  "Adds a layer of fog to the image."
  "James Henstridge"
  "James Henstridge"
  "1999,2007"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The input image"
    )
    (
      "num-drawables"
      "gint"
      "Number of input drawables (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The input drawables"
    )
    (
      "name"
      "gchararray"
      "Layer name"
    )
    (
      "color"
      "GimpRGB"
      "Fog color"
    )
    (
      "turbulence"
      "gdouble"
      "Turbulence (0 <= turbulence <= 7)"
    )
    (
      "opacity"
      "gdouble"
      "Opacity (0 <= opacity <= 100)"
    )
  )
  (
  )
)
(register-procedure "gimp-image-get-effective-color-profile"
  "Returns the color profile that is used for the image"
  "This procedure returns the color profile that is actually used for this image, which is the profile returned by 'gimp-image-get-color-profile' if the image has a profile assigned, or a generated default RGB or grayscale profile, according to the image's type."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2015"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
  )
  (
    (
      "num-bytes"
      "gint"
      "Number of bytes in the color_profile array (num-bytes >= 0)"
    )
    (
      "profile-data"
      "GimpUint8Array"
      "The image's serialized color profile."
    )
  )
)
(register-procedure "gimp-brush-set-shape"
  "Sets the shape of a generated brush."
  "This procedure sets the shape value for a generated brush. If called for any other type of brush, it does not succeed. The current possibilities are Circle (GIMP_BRUSH_GENERATED_CIRCLE), Square (GIMP_BRUSH_GENERATED_SQUARE), and Diamond (GIMP_BRUSH_GENERATED_DIAMOND). Other shapes are likely to be added in the future."
  "Bill Skaggs <weskaggs@@primate.ucdavis.edu>"
  "Bill Skaggs"
  "2004"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The brush name"
    )
    (
      "shape-in"
      "GimpBrushGeneratedShape"
      "The brush shape @{ BRUSH-GENERATED-CIRCLE (0), BRUSH-GENERATED-SQUARE (1), BRUSH-GENERATED-DIAMOND (2) @}"
    )
  )
  (
    (
      "shape-out"
      "GimpBrushGeneratedShape"
      "The brush shape actually assigned @{ BRUSH-GENERATED-CIRCLE (0), BRUSH-GENERATED-SQUARE (1), BRUSH-GENERATED-DIAMOND (2) @}"
    )
  )
)
(register-procedure "file-raw-placeholder-rdc-load"
  "Load files in the RDC raw format via placeholder"
  "This plug-in loads files in Digital Foto Maker's raw RDC format by calling placeholder."
  "Tobias Ellinghaus"
  "Tobias Ellinghaus"
  "2016"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "file"
      "GFile"
      "The file to load"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "Output image"
    )
  )
)
(register-procedure "gimp-image-undo-group-start"
  "Starts a group undo."
  "This function is used to start a group undo--necessary for logically combining two or more undo operations into a single operation. This call must be used in conjunction with a 'gimp-image-undo-group-end' call."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1997"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The ID of the image in which to open an undo group"
    )
  )
  (
  )
)
(register-procedure "script-fu-guides-from-selection"
  "Create four guides around the bounding box of the current selection"
  ""
  "Alan Horkan"
  "Alan Horkan, 2004.  Public Domain."
  "2004-08-13"
  "Temporary Procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Image"
    )
    (
      "drawable"
      "GimpDrawable"
      "Drawable"
    )
  )
  (
  )
)
(register-procedure "gimp-pdb-add-proc-menu-path"
  "Register an additional menu path for a plug-in procedure."
  "This procedure installs an additional menu entry for the given procedure."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2019"
  "Internal GIMP procedure"
  (
    (
      "procedure-name"
      "gchararray"
      "The procedure for which to install the menu path"
    )
    (
      "menu-path"
      "gchararray"
      "The procedure's additional menu path"
    )
  )
  (
  )
)
(register-procedure "gimp-progress-install"
  "Installs a progress callback for the current plug-in."
  "This function installs a temporary PDB procedure which will handle all progress calls made by this plug-in and any procedure it calls. Calling this function multiple times simply replaces the old progress callbacks."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2004"
  "Internal GIMP procedure"
  (
    (
      "progress-callback"
      "gchararray"
      "The callback PDB proc to call"
    )
  )
  (
  )
)
(register-procedure "gimp-drawable-has-alpha"
  "Returns TRUE if the drawable has an alpha channel."
  "This procedure returns whether the specified drawable has an alpha channel. This can only be true for layers, and the associated type will be one of: @{ RGBA , GRAYA, INDEXEDA @}."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "drawable"
      "GimpDrawable"
      "The drawable"
    )
  )
  (
    (
      "has-alpha"
      "gboolean"
      "Does the drawable have an alpha channel? (TRUE or FALSE)"
    )
  )
)
(register-procedure "gimp-image-merge-visible-layers"
  "Merge the visible image layers into one."
  "This procedure combines the visible layers into a single layer using the specified merge type. A merge type of EXPAND_AS_NECESSARY expands the final layer to encompass the areas of the visible layers. A merge type of CLIP_TO_IMAGE clips the final layer to the extents of the image. A merge type of CLIP_TO_BOTTOM_LAYER clips the final layer to the size of the bottommost layer."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "merge-type"
      "GimpMergeType"
      "The type of merge @{ EXPAND-AS-NECESSARY (0), CLIP-TO-IMAGE (1), CLIP-TO-BOTTOM-LAYER (2) @}"
    )
  )
  (
    (
      "layer"
      "GimpLayer"
      "The resulting layer"
    )
  )
)
(register-procedure "gimp-item-set-lock-position"
  "Set the 'lock position' state of the specified item."
  "This procedure sets the specified item's lock position state."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2009"
  "Internal GIMP procedure"
  (
    (
      "item"
      "GimpItem"
      "The item"
    )
    (
      "lock-position"
      "gboolean"
      "The new item 'lock position' state (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "gimp-unit-get-symbol"
  "Returns the symbol of the unit."
  "This procedure returns the symbol of the unit (\"''\" for inches)."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "1999"
  "Internal GIMP procedure"
  (
    (
      "unit-id"
      "GimpUnit"
      "The unit's integer ID"
    )
  )
  (
    (
      "symbol"
      "gchararray"
      "The unit's symbol"
    )
  )
)
(register-procedure "gimp-drawable-is-rgb"
  "Returns whether the drawable is an RGB type."
  "This procedure returns TRUE if the specified drawable is of type @{ RGB, RGBA @}."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "drawable"
      "GimpDrawable"
      "The drawable"
    )
  )
  (
    (
      "is-rgb"
      "gboolean"
      "TRUE if the drawable is an RGB type (TRUE or FALSE)"
    )
  )
)
(register-procedure "script-fu-erase-rows"
  "Erase every other row or column"
  ""
  "Federico Mena Quintero"
  "Federico Mena Quintero"
  "June 1997"
  "Temporary Procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Image"
    )
    (
      "drawable"
      "GimpDrawable"
      "Drawable"
    )
    (
      "option"
      "gint"
      "Rows/cols"
    )
    (
      "option-2"
      "gint"
      "Even/odd"
    )
    (
      "option-3"
      "gint"
      "Erase/fill"
    )
  )
  (
  )
)
(register-procedure "plug-in-vpropagate"
  "Propagate certain colors to neighboring pixels"
  "Propagate values of the layer."
  "Compatibility procedure. Please see 'gegl:value-propagate' for credits."
  "Compatibility procedure. Please see 'gegl:value-propagate' for credits."
  "2015"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
    (
      "propagate-mode"
      "gint"
      "Propagate mode @{ 0:white, 1:black, 2:middle value 3:foreground to peak, 4:foreground, 5:background, 6:opaque, 7:transparent @} (0 <= propagate-mode <= 7)"
    )
    (
      "propagating-channel"
      "gint"
      "Channels which values are propagated"
    )
    (
      "propagating-rate"
      "gdouble"
      "Propagating rate (0 <= propagating-rate <= 1)"
    )
    (
      "direction-mask"
      "gint"
      "Direction mask (0 <= direction-mask <= 15)"
    )
    (
      "lower-limit"
      "gint"
      "Lower limit (0 <= lower-limit <= 255)"
    )
    (
      "upper-limit"
      "gint"
      "Upper limit (0 <= upper-limit <= 255)"
    )
  )
  (
  )
)
(register-procedure "gimp-image-grid-set-style"
  "Sets the style unit of an image's grid."
  "This procedure sets the style of an image's grid. It takes the image and the new style as parameters."
  "Sylvain Foret"
  "Sylvain Foret"
  "2005"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "style"
      "GimpGridStyle"
      "The image's grid style @{ GRID-DOTS (0), GRID-INTERSECTIONS (1), GRID-ON-OFF-DASH (2), GRID-DOUBLE-DASH (3), GRID-SOLID (4) @}"
    )
  )
  (
  )
)
(register-procedure "gimp-layer-remove-mask"
  "Remove the specified layer mask from the layer."
  "This procedure removes the specified layer mask from the layer. If the mask doesn't exist, an error is returned."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "layer"
      "GimpLayer"
      "The layer from which to remove mask"
    )
    (
      "mode"
      "GimpMaskApplyMode"
      "Removal mode @{ MASK-APPLY (0), MASK-DISCARD (1) @}"
    )
  )
  (
  )
)
(register-procedure "gimp-gradient-segment-get-right-color"
  "Retrieves the right endpoint color of the specified segment"
  "This procedure retrieves the right endpoint color of the specified segment of the specified gradient."
  "Shlomi Fish <shlomif@@iglu.org.il>"
  "Shlomi Fish"
  "2003"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The gradient name"
    )
    (
      "segment"
      "gint"
      "The index of the segment within the gradient (segment >= 0)"
    )
  )
  (
    (
      "color"
      "GimpRGB"
      "The return color"
    )
    (
      "opacity"
      "gdouble"
      "The opacity of the endpoint"
    )
  )
)
(register-procedure "gimp-drawable-get-bpp"
  "Returns the bytes per pixel."
  "This procedure returns the number of bytes per pixel."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "drawable"
      "GimpDrawable"
      "The drawable"
    )
  )
  (
    (
      "bpp"
      "gint"
      "Bytes per pixel"
    )
  )
)
(register-procedure "gimp-temp-file"
  "Generates a unique temporary file."
  "Generates a unique file using the temp path supplied in the user's gimprc."
  "Josh MacDonald"
  "Josh MacDonald"
  "1997"
  "Internal GIMP procedure"
  (
    (
      "extension"
      "gchararray"
      "The extension the file will have"
    )
  )
  (
    (
      "file"
      "GFile"
      "The new temp file"
    )
  )
)
(register-procedure "gimp-image-get-active-vectors"
  "Returns the specified image's active vectors."
  "If there is an active path, its ID will be returned, otherwise, -1."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
  )
  (
    (
      "active-vectors"
      "GimpVectors"
      "The active vectors"
    )
  )
)
(register-procedure "gimp-image-get-vectors"
  "Returns the list of vectors contained in the specified image."
  "This procedure returns the list of vectors contained in the specified image."
  "Simon Budig"
  "Simon Budig"
  "2005"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
  )
  (
    (
      "num-vectors"
      "gint"
      "The number of vectors contained in the image (num-vectors >= 0)"
    )
    (
      "vectors"
      "GimpObjectArray"
      "The list of vectors contained in the image."
    )
  )
)
(register-procedure "gimp-context-get-line-miter-limit"
  "Get the line miter limit setting."
  "This procedure returns the line miter limit setting."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2015"
  "Internal GIMP procedure"
  (
  )
  (
    (
      "miter-limit"
      "gdouble"
      "The line miter limit setting (0 <= miter-limit <= 100)"
    )
  )
)
(register-procedure "script-fu-erase-nth-rows"
  "Erase every nth row or column"
  ""
  "Federico Mena Quintero, Nikc M. (Altered)"
  "Federico Mena Quintero"
  "June 1997, February 2020"
  "Temporary Procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Image"
    )
    (
      "drawable"
      "GimpDrawable"
      "Drawable"
    )
    (
      "option"
      "gint"
      "Rows/cols"
    )
    (
      "adjustment"
      "gdouble"
      "Offset"
    )
    (
      "option-2"
      "gint"
      "Erase/fill"
    )
    (
      "adjustment-2"
      "gdouble"
      "Skip by"
    )
  )
  (
  )
)
(register-procedure "file-openraster-save"
  "save an OpenRaster (.ora) file"
  "save an OpenRaster (.ora) file"
  "Jon Nordby"
  "Jon Nordby"
  "2009"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The image to save"
    )
    (
      "num-drawables"
      "gint"
      "Number of drawables to be saved (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The drawables to save"
    )
    (
      "file"
      "GFile"
      "The file to save to"
    )
  )
  (
  )
)
(register-procedure "plug-in-randomize-slur"
  "Randomly slide some pixels downward (similar to melting"
  "This plug-in \"slurs\" (melts like a bunch of icicles) an image. You may select the percentage of pixels to modify and the number of times to repeat the process."
  "Compatibility procedure. Please see 'gegl:noise-slur' for credits."
  "Compatibility procedure. Please see 'gegl:noise-slur' for credits."
  "2013"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
    (
      "rndm-pct"
      "gdouble"
      "Randomization percentage (1 <= rndm-pct <= 100)"
    )
    (
      "rndm-rcount"
      "gdouble"
      "Repeat count (1 <= rndm-rcount <= 100)"
    )
    (
      "randomize"
      "gboolean"
      "Use random seed (TRUE or FALSE)"
    )
    (
      "seed"
      "gint"
      "Seed value (used only if randomize is FALSE)"
    )
  )
  (
  )
)
(register-procedure "file-xz-save"
  "saves files compressed with xz"
  "This procedure saves files in the xz compressed format."
  "Daniel Risacher"
  "Daniel Risacher, Spencer Kimball and Peter Mattis"
  "1995-1997"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The image to save"
    )
    (
      "num-drawables"
      "gint"
      "Number of drawables to be saved (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The drawables to save"
    )
    (
      "file"
      "GFile"
      "The file to save to"
    )
  )
  (
  )
)
(register-procedure "python-fu-palette-to-gradient-repeating"
  "Create a repeating gradient using colors from the palette"
  "Create a new repeating gradient using colors from the palette."
  "Carol Spears, reproduced from previous work by Adrian Likins and Jeff Trefftz"
  "Carol Spears"
  "2006"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode (unused) @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "palette"
      "gchararray"
      "Palette name or empty string for the currently selected palette"
    )
  )
  (
    (
      "new-gradient"
      "gchararray"
      "Read-write integer property."
    )
  )
)
(register-procedure "script-fu-xach-effect"
  "Add a subtle translucent 3D effect to the selected region (or alpha)"
  ""
  "Adrian Likins <adrian@@gimp.org>"
  "Adrian Likins"
  "9/28/97"
  "Temporary Procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Image"
    )
    (
      "drawable"
      "GimpDrawable"
      "Drawable"
    )
    (
      "adjustment"
      "gdouble"
      "Highlight X offset"
    )
    (
      "adjustment-2"
      "gdouble"
      "Highlight Y offset"
    )
    (
      "color"
      "GimpRGB"
      "Highlight color"
    )
    (
      "adjustment-3"
      "gdouble"
      "Highlight opacity"
    )
    (
      "color-2"
      "GimpRGB"
      "Drop shadow color"
    )
    (
      "adjustment-4"
      "gdouble"
      "Drop shadow opacity"
    )
    (
      "adjustment-5"
      "gdouble"
      "Drop shadow blur radius"
    )
    (
      "adjustment-6"
      "gdouble"
      "Drop shadow X offset"
    )
    (
      "adjustment-7"
      "gdouble"
      "Drop shadow Y offset"
    )
    (
      "toggle"
      "gboolean"
      "Keep selection (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "gimp-image-get-parasite-list"
  "List all parasites."
  "Returns a list of the names of all currently attached parasites. These names can later be used to get the actual #GimpParasite with 'gimp-image-get-parasite' when needed."
  "Marc Lehmann"
  "Marc Lehmann"
  "1999"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
  )
  (
    (
      "parasites"
      "GStrv"
      "The names of currently attached parasites"
    )
  )
)
(register-procedure "script-fu-clothify"
  "Add a cloth-like texture to the selected region (or alpha)"
  ""
  "Tim Newsome <drz@@froody.bloke.com>"
  "Tim Newsome"
  "4/11/97"
  "Temporary Procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
    (
      "adjustment"
      "gdouble"
      "Blur X"
    )
    (
      "adjustment-2"
      "gdouble"
      "Blur Y"
    )
    (
      "adjustment-3"
      "gdouble"
      "Azimuth"
    )
    (
      "adjustment-4"
      "gdouble"
      "Elevation"
    )
    (
      "adjustment-5"
      "gdouble"
      "Depth"
    )
  )
  (
  )
)
(register-procedure "plug-in-animationplay"
  "Preview a GIMP layer-based animation"
  ""
  "Adam D. Moss <adam@@gimp.org>"
  "Adam D. Moss <adam@@gimp.org>"
  "1997, 1998..."
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The input image"
    )
    (
      "num-drawables"
      "gint"
      "Number of input drawables (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The input drawables"
    )
  )
  (
  )
)
(register-procedure "gimp-context-get-sample-transparent"
  "Get the sample transparent setting."
  "This procedure returns the sample transparent setting."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2011"
  "Internal GIMP procedure"
  (
  )
  (
    (
      "sample-transparent"
      "gboolean"
      "The sample transparent setting (TRUE or FALSE)"
    )
  )
)
(register-procedure "plug-in-red-eye-removal"
  "Remove the red eye effect caused by camera flashes"
  "This procedure removes the red eye effect caused by camera flashes by using a percentage based red color threshold. Make a selection containing the eyes, and apply the filter while adjusting the threshold to accurately remove the red eyes."
  "Compatibility procedure. Please see 'gegl:red-eye-removal' for credits."
  "Compatibility procedure. Please see 'gegl:red-eye-removal' for credits."
  "2013"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
    (
      "threshold"
      "gint"
      "Red eye threshold in percent (0 <= threshold <= 100)"
    )
  )
  (
  )
)
(register-procedure "gimp-image-resize"
  "Resize the image to the specified extents."
  "This procedure resizes the image so that it's new width and height are equal to the supplied parameters. Offsets are also provided which describe the position of the previous image's content. All channels within the image are resized according to the specified parameters; this includes the image selection mask. All layers within the image are repositioned according to the specified offsets."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "new-width"
      "gint"
      "New image width (1 <= new-width <= 524288)"
    )
    (
      "new-height"
      "gint"
      "New image height (1 <= new-height <= 524288)"
    )
    (
      "offx"
      "gint"
      "x offset between upper left corner of old and new images: (new - old)"
    )
    (
      "offy"
      "gint"
      "y offset between upper left corner of old and new images: (new - old)"
    )
  )
  (
  )
)
(register-procedure "file-gif-load"
  "Loads files of Compuserve GIF file format"
  "FIXME: write help for gif_load"
  "Spencer Kimball, Peter Mattis, Adam Moss, David Koblas"
  "Spencer Kimball, Peter Mattis, Adam Moss, David Koblas"
  "1995-2006"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "file"
      "GFile"
      "The file to load"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "Output image"
    )
  )
)
(register-procedure "gimp-item-get-lock-visibility"
  "Get the 'lock visibility' state of the specified item."
  "This procedure returns the specified item's lock visibility state."
  "Jehan"
  "Jehan"
  "2021"
  "Internal GIMP procedure"
  (
    (
      "item"
      "GimpItem"
      "The item"
    )
  )
  (
    (
      "lock-visibility"
      "gboolean"
      "Whether the item's visibility is locked (TRUE or FALSE)"
    )
  )
)
(register-procedure "gimp-vectors-export-to-file"
  "save a path as an SVG file."
  "This procedure creates an SVG file to save a Vectors object, that is, a path. The resulting file can be edited using a vector graphics application, or later reloaded into GIMP. If you pass 0 as the 'vectors' argument, then all paths in the image will be exported."
  "Bill Skaggs <weskaggs@@primate.ucdavis.edu>"
  "Bill Skaggs"
  "2007"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "file"
      "GFile"
      "The SVG file to create."
    )
    (
      "vectors"
      "GimpVectors"
      "The vectors object to be saved, or 0 for all in the image"
    )
  )
  (
  )
)
(register-procedure "gimp-text-fontname"
  "Add text at the specified location as a floating selection or a new layer."
  "This tool requires a fontname matching an installed PangoFT2 font. You can specify the fontsize in units of pixels or points, and the appropriate metric is specified using the size_type argument. The x and y parameters together control the placement of the new text by specifying the upper left corner of the text bounding box. If the specified drawable parameter is valid, the text will be created as a floating selection attached to the drawable. If the drawable parameter is not valid (%NULL), the text will appear as a new layer. Finally, a border can be specified around the final rendered text. The border is measured in pixels. Parameter size-type is not used and is currently ignored. If you need to display a font in points, divide the size in points by 72.0 and multiply it by the image's vertical resolution."
  "Martin Edlman & Sven Neumann"
  "Spencer Kimball & Peter Mattis"
  "1998- 2001"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "drawable"
      "GimpDrawable"
      "The affected drawable: (%NULL for a new text layer)"
    )
    (
      "x"
      "gdouble"
      "The x coordinate for the left of the text bounding box"
    )
    (
      "y"
      "gdouble"
      "The y coordinate for the top of the text bounding box"
    )
    (
      "text"
      "gchararray"
      "The text to generate (in UTF-8 encoding)"
    )
    (
      "border"
      "gint"
      "The size of the border (border >= -1)"
    )
    (
      "antialias"
      "gboolean"
      "Antialiasing (TRUE or FALSE)"
    )
    (
      "size"
      "gdouble"
      "The size of text in either pixels or points (size >= 0)"
    )
    (
      "size-type"
      "GimpSizeType"
      "The units of specified size @{ PIXELS (0), POINTS (1) @}"
    )
    (
      "fontname"
      "gchararray"
      "The name of the font"
    )
  )
  (
    (
      "text-layer"
      "GimpLayer"
      "The new text layer or %NULL if no layer was created."
    )
  )
)
(register-procedure "file-pcx-load"
  "Loads files in Zsoft PCX file format"
  "FIXME: write help for pcx_load"
  "Francisco Bustamante & Nick Lamb"
  "Nick Lamb <njl195@@zepler.org.uk>"
  "January 1997"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "file"
      "GFile"
      "The file to load"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "Output image"
    )
  )
)
(register-procedure "plug-in-softglow"
  "Simulate glow by making highlights intense and fuzzy"
  "Gives an image a softglow effect by intensifying the highlights in the image. This is done by screening a modified version of the drawable with itself. The modified version is desaturated and then a sigmoidal transfer function is applied to force the distribution of intensities into very small and very large only. This desaturated version is then blurred to give it a fuzzy 'vaseline-on-the-lens' effect. The glow radius parameter controls the sharpness of the glow effect. The brightness parameter controls the degree of intensification applied to image highlights. The sharpness parameter controls how defined or alternatively, diffuse, the glow effect should be."
  "Compatibility procedure. Please see 'gegl:softglow' for credits."
  "Compatibility procedure. Please see 'gegl:softglow' for credits."
  "2019"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
    (
      "glow-radius"
      "gdouble"
      "Glow radius in pixels (glow-radius >= 0)"
    )
    (
      "brightness"
      "gdouble"
      "Glow brightness (0 <= brightness <= 1)"
    )
    (
      "sharpness"
      "gdouble"
      "Glow sharpness (0 <= sharpness <= 1)"
    )
  )
  (
  )
)
(register-procedure "gimp-image-raise-item"
  "Raise the specified item in its level in its item tree"
  "This procedure raises the specified item one step in the item tree. The procedure call will fail if there is no item above it."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2010"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "item"
      "GimpItem"
      "The item to raise"
    )
  )
  (
  )
)
(register-procedure "gimp-context-get-sample-criterion"
  "Get the sample criterion setting."
  "This procedure returns the sample criterion setting."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2011"
  "Internal GIMP procedure"
  (
  )
  (
    (
      "sample-criterion"
      "GimpSelectCriterion"
      "The sample criterion setting @{ SELECT-CRITERION-COMPOSITE (0), SELECT-CRITERION-RGB-RED (1), SELECT-CRITERION-RGB-GREEN (2), SELECT-CRITERION-RGB-BLUE (3), SELECT-CRITERION-HSV-HUE (4), SELECT-CRITERION-HSV-SATURATION (5), SELECT-CRITERION-HSV-VALUE (6), SELECT-CRITERION-LCH-LIGHTNESS (7), SELECT-CRITERION-LCH-CHROMA (8), SELECT-CRITERION-LCH-HUE (9), SELECT-CRITERION-ALPHA (10) @}"
    )
  )
)
(register-procedure "gimp-image-get-width"
  "Return the width of the image"
  "This procedure returns the image's width. This value is independent of any of the layers in this image. This is the \"canvas\" width."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
  )
  (
    (
      "width"
      "gint"
      "The image's width"
    )
  )
)
(register-procedure "gimp-airbrush"
  "Paint in the current brush with varying pressure. Paint application is time-dependent."
  "This tool simulates the use of an airbrush. Paint pressure represents the relative intensity of the paint application. High pressure results in a thicker layer of paint while low pressure results in a thinner layer."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "drawable"
      "GimpDrawable"
      "The affected drawable"
    )
    (
      "pressure"
      "gdouble"
      "The pressure of the airbrush strokes (0 <= pressure <= 100)"
    )
    (
      "num-strokes"
      "gint"
      "Number of stroke control points (count each coordinate as 2 points) (num-strokes >= 2)"
    )
    (
      "strokes"
      "GimpFloatArray"
      "Array of stroke coordinates: @{ s1.x, s1.y, s2.x, s2.y, ..., sn.x, sn.y @}"
    )
  )
  (
  )
)
(register-procedure "file-pdf-save-multi"
  "Save files in PDF format"
  "Saves files in Adobe's Portable Document Format. PDF is designed to be easily processed by a variety of different platforms, and is a distant cousin of PostScript."
  "Barak Itkin"
  "Copyright Barak Itkin"
  "August 2009"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "count"
      "gint"
      "The number of images entered (This will be the number of pages). (1 <= count <= 350)"
    )
    (
      "images"
      "GimpInt32Array"
      "Input image for each page (An image can appear more than once)"
    )
    (
      "vectorize"
      "gboolean"
      "Convert bitmaps to vector graphics where possible. (TRUE or FALSE)"
    )
    (
      "ignore-hidden"
      "gboolean"
      "Omit hidden layers and layers with zero opacity. (TRUE or FALSE)"
    )
    (
      "apply-masks"
      "gboolean"
      "Apply layer masks before saving (Keeping them will not change the output), (TRUE or FALSE)"
    )
    (
      "uri"
      "gchararray"
      "The URI of the file to save to"
    )
  )
  (
  )
)
(register-procedure "gimp-vectors-new"
  "Creates a new empty vectors object."
  "Creates a new empty vectors object. The vectors object needs to be added to the image using 'gimp-image-insert-vectors'."
  "Simon Budig"
  "Simon Budig"
  "2005"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "name"
      "gchararray"
      "the name of the new vector object."
    )
  )
  (
    (
      "vectors"
      "GimpVectors"
      "the current vector object, 0 if no vector exists in the image."
    )
  )
)
(register-procedure "gimp-plug-in-set-pdb-error-handler"
  "Sets an error handler for procedure calls."
  "This procedure changes the way that errors in procedure calls are handled. By default GIMP will raise an error dialog if a procedure call made by a plug-in fails. Using this procedure the plug-in can change this behavior. If the error handler is set to %GIMP_PDB_ERROR_HANDLER_PLUGIN, then the plug-in is responsible for calling 'gimp-get-pdb-error' and handling the error whenever one if its procedure calls fails. It can do this by displaying the error message or by forwarding it in its own return values."
  "Sven Neumann <sven@@gimp.org>"
  "Sven Neumann"
  "2008"
  "Internal GIMP procedure"
  (
    (
      "handler"
      "GimpPDBErrorHandler"
      "Who is responsible for handling procedure call errors @{ PDB-ERROR-HANDLER-INTERNAL (0), PDB-ERROR-HANDLER-PLUGIN (1) @}"
    )
  )
  (
  )
)
(register-procedure "gimp-selection-bounds"
  "Find the bounding box of the current selection."
  "This procedure returns whether there is a selection for the specified image. If there is one, the upper left and lower right corners of the bounding box are returned. These coordinates are relative to the image. Please note that the pixel specified by the lower right coordinate of the bounding box is not part of the selection. The selection ends at the upper left corner of this pixel. This means the width of the selection can be calculated as (x2 - x1), its height as (y2 - y1)."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
  )
  (
    (
      "non-empty"
      "gboolean"
      "TRUE if there is a selection (TRUE or FALSE)"
    )
    (
      "x1"
      "gint"
      "x coordinate of upper left corner of selection bounds"
    )
    (
      "y1"
      "gint"
      "y coordinate of upper left corner of selection bounds"
    )
    (
      "x2"
      "gint"
      "x coordinate of lower right corner of selection bounds"
    )
    (
      "y2"
      "gint"
      "y coordinate of lower right corner of selection bounds"
    )
  )
)
(register-procedure "plug-in-make-seamless"
  "Alters edges to make the image seamlessly tileable"
  "This plug-in creates a seamless tileable from the input drawable."
  "Compatibility procedure. Please see 'gegl:tile-seamless' for credits."
  "Compatibility procedure. Please see 'gegl:tile-seamless' for credits."
  "2013"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
  )
  (
  )
)
(register-procedure "plug-in-deinterlace"
  "Fix images where every other row is missing"
  "Deinterlace is useful for processing images from video capture cards. When only the odd or even fields get captured, deinterlace can be used to interpolate between the existing fields to correct this."
  "Compatibility procedure. Please see 'gegl:deinterlace' for credits."
  "Compatibility procedure. Please see 'gegl:deinterlace' for credits."
  "2014"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
    (
      "evenodd"
      "gint"
      "Which lines to keep @{ KEEP-ODD (0), KEEP-EVEN (1) (0 <= evenodd <= 1)"
    )
  )
  (
  )
)
(register-procedure "gimp-palette-get-columns"
  "Retrieves the number of columns to use to display this palette"
  "This procedures retrieves the preferred number of columns to use when the palette is being displayed."
  "Sven Neumann <sven@@gimp.org>"
  "Sven Neumann"
  "2005"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The palette name"
    )
  )
  (
    (
      "num-columns"
      "gint"
      "The number of columns used to display this palette"
    )
  )
)
(register-procedure "gimp-brushes-close-popup"
  "Close the brush selection dialog."
  "This procedure closes an opened brush selection dialog."
  "Andy Thomas"
  "Andy Thomas"
  "1998"
  "Internal GIMP procedure"
  (
    (
      "brush-callback"
      "gchararray"
      "The name of the callback registered for this pop-up"
    )
  )
  (
  )
)
(register-procedure "gimp-pdb-set-file-proc-handles-raw"
  "Registers a file handler procedure as capable of handling raw camera files."
  "Registers a file handler procedure as capable of handling raw digital camera files. Use this procedure only to register raw load handlers, calling it on a save handler will generate an error."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2017"
  "Internal GIMP procedure"
  (
    (
      "procedure-name"
      "gchararray"
      "The name of the procedure to enable raw handling for."
    )
  )
  (
  )
)
(register-procedure "gimp-image-grid-get-background-color"
  "Sets the background color of an image's grid."
  "This procedure gets the background color of an image's grid."
  "Sylvain Foret"
  "Sylvain Foret"
  "2005"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
  )
  (
    (
      "bgcolor"
      "GimpRGB"
      "The image's grid background color"
    )
  )
)
(register-procedure "gimp-image-policy-rotate"
  "Execute the \"Orientation\" metadata policy."
  "Process the image according to the rotation policy as set in Preferences. If GIMP is running as a GUI and interactive is TRUE, a dialog may be presented to the user depending on the set policy. Otherwise, if the policy does not mandate the action to perform, the image will be rotated following the Orientation metadata.
If you wish absolutely to rotate a loaded image following the Orientation metadata, do not use this function and process the metadata yourself. Indeed even with `interactive` to FALSE, user settings may leave the image unrotated.
Finally it is unnecessary to call this function in a format load procedure because this is called automatically by the core code when loading any image. You should only call this function explicitly when loading an image through a PDB call."
  "Jehan"
  "Jehan"
  "2020"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "interactive"
      "gboolean"
      "Querying the user through a dialog is a possibility (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "plug-in-retinex"
  "Enhance contrast using the Retinex method"
  "The Retinex Image Enhancement Algorithm is an automatic image enhancement method that enhances a digital image in terms of dynamic range compression, color independence from the spectral distribution of the scene illuminant, and color/lightness rendition."
  "Fabien Pelisson"
  "Fabien Pelisson"
  "2003"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The input image"
    )
    (
      "num-drawables"
      "gint"
      "Number of input drawables (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The input drawables"
    )
    (
      "scale"
      "gint"
      "Biggest scale value (16 <= scale <= 250)"
    )
    (
      "nscales"
      "gint"
      "Number of scales (0 <= nscales <= 8)"
    )
    (
      "scales-mode"
      "gint"
      "Retinex distribution through scales (0 <= scales-mode <= 2)"
    )
    (
      "cvar"
      "gdouble"
      "Variance value (0 <= cvar <= 4)"
    )
  )
  (
  )
)
(register-procedure "gimp-drawable-levels"
  "Modifies intensity levels in the specified drawable."
  "This tool allows intensity levels in the specified drawable to be remapped according to a set of parameters. The low/high input levels specify an initial mapping from the source intensities. The gamma value determines how intensities between the low and high input intensities are interpolated. A gamma value of 1.0 results in a linear interpolation. Higher gamma values result in more high-level intensities. Lower gamma values result in more low-level intensities. The low/high output levels constrain the final intensity mapping--that is, no final intensity will be lower than the low output level and no final intensity will be higher than the high output level. This tool is only valid on RGB color and grayscale images."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "drawable"
      "GimpDrawable"
      "The drawable"
    )
    (
      "channel"
      "GimpHistogramChannel"
      "The channel to modify @{ HISTOGRAM-VALUE (0), HISTOGRAM-RED (1), HISTOGRAM-GREEN (2), HISTOGRAM-BLUE (3), HISTOGRAM-ALPHA (4), HISTOGRAM-LUMINANCE (5), HISTOGRAM-RGB (6) @}"
    )
    (
      "low-input"
      "gdouble"
      "Intensity of lowest input (0 <= low-input <= 1)"
    )
    (
      "high-input"
      "gdouble"
      "Intensity of highest input (0 <= high-input <= 1)"
    )
    (
      "clamp-input"
      "gboolean"
      "Clamp input values before applying output levels (TRUE or FALSE)"
    )
    (
      "gamma"
      "gdouble"
      "Gamma adjustment factor (0.1 <= gamma <= 10)"
    )
    (
      "low-output"
      "gdouble"
      "Intensity of lowest output (0 <= low-output <= 1)"
    )
    (
      "high-output"
      "gdouble"
      "Intensity of highest output (0 <= high-output <= 1)"
    )
    (
      "clamp-output"
      "gboolean"
      "Clamp final output values (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "script-fu-selection-round"
  "This procedure is deprecated! Use 'script-fu-selection-rounded-rectangle' instead."
  ""
  "Sven Neumann"
  "Sven Neumann"
  "1998/02/06"
  "Temporary Procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Image"
    )
    (
      "drawable"
      "GimpDrawable"
      "Drawable"
    )
    (
      "adjustment"
      "gdouble"
      "Relative radius"
    )
  )
  (
  )
)
(register-procedure "gimp-eraser"
  "Erase using the current brush."
  "This tool erases using the current brush mask. If the specified drawable contains an alpha channel, then the erased pixels will become transparent. Otherwise, the eraser tool replaces the contents of the drawable with the background color. Like paintbrush, this tool linearly interpolates between the specified stroke coordinates."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "drawable"
      "GimpDrawable"
      "The affected drawable"
    )
    (
      "num-strokes"
      "gint"
      "Number of stroke control points (count each coordinate as 2 points) (num-strokes >= 2)"
    )
    (
      "strokes"
      "GimpFloatArray"
      "Array of stroke coordinates: @{ s1.x, s1.y, s2.x, s2.y, ..., sn.x, sn.y @}"
    )
    (
      "hardness"
      "GimpBrushApplicationMode"
      "How to apply the brush @{ BRUSH-HARD (0), BRUSH-SOFT (1) @}"
    )
    (
      "method"
      "GimpPaintApplicationMode"
      "The paint method to use @{ PAINT-CONSTANT (0), PAINT-INCREMENTAL (1) @}"
    )
  )
  (
  )
)
(register-procedure "gimp-text-layer-get-kerning"
  "Check if kerning is used in the text layer."
  "This procedure checks if kerning is enabled in the specified text layer."
  "Marcus Heese <heese@@cip.ifi.lmu.de>"
  "Marcus Heese"
  "2008"
  "Internal GIMP procedure"
  (
    (
      "layer"
      "GimpLayer"
      "The text layer"
    )
  )
  (
    (
      "kerning"
      "gboolean"
      "A flag which is true if kerning is used in the text layer. (TRUE or FALSE)"
    )
  )
)
(register-procedure "file-raw-placeholder-pef-load"
  "Load files in the PEF raw format via placeholder"
  "This plug-in loads files in Pentax' raw PEF format by calling placeholder."
  "Tobias Ellinghaus"
  "Tobias Ellinghaus"
  "2016"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "file"
      "GFile"
      "The file to load"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "Output image"
    )
  )
)
(register-procedure "gimp-message-get-handler"
  "Returns the current state of where warning messages are displayed."
  "This procedure returns the way g_message warnings are displayed. They can be shown in a dialog box or printed on the console where gimp was started."
  "Manish Singh"
  "Manish Singh"
  "1998"
  "Internal GIMP procedure"
  (
  )
  (
    (
      "handler"
      "GimpMessageHandlerType"
      "The current handler type @{ MESSAGE-BOX (0), CONSOLE (1), ERROR-CONSOLE (2) @}"
    )
  )
)
(register-procedure "python-fu-palette-sort"
  "Sort the colors in a palette"
  "palette_sort (palette, selection, slice_expr, channel,
channel2, quantize, ascending, pchannel, pquantize) -> new_palette
Sorts a palette, or part of a palette, using several options.
One can select two color channels over which to sort,
and several auxiliary parameters create a 2D sorted
palette with sorted rows, among other things.
One can optionally install colormath
(https://pypi.python.org/pypi/colormath/1.0.8)
to GIMP's Python to get even more channels to choose from.
"
  "João S. O. Bueno, Carol Spears, David Gowers"
  "João S. O. Bueno, Carol Spears, David Gowers"
  "2006-2014"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "palette"
      "gchararray"
      "Palette"
    )
    (
      "selections"
      "gint"
      "['All', 'Slice / Array', 'Autoslice (fg->bg)', 'Partitioned'] (0 <= selections <= 3)"
    )
    (
      "slice-expr"
      "gchararray"
      "
    Format is 'start:nrows,length' . All items are optional.

    The empty string selects all items, as does ':'
    ':4,' makes a 4-row selection out of all colors (length auto-determined)
    ':4' also.
    ':1,4' selects the first 4 colors
    ':,4' selects rows of 4 colors (nrows auto-determined)
    ':3,4' selects 3 rows of 4 colors
    '4:' selects a single row of all colors after 4, inclusive.
    '3:,4' selects rows of 4 colors, starting at 3 (nrows auto-determined)
    '2:3,4' selects 3 rows of 4 colors (12 colors total), beginning at index 2.
    '4' is illegal (ambiguous)
"
    )
    (
      "channel1"
      "gint"
      "Channel to sort: ('Red', 'Green', 'Blue', 'Luma (Y)', 'Hue', 'Saturation', 'Value', 'Saturation (HSL)', 'Lightness (HSL)', 'Index', 'Random') (0 <= channel1 <= 11)"
    )
    (
      "ascending1"
      "gboolean"
      "Ascending (TRUE or FALSE)"
    )
    (
      "channel2"
      "gint"
      "Secondary Channel to sort: ('Red', 'Green', 'Blue', 'Luma (Y)', 'Hue', 'Saturation', 'Value', 'Saturation (HSL)', 'Lightness (HSL)', 'Index', 'Random') (0 <= channel2 <= 11)"
    )
    (
      "ascending2"
      "gboolean"
      "Ascending (TRUE or FALSE)"
    )
    (
      "quantize"
      "gdouble"
      "Quantization (0 <= quantize <= 1)"
    )
    (
      "pchannel"
      "gint"
      "Partitioning channel: ('Red', 'Green', 'Blue', 'Luma (Y)', 'Hue', 'Saturation', 'Value', 'Saturation (HSL)', 'Lightness (HSL)', 'Index', 'Random') (0 <= pchannel <= 11)"
    )
    (
      "pquantize"
      "gdouble"
      "Partition quantization (0 <= pquantize <= 1)"
    )
  )
  (
    (
      "new-palette"
      "gchararray"
      "Palette"
    )
  )
)
(register-procedure "file-bmp-load"
  "Loads files of Windows BMP file format"
  "Loads files of Windows BMP file format"
  "Alexander Schulz"
  "Alexander Schulz"
  "1997"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "file"
      "GFile"
      "The file to load"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "Output image"
    )
  )
)
(register-procedure "gimp-context-get-feather-radius"
  "Get the feather radius setting."
  "This procedure returns the feather radius setting."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2010"
  "Internal GIMP procedure"
  (
  )
  (
    (
      "feather-radius-x"
      "gdouble"
      "The horizontal feather radius (0 <= feather-radius-x <= 1000)"
    )
    (
      "feather-radius-y"
      "gdouble"
      "The vertical feather radius (0 <= feather-radius-y <= 1000)"
    )
  )
)
(register-procedure "gimp-paintbrush"
  "Paint in the current brush with optional fade out parameter and pull colors from a gradient."
  "This tool is the standard paintbrush. It draws linearly interpolated lines through the specified stroke coordinates. It operates on the specified drawable in the foreground color with the active brush. The 'fade-out' parameter is measured in pixels and allows the brush stroke to linearly fall off. The pressure is set to the maximum at the beginning of the stroke. As the distance of the stroke nears the fade-out value, the pressure will approach zero. The gradient-length is the distance to spread the gradient over. It is measured in pixels. If the gradient-length is 0, no gradient is used."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "drawable"
      "GimpDrawable"
      "The affected drawable"
    )
    (
      "fade-out"
      "gdouble"
      "Fade out parameter (fade-out >= 0)"
    )
    (
      "num-strokes"
      "gint"
      "Number of stroke control points (count each coordinate as 2 points) (num-strokes >= 2)"
    )
    (
      "strokes"
      "GimpFloatArray"
      "Array of stroke coordinates: @{ s1.x, s1.y, s2.x, s2.y, ..., sn.x, sn.y @}"
    )
    (
      "method"
      "GimpPaintApplicationMode"
      "The paint method to use @{ PAINT-CONSTANT (0), PAINT-INCREMENTAL (1) @}"
    )
    (
      "gradient-length"
      "gdouble"
      "Length of gradient to draw (gradient-length >= 0)"
    )
  )
  (
  )
)
(register-procedure "gimp-displays-reconnect"
  "Reconnect displays from one image to another image."
  "This procedure connects all displays of the old_image to the new_image. If the old_image has no display or new_image already has a display the reconnect is not performed and the procedure returns without success. You should rarely need to use this function."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "old-image"
      "GimpImage"
      "The old image (must have at least one display)"
    )
    (
      "new-image"
      "GimpImage"
      "The new image (must not have a display)"
    )
  )
  (
  )
)
(register-procedure "gimp-drawable-get-width"
  "Returns the width of the drawable."
  "This procedure returns the specified drawable's width in pixels."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "drawable"
      "GimpDrawable"
      "The drawable"
    )
  )
  (
    (
      "width"
      "gint"
      "Width of drawable"
    )
  )
)
(register-procedure "gimp-image-select-rectangle"
  "Create a rectangular selection over the specified image;"
  "This tool creates a rectangular selection over the specified image. The rectangular region can be either added to, subtracted from, or replace the contents of the previous selection mask.

This procedure is affected by the following context setters: 'gimp-context-set-feather', 'gimp-context-set-feather-radius'."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2010"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "operation"
      "GimpChannelOps"
      "The selection operation @{ CHANNEL-OP-ADD (0), CHANNEL-OP-SUBTRACT (1), CHANNEL-OP-REPLACE (2), CHANNEL-OP-INTERSECT (3) @}"
    )
    (
      "x"
      "gdouble"
      "x coordinate of upper-left corner of rectangle"
    )
    (
      "y"
      "gdouble"
      "y coordinate of upper-left corner of rectangle"
    )
    (
      "width"
      "gdouble"
      "The width of the rectangle (width >= 0)"
    )
    (
      "height"
      "gdouble"
      "The height of the rectangle (height >= 0)"
    )
  )
  (
  )
)
(register-procedure "script-fu-unsharp-mask"
  "Make a new image from the current layer by applying the unsharp mask method"
  ""
  "Shuji Narazaki <narazaki@@gimp.org>"
  "Shuji Narazaki"
  "1997,1998"
  "Temporary Procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Image"
    )
    (
      "drawable"
      "GimpDrawable"
      "Drawable to apply"
    )
    (
      "adjustment"
      "gdouble"
      "Mask size"
    )
    (
      "adjustment-2"
      "gdouble"
      "Mask opacity"
    )
  )
  (
  )
)
(register-procedure "file-raw-placeholder-nikon-load"
  "Load files in the Nikon raw formats via placeholder"
  "This plug-in loads files in Nikon's raw formats by calling placeholder."
  "Tobias Ellinghaus"
  "Tobias Ellinghaus"
  "2016"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "file"
      "GFile"
      "The file to load"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "Output image"
    )
  )
)
(register-procedure "file-fli-load"
  "Load FLI-movies"
  "This is an experimental plug-in to handle FLI movies"
  "Jens Ch. Restemeier"
  "Jens Ch. Restemeier"
  "1997"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "file"
      "GFile"
      "The file to load"
    )
    (
      "from-frame"
      "gint"
      "Load beginning from this frame (from-frame >= -1)"
    )
    (
      "to-frame"
      "gint"
      "End loading with this frame (to-frame >= -1)"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "Output image"
    )
  )
)
(register-procedure "gimp-gradient-segment-range-blend-colors"
  "Blend the colors of the segment range."
  "This function blends the colors (but not the opacity) of the segments' range of the gradient. Using it, the colors' transition will be uniform across the range."
  "Shlomi Fish <shlomif@@iglu.org.il>"
  "Shlomi Fish"
  "2003"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The gradient name"
    )
    (
      "start-segment"
      "gint"
      "The index of the first segment to operate on (start-segment >= 0)"
    )
    (
      "end-segment"
      "gint"
      "The index of the last segment to operate on. If negative, the selection will extend to the end of the string."
    )
  )
  (
  )
)
(register-procedure "gimp-unit-get-number-of-units"
  "Returns the number of units."
  "This procedure returns the number of defined units."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "1999"
  "Internal GIMP procedure"
  (
  )
  (
    (
      "num-units"
      "gint"
      "The number of units"
    )
  )
)
(register-procedure "gimp-image-select-polygon"
  "Create a polygonal selection over the specified image."
  "This tool creates a polygonal selection over the specified image. The polygonal region can be either added to, subtracted from, or replace the contents of the previous selection mask. The polygon is specified through an array of floating point numbers and its length. The length of array must be 2n, where n is the number of points. Each point is defined by 2 floating point values which correspond to the x and y coordinates. If the final point does not connect to the starting point, a connecting segment is automatically added.

This procedure is affected by the following context setters: 'gimp-context-set-antialias', 'gimp-context-set-feather', 'gimp-context-set-feather-radius'."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2010"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "operation"
      "GimpChannelOps"
      "The selection operation @{ CHANNEL-OP-ADD (0), CHANNEL-OP-SUBTRACT (1), CHANNEL-OP-REPLACE (2), CHANNEL-OP-INTERSECT (3) @}"
    )
    (
      "num-segs"
      "gint"
      "Number of points (count 1 coordinate as two points) (num-segs >= 2)"
    )
    (
      "segs"
      "GimpFloatArray"
      "Array of points: @{ p1.x, p1.y, p2.x, p2.y, ..., pn.x, pn.y@}"
    )
  )
  (
  )
)
(register-procedure "gimp-brush-set-aspect-ratio"
  "Sets the aspect ratio of a generated brush."
  "This procedure sets the aspect ratio for a generated brush. If called for any other type of brush, it does not succeed. The value should be a float between 0.0 and 1000.0."
  "Bill Skaggs <weskaggs@@primate.ucdavis.edu>"
  "Bill Skaggs"
  "2004"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The brush name"
    )
    (
      "aspect-ratio-in"
      "gdouble"
      "The desired brush aspect ratio"
    )
  )
  (
    (
      "aspect-ratio-out"
      "gdouble"
      "The brush aspect ratio actually assigned"
    )
  )
)
(register-procedure "plug-in-wind"
  "Smear image to give windblown effect"
  "Renders a wind effect."
  "Compatibility procedure. Please see 'gegl:wind' for credits."
  "Compatibility procedure. Please see 'gegl:wind' for credits."
  "2015"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
    (
      "threshold"
      "gint"
      "Controls where blending will be done (0 <= threshold <= 50)"
    )
    (
      "direction"
      "gint"
      "Wind direction @{ 0:left, 1:right, 2:top, 3:bottom @} (0 <= direction <= 3)"
    )
    (
      "strength"
      "gint"
      "Controls the extent of the blending (1 <= strength <= 100)"
    )
    (
      "algorithm"
      "gint"
      "Algorithm @{ WIND (0), BLAST (1) @} (0 <= algorithm <= 1)"
    )
    (
      "edge"
      "gint"
      "Affected edge @{ BOTH (0), LEADING (1), TRAILING (2) @} (0 <= edge <= 2)"
    )
  )
  (
  )
)
(register-procedure "gimp-selection-sharpen"
  "Sharpen the selection mask."
  "This procedure sharpens the selection mask. For every pixel in the selection channel, if the value is > 127, the new pixel is assigned a value of 255. This removes any \"anti-aliasing\" that might exist in the selection mask's boundary."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
  )
  (
  )
)
(register-procedure "gimp-message-set-handler"
  "Controls where warning messages are displayed."
  "This procedure controls how g_message warnings are displayed. They can be shown in a dialog box or printed on the console where gimp was started."
  "Manish Singh"
  "Manish Singh"
  "1998"
  "Internal GIMP procedure"
  (
    (
      "handler"
      "GimpMessageHandlerType"
      "The new handler type @{ MESSAGE-BOX (0), CONSOLE (1), ERROR-CONSOLE (2) @}"
    )
  )
  (
  )
)
(register-procedure "plug-in-erode"
  "Shrink lighter areas of the image"
  "Erode image."
  "Compatibility procedure. Please see 'gegl:value-propagate' for credits."
  "Compatibility procedure. Please see 'gegl:value-propagate' for credits."
  "2015"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
    (
      "propagate-mode"
      "gint"
      "Propagate mode @{ 0:white, 1:black, 2:middle value 3:foreground to peak, 4:foreground, 5:background, 6:opaque, 7:transparent @} (0 <= propagate-mode <= 7)"
    )
    (
      "propagating-channel"
      "gint"
      "Channels which values are propagated"
    )
    (
      "propagating-rate"
      "gdouble"
      "Propagating rate (0 <= propagating-rate <= 1)"
    )
    (
      "direction-mask"
      "gint"
      "Direction mask (0 <= direction-mask <= 15)"
    )
    (
      "lower-limit"
      "gint"
      "Lower limit (0 <= lower-limit <= 255)"
    )
    (
      "upper-limit"
      "gint"
      "Upper limit (0 <= upper-limit <= 255)"
    )
  )
  (
  )
)
(register-procedure "script-fu-guides-remove"
  "Remove all horizontal and vertical guides"
  ""
  "Alan Horkan"
  "Alan Horkan, 2004. Public Domain."
  "April 2004"
  "Temporary Procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Image"
    )
    (
      "drawable"
      "GimpDrawable"
      "Drawable"
    )
  )
  (
  )
)
(register-procedure "gimp-text-layer-set-kerning"
  "Enable/disable kerning in a text layer."
  "This procedure enables or disables kerning in a text layer."
  "Marcus Heese <heese@@cip.ifi.lmu.de>"
  "Marcus Heese"
  "2008"
  "Internal GIMP procedure"
  (
    (
      "layer"
      "GimpLayer"
      "The text layer"
    )
    (
      "kerning"
      "gboolean"
      "Enable/disable kerning in the text (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "gimp-context-get-brush-hardness"
  "Get brush hardness in paint options."
  "Get the brush hardness for brush based paint tools."
  "Alexia Death"
  "Alexia Death"
  "2014"
  "Internal GIMP procedure"
  (
  )
  (
    (
      "hardness"
      "gdouble"
      "Brush hardness (0 <= hardness <= 1)"
    )
  )
)
(register-procedure "gimp-progress-end"
  "Ends the progress bar for the current plug-in."
  "Ends the progress display for the current plug-in. Most plug-ins don't need to call this, they just exit when the work is done. It is only valid to call this procedure from a plug-in."
  "Sven Neumann <sven@@gimp.org>"
  "Sven Neumann"
  "2007"
  "Internal GIMP procedure"
  (
  )
  (
  )
)
(register-procedure "gimp-text-layer-get-font"
  "Get the font from a text layer as string."
  "This procedure returns the name of the font from a text layer."
  "Marcus Heese <heese@@cip.ifi.lmu.de>"
  "Marcus Heese"
  "2008"
  "Internal GIMP procedure"
  (
    (
      "layer"
      "GimpLayer"
      "The text layer"
    )
  )
  (
    (
      "font"
      "gchararray"
      "The font which is used in the specified text layer."
    )
  )
)
(register-procedure "gimp-image-add-vguide"
  "Add a vertical guide to an image."
  "This procedure adds a vertical guide to an image. It takes the input image and the x-position of the new guide as parameters. It returns the guide ID of the new guide."
  "Adam D. Moss"
  "Adam D. Moss"
  "1998"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "xposition"
      "gint"
      "The guide's x-offset from left of image (xposition >= 0)"
    )
  )
  (
    (
      "guide"
      "guint"
      "The new guide"
    )
  )
)
(register-procedure "gimp-vectors-new-from-text-layer"
  "Creates a new vectors object from a text layer."
  "Creates a new vectors object from a text layer. The vectors object needs to be added to the image using 'gimp-image-insert-vectors'."
  "Marcus Heese <heese@@cip.ifi.lmu.de>"
  "Marcus Heese"
  "2008"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image."
    )
    (
      "layer"
      "GimpLayer"
      "The text layer."
    )
  )
  (
    (
      "vectors"
      "GimpVectors"
      "The vectors of the text layer."
    )
  )
)
(register-procedure "gimp-text-layer-set-language"
  "Set the language of the text layer."
  "This procedure sets the language of the text in text layer. For some scripts the language has an influence of how the text is rendered."
  "Marcus Heese <heese@@cip.ifi.lmu.de>"
  "Marcus Heese"
  "2008"
  "Internal GIMP procedure"
  (
    (
      "layer"
      "GimpLayer"
      "The text layer"
    )
    (
      "language"
      "gchararray"
      "The new language to use for the text layer"
    )
  )
  (
  )
)
(register-procedure "gimp-image-thaw-layers"
  "Thaw the image's layer list."
  "This procedure thaws the layer list of the image, re-enabling updates to the Layers dialog.

This procedure should match a corresponding call to 'gimp-image-freeze-layers'."
  "Ell"
  "Ell"
  "2018"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
  )
  (
  )
)
(register-procedure "file-desktop-link-load"
  "Follows a link to an image in a .desktop file"
  "Opens a .desktop file and if it is a link, it asks GIMP to open the file the link points to."
  "Sven Neumann"
  "Sven Neumann"
  "2006"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "file"
      "GFile"
      "The file to load"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "Output image"
    )
  )
)
(register-procedure "plug-in-sinus"
  "Generate complex sinusoidal textures"
  "FIXME: sinus help"
  "Compatibility procedure. Please see 'gegl:sinus' for credits."
  "Compatibility procedure. Please see 'gegl:sinus' for credits."
  "2014"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
    (
      "xscale"
      "gdouble"
      "Scale value for x axis (xscale >= 0)"
    )
    (
      "yscale"
      "gdouble"
      "Scale value for y axis (yscale >= 0)"
    )
    (
      "complex"
      "gdouble"
      "Complexity factor (complex >= 0)"
    )
    (
      "seed"
      "gint"
      "Seed value for random number generator (seed >= 0)"
    )
    (
      "tiling"
      "gboolean"
      "If set, the pattern generated will tile (TRUE or FALSE)"
    )
    (
      "perturb"
      "gboolean"
      "If set, the pattern is a little more distorted... (TRUE or FALSE)"
    )
    (
      "colors"
      "gint"
      "where to take the colors (0=B&W, 1=fg/bg, 2=col1/col2) (0 <= colors <= 2)"
    )
    (
      "col1"
      "GimpRGB"
      "fist color (sometimes unused)"
    )
    (
      "col2"
      "GimpRGB"
      "second color (sometimes unused)"
    )
    (
      "alpha1"
      "gdouble"
      "alpha for the first color (used if the drawable has an alpha channel) (0 <= alpha1 <= 1)"
    )
    (
      "alpha2"
      "gdouble"
      "alpha for the second color (used if the drawable has an alpha channel) (0 <= alpha2 <= 1)"
    )
    (
      "blend"
      "gint"
      "0=linear, 1=bilinear, 2=sinusoidal (0 <= blend <= 2)"
    )
    (
      "blend-power"
      "gdouble"
      "Power used to stretch the blend"
    )
  )
  (
  )
)
(register-procedure "gimp-dynamics-refresh"
  "Refresh current paint dynamics. This function always succeeds."
  "This procedure retrieves all paint dynamics currently in the user's paint dynamics path and updates the paint dynamics dialogs accordingly."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2011"
  "Internal GIMP procedure"
  (
  )
  (
  )
)
(register-procedure "script-fu-make-brush-elliptical-feathered"
  "Create an elliptical brush with feathered edges"
  ""
  "Seth Burgess <sjburges@@ou.edu>"
  "Seth Burgess"
  "1997"
  "Temporary Procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "string"
      "gchararray"
      "Name"
    )
    (
      "adjustment"
      "gdouble"
      "Width"
    )
    (
      "adjustment-2"
      "gdouble"
      "Height"
    )
    (
      "adjustment-3"
      "gdouble"
      "Feathering"
    )
    (
      "adjustment-4"
      "gdouble"
      "Spacing"
    )
  )
  (
  )
)
(register-procedure "gimp-image-convert-indexed"
  "Convert specified image to and Indexed image"
  "This procedure converts the specified image to 'indexed' color. This process requires an image in RGB or Grayscale mode. The 'palette_type' specifies what kind of palette to use, A type of '0' means to use an optimal palette of 'num_cols' generated from the colors in the image. A type of '1' means to re-use the previous palette (not currently implemented). A type of '2' means to use the so-called WWW-optimized palette. Type '3' means to use only black and white colors. A type of '4' means to use a palette from the gimp palettes directories. The 'dither type' specifies what kind of dithering to use. '0' means no dithering, '1' means standard Floyd-Steinberg error diffusion, '2' means Floyd-Steinberg error diffusion with reduced bleeding, '3' means dithering based on pixel location ('Fixed' dithering)."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "dither-type"
      "GimpConvertDitherType"
      "The dither type to use @{ CONVERT-DITHER-NONE (0), CONVERT-DITHER-FS (1), CONVERT-DITHER-FS-LOWBLEED (2), CONVERT-DITHER-FIXED (3) @}"
    )
    (
      "palette-type"
      "GimpConvertPaletteType"
      "The type of palette to use @{ CONVERT-PALETTE-GENERATE (0), CONVERT-PALETTE-WEB (1), CONVERT-PALETTE-MONO (2), CONVERT-PALETTE-CUSTOM (3) @}"
    )
    (
      "num-cols"
      "gint"
      "The number of colors to quantize to, ignored unless (palette_type == GIMP_CONVERT_PALETTE_GENERATE)"
    )
    (
      "alpha-dither"
      "gboolean"
      "Dither transparency to fake partial opacity (TRUE or FALSE)"
    )
    (
      "remove-unused"
      "gboolean"
      "Remove unused or duplicate color entries from final palette, ignored if (palette_type == GIMP_CONVERT_PALETTE_GENERATE) (TRUE or FALSE)"
    )
    (
      "palette"
      "gchararray"
      "The name of the custom palette to use, ignored unless (palette_type == GIMP_CONVERT_PALETTE_CUSTOM)"
    )
  )
  (
  )
)
(register-procedure "gimp-context-set-brush-default-spacing"
  "Set brush spacing to its default."
  "Set the brush spacing to the default for paintbrush, airbrush, or pencil tools."
  "Alexia Death"
  "Alexia Death"
  "2014"
  "Internal GIMP procedure"
  (
  )
  (
  )
)
(register-procedure "gimp-palette-export-java"
  "Export the active palette as a java.util.Hashtable<String, Color>"
  ""
  "Barak Itkin <lightningismyname@@gmail.com>"
  "Barak Itkin"
  "May 15th, 2009"
  "Temporary Procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "dirname"
      "gchararray"
      "Folder for the output file"
    )
    (
      "string"
      "gchararray"
      "The name of the file to create (if a file with this name already exist, it will be replaced)"
    )
  )
  (
  )
)
(register-procedure "plug-in-grid"
  "Draw a grid on the image"
  "Draws a grid using the specified colors. The grid origin is the upper left corner."
  "Tim Newsome"
  "Tim Newsome, Sven Neumann, Tom Rathborne, TC"
  "1997 - 2000"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The input image"
    )
    (
      "num-drawables"
      "gint"
      "Number of input drawables (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The input drawables"
    )
    (
      "hwidth"
      "gint"
      "Horizontal width (0 <= hwidth <= 524288)"
    )
    (
      "hspace"
      "gint"
      "Horizontal spacing (1 <= hspace <= 524288)"
    )
    (
      "hoffset"
      "gint"
      "Horizontal offset (0 <= hoffset <= 524288)"
    )
    (
      "hcolor"
      "GimpRGB"
      "Horizontal color"
    )
    (
      "vwidth"
      "gint"
      "Vertical width (0 <= vwidth <= 524288)"
    )
    (
      "vspace"
      "gint"
      "Vertical spacing (1 <= vspace <= 524288)"
    )
    (
      "voffset"
      "gint"
      "Vertical offset (0 <= voffset <= 524288)"
    )
    (
      "vcolor"
      "GimpRGB"
      "Vertical color"
    )
    (
      "iwidth"
      "gint"
      "Intersection width (0 <= iwidth <= 524288)"
    )
    (
      "ispace"
      "gint"
      "Intersection spacing (1 <= ispace <= 524288)"
    )
    (
      "ioffset"
      "gint"
      "Intersection offset (0 <= ioffset <= 524288)"
    )
    (
      "icolor"
      "GimpRGB"
      "Intersection color"
    )
  )
  (
  )
)
(register-procedure "gimp-image-freeze-layers"
  "Freeze the image's layer list."
  "This procedure freezes the layer list of the image, suppressing any updates to the Layers dialog in response to changes to the image's layers. This can significantly improve performance while applying changes affecting the layer list.

Each call to 'gimp-image-freeze-layers' should be matched by a corresponding call to 'gimp-image-thaw-layers', undoing its effects."
  "Ell"
  "Ell"
  "2018"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
  )
  (
  )
)
(register-procedure "gimp-text-layer-set-hint-style"
  "Control how font outlines are hinted in a text layer."
  "This procedure sets the hint style for font outlines in a text layer. This controls whether to fit font outlines to the pixel grid, and if so, whether to optimize for fidelity or contrast."
  "Sven Neumann <sven@@gimp.org>"
  "Sven Neumann"
  "2008"
  "Internal GIMP procedure"
  (
    (
      "layer"
      "GimpLayer"
      "The text layer"
    )
    (
      "style"
      "GimpTextHintStyle"
      "The new hint style @{ TEXT-HINT-STYLE-NONE (0), TEXT-HINT-STYLE-SLIGHT (1), TEXT-HINT-STYLE-MEDIUM (2), TEXT-HINT-STYLE-FULL (3) @}"
    )
  )
  (
  )
)
(register-procedure "script-fu-lava"
  "Fill the current selection with lava"
  ""
  "Adrian Likins <adrian@@gimp.org>"
  "Adrian Likins"
  "10/12/97"
  "Temporary Procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Image"
    )
    (
      "drawable"
      "GimpDrawable"
      "Drawable"
    )
    (
      "adjustment"
      "gdouble"
      "Seed"
    )
    (
      "adjustment-2"
      "gdouble"
      "Size"
    )
    (
      "adjustment-3"
      "gdouble"
      "Roughness"
    )
    (
      "gradient"
      "gchararray"
      "Gradient"
    )
    (
      "toggle"
      "gboolean"
      "Keep selection (TRUE or FALSE)"
    )
    (
      "toggle-2"
      "gboolean"
      "Separate layer (TRUE or FALSE)"
    )
    (
      "toggle-3"
      "gboolean"
      "Use current gradient (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "plug-in-antialias"
  "Antialias using the Scale3X edge-extrapolation algorithm"
  "No more help."
  "Compatibility procedure. Please see 'gegl:antialias' for credits."
  "Compatibility procedure. Please see 'gegl:antialias' for credits."
  "2013"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
  )
  (
  )
)
(register-procedure "gimp-heal-default"
  "Heal from the source to the dest drawable using the current brush"
  "This tool heals from the source drawable starting at the specified source coordinates to the dest drawable. This function performs exactly the same as the 'gimp-heal' function except that the tools arguments are obtained from the healing option dialog. It this dialog has not been activated then the dialogs default values will be used."
  "Kevin Sookocheff"
  "Kevin Sookocheff"
  "2006"
  "Internal GIMP procedure"
  (
    (
      "drawable"
      "GimpDrawable"
      "The affected drawable"
    )
    (
      "num-strokes"
      "gint"
      "Number of stroke control points (count each coordinate as 2 points) (num-strokes >= 2)"
    )
    (
      "strokes"
      "GimpFloatArray"
      "Array of stroke coordinates: @{ s1.x, s1.y, s2.x, s2.y, ..., sn.x, sn.y @}"
    )
  )
  (
  )
)
(register-procedure "file-pat-save-internal"
  "Exports Gimp pattern file (.PAT)"
  "Exports Gimp pattern file (.PAT)"
  "Tim Newsome, Michael Natterer"
  "Tim Newsome, Michael Natterer"
  "1995-2019"
  "Internal GIMP procedure"
  (
    (
      "dummy-param"
      "GimpRunMode"
      "Dummy parameter @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image"
    )
    (
      "n-drawables"
      "gint"
      "Number of drawables (n-drawables >= 1)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "Selected drawables"
    )
    (
      "file"
      "GFile"
      "The file to export"
    )
    (
      "name"
      "gchararray"
      "The name of the pattern"
    )
  )
  (
  )
)
(register-procedure "gimp-image-get-guide-position"
  "Get position of a guide on an image."
  "This procedure takes an image and a guide ID as input and returns the position of the guide relative to the top or left of the image."
  "Adam D. Moss"
  "Adam D. Moss"
  "1998"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "guide"
      "guint"
      "The guide"
    )
  )
  (
    (
      "position"
      "gint"
      "The guide's position relative to top or left of image"
    )
  )
)
(register-procedure "file-jpeg-save"
  "Saves files in the JPEG file format"
  "Saves files in the lossy, widely supported JPEG format"
  "Spencer Kimball, Peter Mattis & others"
  "Spencer Kimball & Peter Mattis"
  "1995-2007"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The image to save"
    )
    (
      "num-drawables"
      "gint"
      "Number of drawables to be saved (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The drawables to save"
    )
    (
      "file"
      "GFile"
      "The file to save to"
    )
    (
      "quality"
      "gdouble"
      "Quality of exported image (0 <= quality <= 1)"
    )
    (
      "smoothing"
      "gdouble"
      "Smoothing factor for exported image (0 <= smoothing <= 1)"
    )
    (
      "optimize"
      "gboolean"
      "Use optimized tables during Huffman coding (TRUE or FALSE)"
    )
    (
      "progressive"
      "gboolean"
      "Create progressive JPEG images (TRUE or FALSE)"
    )
    (
      "cmyk"
      "gboolean"
      "Create a CMYK JPEG image using the soft-proofing color profile (TRUE or FALSE)"
    )
    (
      "sub-sampling"
      "gint"
      "Sub-sampling type @{ 0 == 4:2:0 (chroma quartered), 1 == 4:2:2 Horizontal (chroma halved), 2 == 4:4:4 (best quality), 3 == 4:2:2 Vertical (chroma halved) (0 <= sub-sampling <= 3)"
    )
    (
      "baseline"
      "gboolean"
      "Force creation of a baseline JPEG (non-baseline JPEGs can't be read by all decoders) (TRUE or FALSE)"
    )
    (
      "restart"
      "gint"
      "Interval of restart markers (in MCU rows, 0 = no restart markers) (0 <= restart <= 64)"
    )
    (
      "dct"
      "gint"
      "DCT method to use @{ INTEGER (0), FIXED (1), FLOAT (2) @} (0 <= dct <= 2)"
    )
  )
  (
  )
)
(register-procedure "gimp-text-layer-get-language"
  "Get the language used in the text layer."
  "This procedure returns the language string which is set for the text in the text layer."
  "Marcus Heese <heese@@cip.ifi.lmu.de>"
  "Marcus Heese"
  "2008"
  "Internal GIMP procedure"
  (
    (
      "layer"
      "GimpLayer"
      "The text layer."
    )
  )
  (
    (
      "language"
      "gchararray"
      "The language used in the text layer."
    )
  )
)
(register-procedure "gimp-detach-parasite"
  "Removes a global parasite."
  "This procedure detaches a global parasite from. It has no return values."
  "Jay Cox"
  "Jay Cox"
  "1998"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The name of the parasite to detach."
    )
  )
  (
  )
)
(register-procedure "gimp-gradient-duplicate"
  "Duplicates a gradient"
  "This procedure creates an identical gradient by a different name"
  "Shlomi Fish <shlomif@@iglu.org.il>"
  "Shlomi Fish"
  "2003"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The gradient name"
    )
  )
  (
    (
      "copy-name"
      "gchararray"
      "The name of the gradient's copy"
    )
  )
)
(register-procedure "plug-in-animationoptimize-diff"
  "Reduce file size where combining layers is possible"
  "This procedure applies various optimizations to a GIMP layer-based animation in an attempt to reduce the final file size.  If a frame of the animation can use the 'combine' mode, this procedure uses a simple difference between the frames."
  "Adam D. Moss <adam@@gimp.org>"
  "Adam D. Moss <adam@@gimp.org>"
  "1997-2003"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The input image"
    )
    (
      "num-drawables"
      "gint"
      "Number of input drawables (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The input drawables"
    )
  )
  (
    (
      "result"
      "GimpImage"
      "Resultimg image"
    )
  )
)
(register-procedure "file-gz-save"
  "saves files compressed with gzip"
  "This procedure saves files in the gzip compressed format."
  "Daniel Risacher"
  "Daniel Risacher, Spencer Kimball and Peter Mattis"
  "1995-1997"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The image to save"
    )
    (
      "num-drawables"
      "gint"
      "Number of drawables to be saved (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The drawables to save"
    )
    (
      "file"
      "GFile"
      "The file to save to"
    )
  )
  (
  )
)
(register-procedure "file-pix-save"
  "Export file in the Alias|Wavefront pix/matte file format"
  "Export file in the Alias|Wavefront pix/matte file format"
  "Michael Taylor"
  "Michael Taylor"
  "1997"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The image to save"
    )
    (
      "num-drawables"
      "gint"
      "Number of drawables to be saved (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The drawables to save"
    )
    (
      "file"
      "GFile"
      "The file to save to"
    )
  )
  (
  )
)
(register-procedure "plug-in-tile"
  "Create an array of copies of the image"
  "This function creates a new image with a single layer sized to the specified 'new_width' and 'new_height' parameters. The specified drawable is tiled into this layer.  The new layer will have the same type as the specified drawable and the new image will have a corresponding base type."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1996-1997"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The input image"
    )
    (
      "num-drawables"
      "gint"
      "Number of input drawables (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The input drawables"
    )
    (
      "new-width"
      "gint"
      "New (tiled) image width (1 <= new-width <= 524288)"
    )
    (
      "new-height"
      "gint"
      "New (tiled) image height (1 <= new-height <= 524288)"
    )
    (
      "new-image"
      "gboolean"
      "Create a new image (TRUE or FALSE)"
    )
  )
  (
    (
      "new-image"
      "GimpImage"
      "Output image (NULL if new-image == FALSE)"
    )
    (
      "new-layer"
      "GimpLayer"
      "Output layer (NULL if new-image == FALSE)"
    )
  )
)
(register-procedure "gimp-selection-all"
  "Select all of the image."
  "This procedure sets the selection mask to completely encompass the image. Every pixel in the selection channel is set to 255."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
  )
  (
  )
)
(register-procedure "gimp-fonts-close-popup"
  "Close the font selection dialog."
  "This procedure closes an opened font selection dialog."
  "Sven Neumann <sven@@gimp.org>"
  "Sven Neumann"
  "2003"
  "Internal GIMP procedure"
  (
    (
      "font-callback"
      "gchararray"
      "The name of the callback registered for this pop-up"
    )
  )
  (
  )
)
(register-procedure "gimp-layer-set-lock-alpha"
  "Set the lock alpha channel setting of the specified layer."
  "This procedure sets the specified layer's lock alpha channel setting."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "layer"
      "GimpLayer"
      "The layer"
    )
    (
      "lock-alpha"
      "gboolean"
      "The new layer's lock alpha channel setting (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "gimp-layer-from-mask"
  "Get the specified mask's layer."
  "This procedure returns the specified mask's layer , or -1 if none exists."
  "Geert Jordaens"
  "Geert Jordaens"
  "2004"
  "Internal GIMP procedure"
  (
    (
      "mask"
      "GimpLayerMask"
      "Mask for which to return the layer"
    )
  )
  (
    (
      "layer"
      "GimpLayer"
      "The mask's layer"
    )
  )
)
(register-procedure "gimp-image-find-next-guide"
  "Find next guide on an image."
  "This procedure takes an image and a guide ID as input and finds the guide ID of the successor of the given guide ID in the image's guide list. If the supplied guide ID is 0, the procedure will return the first Guide. The procedure will return 0 if given the final guide ID as an argument or the image has no guides."
  "Adam D. Moss"
  "Adam D. Moss"
  "1998"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "guide"
      "guint"
      "The ID of the current guide (0 if first invocation)"
    )
  )
  (
    (
      "next-guide"
      "guint"
      "The next guide's ID"
    )
  )
)
(register-procedure "plug-in-oilify-enhanced"
  "Smear colors to simulate an oil painting"
  "This function performs the well-known oil-paint effect on the specified drawable."
  "Compatibility procedure. Please see 'gegl:oilify' for credits."
  "Compatibility procedure. Please see 'gegl:oilify' for credits."
  "2019"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
    (
      "mode"
      "gint"
      "Algorithm @{ RGB (0), INTENSITY (1) @} (0 <= mode <= 1)"
    )
    (
      "mask-size"
      "gint"
      "Oil paint mask size (1 <= mask-size <= 200)"
    )
    (
      "mask-size-map"
      "GimpDrawable"
      "Mask size control map"
    )
    (
      "exponent"
      "gint"
      "Oil paint exponent (1 <= exponent <= 20)"
    )
    (
      "exponent-map"
      "GimpDrawable"
      "Exponent control map"
    )
  )
  (
  )
)
(register-procedure "plug-in-goat-exercise-c"
  "Exercise a goat in the C language"
  "Takes a goat for a walk"
  "Øyvind Kolås <pippin@@gimp.org>"
  "Øyvind Kolås <pippin@@gimp.org>"
  "21 march 2012"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The input image"
    )
    (
      "num-drawables"
      "gint"
      "Number of input drawables (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The input drawables"
    )
  )
  (
  )
)
(register-procedure "gimp-plug-ins-query"
  "Queries the plug-in database for its contents."
  "This procedure queries the contents of the plug-in database."
  "Andy Thomas"
  "Andy Thomas"
  "1998"
  "Internal GIMP procedure"
  (
    (
      "search-string"
      "gchararray"
      "If not an empty string then use this as a search pattern"
    )
  )
  (
    (
      "procedures"
      "GStrv"
      "The plug-in procedure name"
    )
    (
      "accelerators"
      "GStrv"
      "String representing keyboard accelerator (could be empty string)"
    )
    (
      "locations"
      "GStrv"
      "Location of the plug-in program"
    )
    (
      "num-install-times"
      "gint"
      "The number of matching procedures (num-install-times >= 0)"
    )
    (
      "install-times"
      "GimpInt32Array"
      "Time that the plug-in was installed"
    )
  )
)
(register-procedure "gimp-vectors-stroke-get-points"
  "returns the control points of a stroke."
  "returns the control points of a stroke. The interpretation of the coordinates returned depends on the type of the stroke. For Gimp 2.4 this is always a bezier stroke, where the coordinates are the control points."
  "Simon Budig"
  "Simon Budig"
  "2006"
  "Internal GIMP procedure"
  (
    (
      "vectors"
      "GimpVectors"
      "The vectors object"
    )
    (
      "stroke-id"
      "gint"
      "The stroke ID"
    )
  )
  (
    (
      "type"
      "GimpVectorsStrokeType"
      "type of the stroke (always GIMP_VECTORS_STROKE_TYPE_BEZIER for now). @{ VECTORS-STROKE-TYPE-BEZIER (0) @}"
    )
    (
      "num-points"
      "gint"
      "The number of floats returned. (num-points >= 0)"
    )
    (
      "controlpoints"
      "GimpFloatArray"
      "List of the control points for the stroke (x0, y0, x1, y1, ...)."
    )
    (
      "closed"
      "gboolean"
      "Whether the stroke is closed or not. (TRUE or FALSE)"
    )
  )
)
(register-procedure "gimp-plug-in-domain-register"
  "Registers a textdomain for localisation."
  "This procedure adds a textdomain to the list of domains Gimp searches for strings when translating its menu entries. There is no need to call this function for plug-ins that have their strings included in the 'gimp-std-plugins' domain as that is used by default. If the compiled message catalog is not in the standard location, you may specify an absolute path to another location. This procedure can only be called in the query function of a plug-in and it has to be called before any procedure is installed."
  "Sven Neumann <sven@@gimp.org>"
  "Sven Neumann"
  "2000"
  "Internal GIMP procedure"
  (
    (
      "domain-name"
      "gchararray"
      "The name of the textdomain (must be unique)"
    )
    (
      "domain-file"
      "GFile"
      "The path to the locally installed compiled message catalog (may be NULL)"
    )
  )
  (
  )
)
(register-procedure "file-raw-save"
  "Dump images to disk in raw format"
  "Dump images to disk in raw format"
  "Björn Kautler, Bjoern@@Kautler.net"
  "Björn Kautler, Bjoern@@Kautler.net"
  "April 2014"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The image to save"
    )
    (
      "num-drawables"
      "gint"
      "Number of drawables to be saved (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The drawables to save"
    )
    (
      "file"
      "GFile"
      "The file to save to"
    )
    (
      "image-type"
      "gint"
      "The image type @{ RAW_RGB (0), RAW_PLANAR (6) @} (0 <= image-type <= 6)"
    )
    (
      "palette-type"
      "gint"
      "The palette type @{ RAW_PALETTE_RGB (0), RAW_PALETTE_BGR (1) @} (0 <= palette-type <= 1)"
    )
  )
  (
  )
)
(register-procedure "gimp-item-detach-parasite"
  "Removes a parasite from an item."
  "This procedure detaches a parasite from an item. It has no return values."
  "Jay Cox"
  "Jay Cox"
  "1998"
  "Internal GIMP procedure"
  (
    (
      "item"
      "GimpItem"
      "The item"
    )
    (
      "name"
      "gchararray"
      "The name of the parasite to detach from the item."
    )
  )
  (
  )
)
(register-procedure "gimp-unit-get-identifier"
  "Returns the textual identifier of the unit."
  "This procedure returns the textual identifier of the unit. For built-in units it will be the english singular form of the unit's name. For user-defined units this should equal to the singular form."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "1999"
  "Internal GIMP procedure"
  (
    (
      "unit-id"
      "GimpUnit"
      "The unit's integer ID"
    )
  )
  (
    (
      "identifier"
      "gchararray"
      "The unit's textual identifier"
    )
  )
)
(register-procedure "gimp-brushes-set-popup"
  "Sets the current brush in a brush selection dialog."
  "Sets the current brush in a brush selection dialog."
  "Andy Thomas"
  "Andy Thomas"
  "1998"
  "Internal GIMP procedure"
  (
    (
      "brush-callback"
      "gchararray"
      "The name of the callback registered for this pop-up"
    )
    (
      "brush-name"
      "gchararray"
      "The name of the brush to set as selected"
    )
    (
      "opacity"
      "gdouble"
      "The initial opacity of the brush (0 <= opacity <= 100)"
    )
    (
      "spacing"
      "gint"
      "The initial spacing of the brush (if < 0 then use brush default spacing) (spacing <= 1000)"
    )
    (
      "paint-mode"
      "GimpLayerMode"
      "The initial paint mode @{ LAYER-MODE-NORMAL-LEGACY (0), LAYER-MODE-DISSOLVE (1), LAYER-MODE-BEHIND-LEGACY (2), LAYER-MODE-MULTIPLY-LEGACY (3), LAYER-MODE-SCREEN-LEGACY (4), LAYER-MODE-OVERLAY-LEGACY (5), LAYER-MODE-DIFFERENCE-LEGACY (6), LAYER-MODE-ADDITION-LEGACY (7), LAYER-MODE-SUBTRACT-LEGACY (8), LAYER-MODE-DARKEN-ONLY-LEGACY (9), LAYER-MODE-LIGHTEN-ONLY-LEGACY (10), LAYER-MODE-HSV-HUE-LEGACY (11), LAYER-MODE-HSV-SATURATION-LEGACY (12), LAYER-MODE-HSL-COLOR-LEGACY (13), LAYER-MODE-HSV-VALUE-LEGACY (14), LAYER-MODE-DIVIDE-LEGACY (15), LAYER-MODE-DODGE-LEGACY (16), LAYER-MODE-BURN-LEGACY (17), LAYER-MODE-HARDLIGHT-LEGACY (18), LAYER-MODE-SOFTLIGHT-LEGACY (19), LAYER-MODE-GRAIN-EXTRACT-LEGACY (20), LAYER-MODE-GRAIN-MERGE-LEGACY (21), LAYER-MODE-COLOR-ERASE-LEGACY (22), LAYER-MODE-OVERLAY (23), LAYER-MODE-LCH-HUE (24), LAYER-MODE-LCH-CHROMA (25), LAYER-MODE-LCH-COLOR (26), LAYER-MODE-LCH-LIGHTNESS (27), LAYER-MODE-NORMAL (28), LAYER-MODE-BEHIND (29), LAYER-MODE-MULTIPLY (30), LAYER-MODE-SCREEN (31), LAYER-MODE-DIFFERENCE (32), LAYER-MODE-ADDITION (33), LAYER-MODE-SUBTRACT (34), LAYER-MODE-DARKEN-ONLY (35), LAYER-MODE-LIGHTEN-ONLY (36), LAYER-MODE-HSV-HUE (37), LAYER-MODE-HSV-SATURATION (38), LAYER-MODE-HSL-COLOR (39), LAYER-MODE-HSV-VALUE (40), LAYER-MODE-DIVIDE (41), LAYER-MODE-DODGE (42), LAYER-MODE-BURN (43), LAYER-MODE-HARDLIGHT (44), LAYER-MODE-SOFTLIGHT (45), LAYER-MODE-GRAIN-EXTRACT (46), LAYER-MODE-GRAIN-MERGE (47), LAYER-MODE-VIVID-LIGHT (48), LAYER-MODE-PIN-LIGHT (49), LAYER-MODE-LINEAR-LIGHT (50), LAYER-MODE-HARD-MIX (51), LAYER-MODE-EXCLUSION (52), LAYER-MODE-LINEAR-BURN (53), LAYER-MODE-LUMA-DARKEN-ONLY (54), LAYER-MODE-LUMA-LIGHTEN-ONLY (55), LAYER-MODE-LUMINANCE (56), LAYER-MODE-COLOR-ERASE (57), LAYER-MODE-ERASE (58), LAYER-MODE-MERGE (59), LAYER-MODE-SPLIT (60), LAYER-MODE-PASS-THROUGH (61), LAYER-MODE-REPLACE (62), LAYER-MODE-ANTI-ERASE (63) @}"
    )
  )
  (
  )
)
(register-procedure "file-raw-placeholder-panasonic-load"
  "Load files in the Panasonic raw formats via placeholder"
  "This plug-in loads files in Panasonic's raw formats by calling placeholder."
  "Tobias Ellinghaus"
  "Tobias Ellinghaus"
  "2016"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "file"
      "GFile"
      "The file to load"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "Output image"
    )
  )
)
(register-procedure "gimp-layer-group-new"
  "Create a new layer group."
  "This procedure creates a new layer group. Attributes such as layer mode and opacity should be set with explicit procedure calls. Add the new layer group (which is a kind of layer) with the 'gimp-image-insert-layer' command.
Other procedures useful with layer groups: 'gimp-image-reorder-item', 'gimp-item-get-parent', 'gimp-item-get-children', 'gimp-item-is-group'."
  "Barak Itkin <lightningismyname@@gmail.com>"
  "Barak Itkin"
  "2010"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image to which to add the layer group"
    )
  )
  (
    (
      "layer-group"
      "GimpLayer"
      "The newly created layer group"
    )
  )
)
(register-procedure "gimp-brushes-get-list"
  "Retrieve a complete listing of the available brushes."
  "This procedure returns a complete listing of available GIMP brushes. Each name returned can be used as input to the 'gimp-context-set-brush' procedure."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "filter"
      "gchararray"
      "An optional regular expression used to filter the list"
    )
  )
  (
    (
      "brush-list"
      "GStrv"
      "The list of brush names"
    )
  )
)
(register-procedure "gimp-context-set-brush-aspect-ratio"
  "Set brush aspect ratio."
  "Set the aspect ratio for brush based paint tools."
  "Ed Swartz"
  "Ed Swartz"
  "2012"
  "Internal GIMP procedure"
  (
    (
      "aspect"
      "gdouble"
      "Aspect ratio (-20 <= aspect <= 20)"
    )
  )
  (
  )
)
(register-procedure "file-psp-load"
  "Loads images from the Paint Shop Pro PSP file format"
  "This plug-in loads and exports images in Paint Shop Pro's native PSP format. Vector layers aren't handled. Exporting isn't yet implemented."
  "Tor Lillqvist"
  "Tor Lillqvist"
  "1999"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "file"
      "GFile"
      "The file to load"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "Output image"
    )
  )
)
(register-procedure "script-fu-ripply-anim"
  "Create a multi-layer image by adding a ripple effect to the current layer"
  ""
  "Adam D. Moss (adam@@foxbox.org), Saul Goode"
  "Adam D. Moss, Saul Goode"
  "1997, 2015"
  "Temporary Procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Image to animage"
    )
    (
      "drawable"
      "GimpDrawable"
      "Drawable to animate"
    )
    (
      "adjustment"
      "gdouble"
      "Rippling strength"
    )
    (
      "adjustment-2"
      "gdouble"
      "Number of frames"
    )
    (
      "option"
      "gint"
      "Edge behavior"
    )
  )
  (
  )
)
(register-procedure "gimp-context-get-line-cap-style"
  "Get the line cap style setting."
  "This procedure returns the line cap style setting."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2015"
  "Internal GIMP procedure"
  (
  )
  (
    (
      "cap-style"
      "GimpCapStyle"
      "The line cap style setting @{ CAP-BUTT (0), CAP-ROUND (1), CAP-SQUARE (2) @}"
    )
  )
)
(register-procedure "gimp-edit-named-paste-as-new-image"
  "Paste named buffer to a new image."
  "This procedure works like 'gimp-edit-paste-as-new-image' but pastes a named buffer instead of the global buffer."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2005"
  "Internal GIMP procedure"
  (
    (
      "buffer-name"
      "gchararray"
      "The name of the buffer to paste"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "The new image"
    )
  )
)
(register-procedure "file-psd-load-merged"
  "Loads images from the Photoshop PSD and PSB file formats"
  "This plug-in loads the merged image data in Adobe Photoshop (TM) native PSD and PSB format."
  "Ell"
  "Ell"
  "2018"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "file"
      "GFile"
      "The file to load"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "Output image"
    )
  )
)
(register-procedure "gimp-image-grid-get-foreground-color"
  "Sets the foreground color of an image's grid."
  "This procedure gets the foreground color of an image's grid."
  "Sylvain Foret"
  "Sylvain Foret"
  "2005"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
  )
  (
    (
      "fgcolor"
      "GimpRGB"
      "The image's grid foreground color"
    )
  )
)
(register-procedure "gimp-unit-get-deletion-flag"
  "Returns the deletion flag of the unit."
  "This procedure returns the deletion flag of the unit. If this value is TRUE the unit's definition will not be saved in the user's unitrc file on gimp exit."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "1999"
  "Internal GIMP procedure"
  (
    (
      "unit-id"
      "GimpUnit"
      "The unit's integer ID"
    )
  )
  (
    (
      "deletion-flag"
      "gboolean"
      "The unit's deletion flag (TRUE or FALSE)"
    )
  )
)
(register-procedure "plug-in-palettemap"
  "Recolor the image using colors from the active palette"
  "This plug-in maps the contents of the specified drawable with the active palette. It calculates luminosity of each pixel and replaces the pixel by the palette sample at the corresponding index. A complete black pixel becomes the lowest palette entry, and complete white becomes the highest. Works on both Grayscale and RGB image with/without alpha channel."
  "Bill Skaggs"
  "Bill Skaggs"
  "2004"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The input image"
    )
    (
      "num-drawables"
      "gint"
      "Number of input drawables (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The input drawables"
    )
  )
  (
  )
)
(register-procedure "plug-in-laplace"
  "High-resolution edge detection"
  "This plug-in creates one-pixel wide edges from the image, with the value proportional to the gradient. It uses the Laplace operator (a 3x3 kernel with -8 in the middle). The image has to be laplacered to get useful results, a gauss_iir with 1.5 - 5.0 depending on the noise in the image is best."
  "Compatibility procedure. Please see 'gegl:edge-laplace' for credits."
  "Compatibility procedure. Please see 'gegl:edge-laplace' for credits."
  "2013"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
  )
  (
  )
)
(register-procedure "gimp-context-set-brush-default-hardness"
  "Set brush spacing to its default."
  "Set the brush spacing to the default for paintbrush, airbrush, or pencil tools."
  "Alexia Death"
  "Alexia Death"
  "2014"
  "Internal GIMP procedure"
  (
  )
  (
  )
)
(register-procedure "gimp-palette-entry-set-name"
  "Sets the specified palette entry in the specified palette."
  "This procedure sets the name of the zero-based entry specified for the specified palette. It returns an error if the entry does not exist."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2004"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The palette name"
    )
    (
      "entry-num"
      "gint"
      "The entry to retrieve"
    )
    (
      "entry-name"
      "gchararray"
      "The new name"
    )
  )
  (
  )
)
(register-procedure "plug-in-polar-coords"
  "Convert image to or from polar coordinates"
  "Remaps and image from rectangular coordinates to polar coordinates or vice versa."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1997"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
    (
      "circle"
      "gdouble"
      "Circle depth in % (0 <= circle <= 100)"
    )
    (
      "angle"
      "gdouble"
      "Offset angle (0 <= angle <= 360)"
    )
    (
      "backwards"
      "gboolean"
      "Map backwards (TRUE or FALSE)"
    )
    (
      "inverse"
      "gboolean"
      "Map from top (TRUE or FALSE)"
    )
    (
      "polrec"
      "gboolean"
      "Polar to rectangular (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "file-bz2-save"
  "saves files compressed with bzip2"
  "This procedure saves files in the bzip2 compressed format."
  "Daniel Risacher"
  "Daniel Risacher, Spencer Kimball and Peter Mattis"
  "1995-1997"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The image to save"
    )
    (
      "num-drawables"
      "gint"
      "Number of drawables to be saved (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The drawables to save"
    )
    (
      "file"
      "GFile"
      "The file to save to"
    )
  )
  (
  )
)
(register-procedure "plug-in-glasstile"
  "Simulate distortion caused by square glass tiles"
  "Divide the image into square glassblocks in which the image is refracted."
  "Compatibility procedure. Please see 'gegl:tile-glass' for credits."
  "Compatibility procedure. Please see 'gegl:tile-glass' for credits."
  "2014"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
    (
      "tilex"
      "gint"
      "Tile width (10 <= tilex <= 500)"
    )
    (
      "tiley"
      "gint"
      "Tile height (10 <= tiley <= 500)"
    )
  )
  (
  )
)
(register-procedure "gimp-channel-copy"
  "Copy a channel."
  "This procedure copies the specified channel and returns the copy.
The new channel still needs to be added to the image, as this is not automatic. Add the new channel with 'gimp-image-insert-channel'."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "channel"
      "GimpChannel"
      "The channel to copy"
    )
  )
  (
    (
      "channel-copy"
      "GimpChannel"
      "The newly copied channel"
    )
  )
)
(register-procedure "file-raw-placeholder-sinar-load"
  "Load files in the Sinar raw formats via placeholder"
  "This plug-in loads files in Sinar's raw formats by calling placeholder."
  "Tobias Ellinghaus"
  "Tobias Ellinghaus"
  "2016"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "file"
      "GFile"
      "The file to load"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "Output image"
    )
  )
)
(register-procedure "gimp-item-get-parent"
  "Returns the item's parent item."
  "This procedure returns the item's parent item, if any."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2010"
  "Internal GIMP procedure"
  (
    (
      "item"
      "GimpItem"
      "The item"
    )
  )
  (
    (
      "parent"
      "GimpItem"
      "The item's parent item"
    )
  )
)
(register-procedure "gimp-image-thaw-vectors"
  "Thaw the image's vectors list."
  "This procedure thaws the vectors list of the image, re-enabling updates to the Paths dialog.

This procedure should match a corresponding call to 'gimp-image-freeze-vectors'."
  "Ell"
  "Ell"
  "2018"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
  )
  (
  )
)
(register-procedure "file-fits-save"
  "Export file in the FITS file format"
  "FITS exporting handles all image types except those with alpha channels."
  "Peter Kirchgessner"
  "Peter Kirchgessner (peter@@kirchgessner.net)"
  "1997"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The image to save"
    )
    (
      "num-drawables"
      "gint"
      "Number of drawables to be saved (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The drawables to save"
    )
    (
      "file"
      "GFile"
      "The file to save to"
    )
  )
  (
  )
)
(register-procedure "gimp-vectors-stroke-scale"
  "scales the given stroke."
  "Scale the given stroke."
  "Simon Budig"
  "Simon Budig"
  "2005"
  "Internal GIMP procedure"
  (
    (
      "vectors"
      "GimpVectors"
      "The vectors object"
    )
    (
      "stroke-id"
      "gint"
      "The stroke ID"
    )
    (
      "scale-x"
      "gdouble"
      "Scale factor in x direction"
    )
    (
      "scale-y"
      "gdouble"
      "Scale factor in y direction"
    )
  )
  (
  )
)
(register-procedure "gimp-context-set-paint-mode"
  "Set the paint mode."
  "This procedure modifies the paint_mode setting."
  "Michael Natterer <mitch@@gimp.org> & Sven Neumann <sven@@gimp.org>"
  "Michael Natterer & Sven Neumann"
  "2004"
  "Internal GIMP procedure"
  (
    (
      "paint-mode"
      "GimpLayerMode"
      "The paint mode @{ LAYER-MODE-NORMAL-LEGACY (0), LAYER-MODE-DISSOLVE (1), LAYER-MODE-BEHIND-LEGACY (2), LAYER-MODE-MULTIPLY-LEGACY (3), LAYER-MODE-SCREEN-LEGACY (4), LAYER-MODE-OVERLAY-LEGACY (5), LAYER-MODE-DIFFERENCE-LEGACY (6), LAYER-MODE-ADDITION-LEGACY (7), LAYER-MODE-SUBTRACT-LEGACY (8), LAYER-MODE-DARKEN-ONLY-LEGACY (9), LAYER-MODE-LIGHTEN-ONLY-LEGACY (10), LAYER-MODE-HSV-HUE-LEGACY (11), LAYER-MODE-HSV-SATURATION-LEGACY (12), LAYER-MODE-HSL-COLOR-LEGACY (13), LAYER-MODE-HSV-VALUE-LEGACY (14), LAYER-MODE-DIVIDE-LEGACY (15), LAYER-MODE-DODGE-LEGACY (16), LAYER-MODE-BURN-LEGACY (17), LAYER-MODE-HARDLIGHT-LEGACY (18), LAYER-MODE-SOFTLIGHT-LEGACY (19), LAYER-MODE-GRAIN-EXTRACT-LEGACY (20), LAYER-MODE-GRAIN-MERGE-LEGACY (21), LAYER-MODE-COLOR-ERASE-LEGACY (22), LAYER-MODE-OVERLAY (23), LAYER-MODE-LCH-HUE (24), LAYER-MODE-LCH-CHROMA (25), LAYER-MODE-LCH-COLOR (26), LAYER-MODE-LCH-LIGHTNESS (27), LAYER-MODE-NORMAL (28), LAYER-MODE-BEHIND (29), LAYER-MODE-MULTIPLY (30), LAYER-MODE-SCREEN (31), LAYER-MODE-DIFFERENCE (32), LAYER-MODE-ADDITION (33), LAYER-MODE-SUBTRACT (34), LAYER-MODE-DARKEN-ONLY (35), LAYER-MODE-LIGHTEN-ONLY (36), LAYER-MODE-HSV-HUE (37), LAYER-MODE-HSV-SATURATION (38), LAYER-MODE-HSL-COLOR (39), LAYER-MODE-HSV-VALUE (40), LAYER-MODE-DIVIDE (41), LAYER-MODE-DODGE (42), LAYER-MODE-BURN (43), LAYER-MODE-HARDLIGHT (44), LAYER-MODE-SOFTLIGHT (45), LAYER-MODE-GRAIN-EXTRACT (46), LAYER-MODE-GRAIN-MERGE (47), LAYER-MODE-VIVID-LIGHT (48), LAYER-MODE-PIN-LIGHT (49), LAYER-MODE-LINEAR-LIGHT (50), LAYER-MODE-HARD-MIX (51), LAYER-MODE-EXCLUSION (52), LAYER-MODE-LINEAR-BURN (53), LAYER-MODE-LUMA-DARKEN-ONLY (54), LAYER-MODE-LUMA-LIGHTEN-ONLY (55), LAYER-MODE-LUMINANCE (56), LAYER-MODE-COLOR-ERASE (57), LAYER-MODE-ERASE (58), LAYER-MODE-MERGE (59), LAYER-MODE-SPLIT (60), LAYER-MODE-PASS-THROUGH (61), LAYER-MODE-REPLACE (62), LAYER-MODE-ANTI-ERASE (63) @}"
    )
  )
  (
  )
)
(register-procedure "file-print-gtk"
  "Print the image"
  "Print the image using the GTK+ Print API."
  "Bill Skaggs, Sven Neumann, Stefan Röllin"
  "Bill Skaggs <weskaggs@@primate.ucdavis.edu>"
  "2006 - 2008"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The input image"
    )
    (
      "num-drawables"
      "gint"
      "Number of input drawables (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The input drawables"
    )
  )
  (
  )
)
(register-procedure "plug-in-mblur-inward"
  "Simulate movement using directional blur"
  "This procedure is equivalent to plug-in-mblur but performs the zoom blur inward instead of outward."
  "Compatibility procedure. Please see 'gegl:motion-blur-linear, -zoom, -circular' for credits."
  "Compatibility procedure. Please see 'gegl:motion-blur-linear, -zoom, -circular' for credits."
  "2013"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
    (
      "type"
      "gint"
      "Type of motion blur @{ LINEAR (0), RADIAL (1), ZOOM (2) @} (0 <= type <= 2)"
    )
    (
      "length"
      "gdouble"
      "Length"
    )
    (
      "angle"
      "gdouble"
      "Angle (0 <= angle <= 360)"
    )
    (
      "center-x"
      "gdouble"
      "Center X"
    )
    (
      "center-y"
      "gdouble"
      "Center Y"
    )
  )
  (
  )
)
(register-procedure "gimp-floating-sel-attach"
  "Attach the specified layer as floating to the specified drawable."
  "This procedure attaches the layer as floating selection to the drawable."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "layer"
      "GimpLayer"
      "The layer (is attached as floating selection)"
    )
    (
      "drawable"
      "GimpDrawable"
      "The drawable (where to attach the floating selection)"
    )
  )
  (
  )
)
(register-procedure "gimp-brush-get-angle"
  "Gets the rotation angle of a generated brush."
  "This procedure gets the angle of rotation for a generated brush. If called for any other type of brush, it does not succeed."
  "Bill Skaggs <weskaggs@@primate.ucdavis.edu>"
  "Bill Skaggs"
  "2004"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The brush name"
    )
  )
  (
    (
      "angle"
      "gdouble"
      "The rotation angle of the brush in degree."
    )
  )
)
(register-procedure "gimp-image-insert-layer"
  "Add the specified layer to the image."
  "This procedure adds the specified layer to the image at the given position. If the specified parent is a valid layer group (See 'gimp-item-is-group' and 'gimp-layer-group-new') then the layer is added inside the group. If the parent is 0, the layer is added inside the main stack, outside of any group. The position argument specifies the location of the layer inside the stack (or the group, if a valid parent was supplied), starting from the top (0) and increasing. If the position is specified as -1 and the parent is specified as 0, then the layer is inserted above the active layer, or inside the group if the active layer is a layer group. The layer type must be compatible with the image base type."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "layer"
      "GimpLayer"
      "The layer"
    )
    (
      "parent"
      "GimpLayer"
      "The parent layer"
    )
    (
      "position"
      "gint"
      "The layer position"
    )
  )
  (
  )
)
(register-procedure "gimp-text-layer-get-markup"
  "Get the markup from a text layer as string."
  "This procedure returns the markup of the styles from a text layer. The markup will be in the form of Pango's markup - See https://www.pango.org/ for more information about Pango and its markup. Note: Setting the markup of a text layer using Pango's markup is not supported for now."
  "Barak Itkin <lightningismyname@@gmail.com>"
  "Barak Itkin"
  "2010"
  "Internal GIMP procedure"
  (
    (
      "layer"
      "GimpLayer"
      "The text layer"
    )
  )
  (
    (
      "markup"
      "gchararray"
      "The markup which represents the style of the specified text layer."
    )
  )
)
(register-procedure "plug-in-compose"
  "Create an image using multiple gray images as color channels"
  "This function creates a new image from multiple gray images"
  "Peter Kirchgessner"
  "Peter Kirchgessner (peter@@kirchgessner.net)"
  "1997"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The input image"
    )
    (
      "num-drawables"
      "gint"
      "Number of input drawables (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The input drawables"
    )
    (
      "image-2"
      "GimpImage"
      "Second input image"
    )
    (
      "image-3"
      "GimpImage"
      "Third input image"
    )
    (
      "image-4"
      "GimpImage"
      "Fourth input image"
    )
    (
      "compose-type"
      "gchararray"
      "What to compose: \"RGB\", \"RGBA\", \"HSV\", \"HSL\", \"CMYK\", \"LAB\", \"LCH\", \"YCbCr_ITU_R470\", \"YCbCr_ITU_R709\", \"YCbCr_ITU_R470_256\", \"YCbCr_ITU_R709_256\""
    )
  )
  (
    (
      "new-image"
      "GimpImage"
      "Output image"
    )
  )
)
(register-procedure "gimp-context-set-line-cap-style"
  "Set the line cap style setting."
  "This procedure modifies the line cap style setting for stroking lines.

This setting affects the following procedures: 'gimp-drawable-edit-stroke-selection', 'gimp-drawable-edit-stroke-item'."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2015"
  "Internal GIMP procedure"
  (
    (
      "cap-style"
      "GimpCapStyle"
      "The line cap style setting @{ CAP-BUTT (0), CAP-ROUND (1), CAP-SQUARE (2) @}"
    )
  )
  (
  )
)
(register-procedure "gimp-palette-duplicate"
  "Duplicates a palette"
  "This procedure creates an identical palette by a different name"
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2004"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The palette name"
    )
  )
  (
    (
      "copy-name"
      "gchararray"
      "The name of the palette's copy"
    )
  )
)
(register-procedure "gimp-edit-named-paste"
  "Paste named buffer to the specified drawable."
  "This procedure works like 'gimp-edit-paste' but pastes a named buffer instead of the global buffer."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2005"
  "Internal GIMP procedure"
  (
    (
      "drawable"
      "GimpDrawable"
      "The drawable to paste to"
    )
    (
      "buffer-name"
      "gchararray"
      "The name of the buffer to paste"
    )
    (
      "paste-into"
      "gboolean"
      "Clear selection, or paste behind it? (TRUE or FALSE)"
    )
  )
  (
    (
      "floating-sel"
      "GimpLayer"
      "The new floating selection"
    )
  )
)
(register-procedure "gimp-image-select-ellipse"
  "Create an elliptical selection over the specified image."
  "This tool creates an elliptical selection over the specified image. The elliptical region can be either added to, subtracted from, or replace the contents of the previous selection mask.

This procedure is affected by the following context setters: 'gimp-context-set-antialias', 'gimp-context-set-feather', 'gimp-context-set-feather-radius'."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2010"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "operation"
      "GimpChannelOps"
      "The selection operation @{ CHANNEL-OP-ADD (0), CHANNEL-OP-SUBTRACT (1), CHANNEL-OP-REPLACE (2), CHANNEL-OP-INTERSECT (3) @}"
    )
    (
      "x"
      "gdouble"
      "x coordinate of upper-left corner of ellipse bounding box"
    )
    (
      "y"
      "gdouble"
      "y coordinate of upper-left corner of ellipse bounding box"
    )
    (
      "width"
      "gdouble"
      "The width of the ellipse (width >= 0)"
    )
    (
      "height"
      "gdouble"
      "The height of the ellipse (height >= 0)"
    )
  )
  (
  )
)
(register-procedure "file-tiff-save"
  "Exports files in the TIFF or BigTIFF file formats"
  "Exports files in the Tag Image File Format (TIFF) or its 64-bit offsets variant (BigTIFF) able to support much bigger file sizes"
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996,2000-2003"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The image to save"
    )
    (
      "num-drawables"
      "gint"
      "Number of drawables to be saved (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The drawables to save"
    )
    (
      "file"
      "GFile"
      "The file to save to"
    )
    (
      "bigtiff"
      "gboolean"
      "The BigTIFF variant file format uses 64-bit offsets, hence supporting over 4GiB files and bigger (TRUE or FALSE)"
    )
    (
      "compression"
      "gint"
      "Compression type: @{ NONE (0), LZW (1), PACKBITS (2), DEFLATE (3), JPEG (4), CCITT G3 Fax (5), CCITT G4 Fax (6) @} (0 <= compression <= 6)"
    )
    (
      "save-transparent-pixels"
      "gboolean"
      "Keep the color data masked by an alpha channel intact (do not store premultiplied components) (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "gimp-drawable-sub-thumbnail"
  "Get a thumbnail of a sub-area of a drawable drawable."
  "This function gets data from which a thumbnail of a drawable preview can be created. Maximum x or y dimension is 1024 pixels. The pixels are returned in RGB[A] or GRAY[A] format. The bpp return value gives the number of bytes in the image."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2004"
  "Internal GIMP procedure"
  (
    (
      "drawable"
      "GimpDrawable"
      "The drawable"
    )
    (
      "src-x"
      "gint"
      "The x coordinate of the area (src-x >= 0)"
    )
    (
      "src-y"
      "gint"
      "The y coordinate of the area (src-y >= 0)"
    )
    (
      "src-width"
      "gint"
      "The width of the area (src-width >= 1)"
    )
    (
      "src-height"
      "gint"
      "The height of the area (src-height >= 1)"
    )
    (
      "dest-width"
      "gint"
      "The thumbnail width (1 <= dest-width <= 1024)"
    )
    (
      "dest-height"
      "gint"
      "The thumbnail height (1 <= dest-height <= 1024)"
    )
  )
  (
    (
      "width"
      "gint"
      "The previews width"
    )
    (
      "height"
      "gint"
      "The previews height"
    )
    (
      "bpp"
      "gint"
      "The previews bpp"
    )
    (
      "thumbnail-data-count"
      "gint"
      "The number of bytes in thumbnail data (thumbnail-data-count >= 0)"
    )
    (
      "thumbnail-data"
      "GimpUint8Array"
      "The thumbnail data"
    )
  )
)
(register-procedure "gimp-buffer-delete"
  "Deletes a named buffer."
  "This procedure deletes a named buffer."
  "David Gowers <neota@@softhome.net>"
  "David Gowers <neota@@softhome.net>"
  "2005"
  "Internal GIMP procedure"
  (
    (
      "buffer-name"
      "gchararray"
      "The buffer name"
    )
  )
  (
  )
)
(register-procedure "gimp-image-get-component-visible"
  "Returns if the specified image's image component is visible."
  "This procedure returns if the specified image's image component (i.e. Red, Green, Blue intensity channels in an RGB image) is visible or invisible -- whether or not it can be seen. If the specified component is not valid for the image type, an error is returned."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "component"
      "GimpChannelType"
      "The image component @{ CHANNEL-RED (0), CHANNEL-GREEN (1), CHANNEL-BLUE (2), CHANNEL-GRAY (3), CHANNEL-INDEXED (4), CHANNEL-ALPHA (5) @}"
    )
  )
  (
    (
      "visible"
      "gboolean"
      "Component is visible (TRUE or FALSE)"
    )
  )
)
(register-procedure "gimp-context-get-ink-tilt-sensitivity"
  "Get ink tilt sensitivity."
  "Get the ink tilt sensitivity for ink tool."
  "Ed Swartz"
  "Ed Swartz"
  "2012"
  "Internal GIMP procedure"
  (
  )
  (
    (
      "tilt"
      "gdouble"
      "ink tilt sensitivity (0 <= tilt <= 1)"
    )
  )
)
(register-procedure "gimp-item-id-is-selection"
  "Returns whether the item ID is a selection."
  "This procedure returns TRUE if the specified item ID is a selection."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "item-id"
      "gint"
      "The item ID"
    )
  )
  (
    (
      "selection"
      "gboolean"
      "TRUE if the item ID is a selection, FALSE otherwise (TRUE or FALSE)"
    )
  )
)
(register-procedure "gimp-context-set-foreground"
  "Set the current GIMP foreground color."
  "This procedure sets the current GIMP foreground color. After this is set, operations which use foreground such as paint tools, blending, and bucket fill will use the new value."
  "Michael Natterer <mitch@@gimp.org> & Sven Neumann <sven@@gimp.org>"
  "Michael Natterer & Sven Neumann"
  "2004"
  "Internal GIMP procedure"
  (
    (
      "foreground"
      "GimpRGB"
      "The foreground color"
    )
  )
  (
  )
)
(register-procedure "script-fu-sota-chrome-it"
  "Add a chrome effect to the selected region (or alpha) using a specified (grayscale) stencil"
  ""
  "Spencer Kimball"
  "Spencer Kimball"
  "1997"
  "Temporary Procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Chrome image"
    )
    (
      "drawable"
      "GimpDrawable"
      "Chrome mask"
    )
    (
      "adjustment"
      "gdouble"
      "Chrome saturation"
    )
    (
      "adjustment-2"
      "gdouble"
      "Chrome lightness"
    )
    (
      "adjustment-3"
      "gdouble"
      "Chrome factor"
    )
    (
      "filename"
      "gchararray"
      "Environment map"
    )
    (
      "color"
      "GimpRGB"
      "Highlight balance"
    )
    (
      "color-2"
      "GimpRGB"
      "Chrome balance"
    )
    (
      "toggle"
      "gboolean"
      "Chrome white areas (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "gimp-quit"
  "Causes GIMP to exit gracefully."
  "If there are unsaved images in an interactive GIMP session, the user will be asked for confirmation. If force is TRUE, the application is quit without querying the user to save any dirty images."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "force"
      "gboolean"
      "Force GIMP to quit without asking (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "gimp-image-convert-grayscale"
  "Convert specified image to grayscale"
  "This procedure converts the specified image to grayscale. This process requires an image in RGB or Indexed color mode."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
  )
  (
  )
)
(register-procedure "gimp-dodgeburn"
  "Dodgeburn image with varying exposure."
  "Dodgeburn. More details here later."
  "Andy Thomas"
  "Andy Thomas"
  "1999"
  "Internal GIMP procedure"
  (
    (
      "drawable"
      "GimpDrawable"
      "The affected drawable"
    )
    (
      "exposure"
      "gdouble"
      "The exposure of the strokes (0 <= exposure <= 100)"
    )
    (
      "dodgeburn-type"
      "GimpDodgeBurnType"
      "The type either dodge or burn @{ DODGE-BURN-TYPE-DODGE (0), DODGE-BURN-TYPE-BURN (1) @}"
    )
    (
      "dodgeburn-mode"
      "GimpTransferMode"
      "The mode @{ TRANSFER-SHADOWS (0), TRANSFER-MIDTONES (1), TRANSFER-HIGHLIGHTS (2) @}"
    )
    (
      "num-strokes"
      "gint"
      "Number of stroke control points (count each coordinate as 2 points) (num-strokes >= 2)"
    )
    (
      "strokes"
      "GimpFloatArray"
      "Array of stroke coordinates: @{ s1.x, s1.y, s2.x, s2.y, ..., sn.x, sn.y @}"
    )
  )
  (
  )
)
(register-procedure "gimp-context-set-diagonal-neighbors"
  "Set the diagonal neighbors setting."
  "This procedure modifies the diagonal neighbors setting. If the affected region of an operation is based on a seed point, like when doing a seed fill, then, when this setting is TRUE, all eight neighbors of each pixel are considered when calculating the affected region; in contrast, when this setting is FALSE, only the four orthogonal neighbors of each pixel are considered.

This setting affects the following procedures: 'gimp-image-select-contiguous-color', 'gimp-drawable-edit-bucket-fill'."
  "Ell"
  "Ell"
  "2016"
  "Internal GIMP procedure"
  (
    (
      "diagonal-neighbors"
      "gboolean"
      "The diagonal neighbors setting (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "plug-in-shift"
  "Shift each row or column of pixels by a random amount"
  "Shifts the pixels of the specified drawable. Each row or column will be displaced a random value of pixels."
  "Compatibility procedure. Please see 'gegl:shift' for credits."
  "Compatibility procedure. Please see 'gegl:shift' for credits."
  "2013"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
    (
      "shift-amount"
      "gint"
      "Shift amount (0 <= shift-amount <= 200)"
    )
    (
      "orientation"
      "gint"
      "Orientation @{ ORIENTATION-VERTICAL (0), ORIENTATION-HORIZONTAL (1) @} (0 <= orientation <= 1)"
    )
  )
  (
  )
)
(register-procedure "gimp-online-docs-web-site"
  "Bookmark to the GIMP web site"
  ""
  "Roman Joost <romanofski@@gimp.org>"
  "Roman Joost <romanofski@@gimp.org>"
  "2006"
  "Temporary Procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
  )
  (
  )
)
(register-procedure "file-cur-load"
  "Loads files of Windows CUR file format"
  "Loads files of Windows CUR file format"
  "Christian Kreibich <christian@@whoop.org>, Nikc M."
  "Christian Kreibich <christian@@whoop.org>, Nikc M."
  "2002-2022"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "file"
      "GFile"
      "The file to load"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "Output image"
    )
  )
)
(register-procedure "gimp-context-get-sample-threshold-int"
  "Get the sample threshold setting as an integer value."
  "This procedure returns the sample threshold setting as an integer value. See 'gimp-context-get-sample-threshold'."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2011"
  "Internal GIMP procedure"
  (
  )
  (
    (
      "sample-threshold"
      "gint"
      "The sample threshold setting (0 <= sample-threshold <= 255)"
    )
  )
)
(register-procedure "gimp-buffer-get-width"
  "Retrieves the specified buffer's width."
  "This procedure retrieves the specified named buffer's width."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2005"
  "Internal GIMP procedure"
  (
    (
      "buffer-name"
      "gchararray"
      "The buffer name"
    )
  )
  (
    (
      "width"
      "gint"
      "The buffer width"
    )
  )
)
(register-procedure "file-html-table-save"
  "GIMP Table Magic"
  "Allows you to draw an HTML table in GIMP. See help for more info."
  "Daniel Dunbar"
  "Daniel Dunbar"
  "1998"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The image to save"
    )
    (
      "num-drawables"
      "gint"
      "Number of drawables to be saved (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The drawables to save"
    )
    (
      "file"
      "GFile"
      "The file to save to"
    )
  )
  (
  )
)
(register-procedure "gimp-channel-combine-masks"
  "Combine two channel masks."
  "This procedure combines two channel masks. The result is stored in the first channel."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "channel1"
      "GimpChannel"
      "The channel1"
    )
    (
      "channel2"
      "GimpChannel"
      "The channel2"
    )
    (
      "operation"
      "GimpChannelOps"
      "The selection operation @{ CHANNEL-OP-ADD (0), CHANNEL-OP-SUBTRACT (1), CHANNEL-OP-REPLACE (2), CHANNEL-OP-INTERSECT (3) @}"
    )
    (
      "offx"
      "gint"
      "x offset between upper left corner of channels: (second - first)"
    )
    (
      "offy"
      "gint"
      "y offset between upper left corner of channels: (second - first)"
    )
  )
  (
  )
)
(register-procedure "gimp-context-enable-dynamics"
  "Set the specified paint dynamics as the active paint dynamics."
  "This procedure enables the active paint dynamics to be used in all subsequent paint operations."
  "Jehan"
  "Jehan"
  "2022"
  "Internal GIMP procedure"
  (
    (
      "enable"
      "gboolean"
      "Whether to enable or disable dynamics (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "gimp-layer-set-show-mask"
  "Set the show mask setting of the specified layer."
  "This procedure sets the specified layer's show mask setting. This controls whether the layer or its mask is visible. TRUE indicates that the mask should be visible. If there is no layer mask, this function will return an error."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "layer"
      "GimpLayer"
      "The layer"
    )
    (
      "show-mask"
      "gboolean"
      "The new layer's show mask setting (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "file-load-rgbe"
  "Load files in the RGBE file format"
  "This procedure loads images in the RGBE format, using gegl:rgbe-load"
  ""
  ""
  ""
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "file"
      "GFile"
      "The file to load"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "Output image"
    )
  )
)
(register-procedure "gimp-context-are-dynamics-enabled"
  "Inform whether the currently active paint dynamics will be applied to painting."
  "This procedure returns whether the currently active paint dynamics (as returned by 'gimp-context-get-dynamics') is enabled."
  "Jehan"
  "Jehan"
  "2022"
  "Internal GIMP procedure"
  (
  )
  (
    (
      "enabled"
      "gboolean"
      "Whether dynamics enabled or disabled (TRUE or FALSE)"
    )
  )
)
(register-procedure "gimp-item-get-tattoo"
  "Get the tattoo of the specified item."
  "This procedure returns the specified item's tattoo. A tattoo is a unique and permanent identifier attached to a item that can be used to uniquely identify a item within an image even between sessions."
  "Jay Cox"
  "Jay Cox"
  "1998"
  "Internal GIMP procedure"
  (
    (
      "item"
      "GimpItem"
      "The item"
    )
  )
  (
    (
      "tattoo"
      "guint"
      "The item tattoo"
    )
  )
)
(register-procedure "gimp-file-load-thumbnail"
  "Loads the thumbnail for a file."
  "This procedure tries to load a thumbnail that belongs to the given file. The returned data is an array of colordepth 3 (RGB), regardless of the image type. Width and height of the thumbnail are also returned. Don't use this function if you need a thumbnail of an already opened image, use 'gimp-image-thumbnail' instead."
  "Adam D. Moss, Sven Neumann"
  "Adam D. Moss, Sven Neumann"
  "1999-2003"
  "Internal GIMP procedure"
  (
    (
      "file"
      "GFile"
      "The file that owns the thumbnail to load"
    )
  )
  (
    (
      "width"
      "gint"
      "The width of the thumbnail"
    )
    (
      "height"
      "gint"
      "The height of the thumbnail"
    )
    (
      "thumb-data-count"
      "gint"
      "The number of bytes in thumbnail data (thumb-data-count >= 0)"
    )
    (
      "thumb-data"
      "GimpUint8Array"
      "The thumbnail data"
    )
  )
)
(register-procedure "gimp-progress-init"
  "Initializes the progress bar for the current plug-in."
  "Initializes the progress bar for the current plug-in. It is only valid to call this procedure from a plug-in."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "message"
      "gchararray"
      "Message to use in the progress dialog"
    )
    (
      "gdisplay"
      "GimpDisplay"
      "GimpDisplay to update progressbar in, or %NULL for a separate window"
    )
  )
  (
  )
)
(register-procedure "gimp-layer-add-mask"
  "Add a layer mask to the specified layer."
  "This procedure adds a layer mask to the specified layer. Layer masks serve as an additional alpha channel for a layer. This procedure will fail if a number of prerequisites aren't met. The layer cannot already have a layer mask. The specified mask must exist and have the same dimensions as the layer. The layer must have been created for use with the specified image and the mask must have been created with the procedure 'gimp-layer-create-mask'."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "layer"
      "GimpLayer"
      "The layer to receive the mask"
    )
    (
      "mask"
      "GimpLayerMask"
      "The mask to add to the layer"
    )
  )
  (
  )
)
(register-procedure "gimp-gradient-is-editable"
  "Tests if gradient can be edited"
  "Returns TRUE if you have permission to change the gradient"
  "Bill Skaggs <weskaggs@@primate.ucdavis.edu>"
  "Bill Skaggs"
  "2004"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The gradient name"
    )
  )
  (
    (
      "editable"
      "gboolean"
      "TRUE if the gradient can be edited (TRUE or FALSE)"
    )
  )
)
(register-procedure "gimp-pdb-set-proc-menu-label"
  "Set the menu label for a plug-in procedure."
  "This procedure sets the menu label for the given procedure."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2019"
  "Internal GIMP procedure"
  (
    (
      "procedure-name"
      "gchararray"
      "The procedure for which to install the menu path"
    )
    (
      "menu-label"
      "gchararray"
      "The procedure's menu label"
    )
  )
  (
  )
)
(register-procedure "plug-in-dump-pdb-json"
  "blurb"
  "help message"
  "author"
  "copyright"
  "year"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The input image"
    )
    (
      "num-drawables"
      "gint"
      "Number of input drawables (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The input drawables"
    )
  )
  (
  )
)
(register-procedure "gimp-image-get-resolution"
  "Returns the specified image's resolution."
  "This procedure returns the specified image's resolution in dots per inch. This value is independent of any of the layers in this image."
  "Austin Donnelly"
  "Austin Donnelly"
  "1998"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
  )
  (
    (
      "xresolution"
      "gdouble"
      "The resolution in the x-axis, in dots per inch"
    )
    (
      "yresolution"
      "gdouble"
      "The resolution in the y-axis, in dots per inch"
    )
  )
)
(register-procedure "gimp-image-get-sample-point-position"
  "Get position of a sample point on an image."
  "This procedure takes an image and a sample point ID as input and returns the position of the sample point relative to the top and left of the image."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2016"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "sample-point"
      "guint"
      "The guide"
    )
  )
  (
    (
      "position-x"
      "gint"
      "The sample points's position relative to top of image"
    )
    (
      "position-y"
      "gint"
      "The sample points's position relative to top of image"
    )
  )
)
(register-procedure "gimp-image-freeze-vectors"
  "Freeze the image's vectors list."
  "This procedure freezes the vectors list of the image, suppressing any updates to the Paths dialog in response to changes to the image's vectors. This can significantly improve performance while applying changes affecting the vectors list.

Each call to 'gimp-image-freeze-vectors' should be matched by a corresponding call to 'gimp-image-thaw-vectors', undoing its effects."
  "Ell"
  "Ell"
  "2018"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
  )
  (
  )
)
(register-procedure "gimp-channel-set-show-masked"
  "Set the composite method of the specified channel."
  "This procedure sets the specified channel's composite method. If it is TRUE, then the channel is composited with the image so that masked regions are shown. Otherwise, selected regions are shown."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "channel"
      "GimpChannel"
      "The channel"
    )
    (
      "show-masked"
      "gboolean"
      "The new channel composite method (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "gimp-pdb-get-proc-image-types"
  "Queries the procedural database for the image types supported by the specified procedure."
  "This procedure returns the image types supported by the specified procedure."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2019"
  "Internal GIMP procedure"
  (
    (
      "procedure-name"
      "gchararray"
      "The procedure name"
    )
  )
  (
    (
      "image-types"
      "gchararray"
      "The image types"
    )
  )
)
(register-procedure "plug-in-animationunoptimize"
  "Remove optimization to make editing easier"
  "This procedure 'simplifies' a GIMP layer-based animation that has been optimized for animation. This makes editing the animation much easier."
  "Adam D. Moss <adam@@gimp.org>"
  "Adam D. Moss <adam@@gimp.org>"
  "1997-2003"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The input image"
    )
    (
      "num-drawables"
      "gint"
      "Number of input drawables (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The input drawables"
    )
  )
  (
    (
      "result"
      "GimpImage"
      "Resultimg image"
    )
  )
)
(register-procedure "gimp-context-get-feather"
  "Get the feather setting."
  "This procedure returns the feather setting."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2010"
  "Internal GIMP procedure"
  (
  )
  (
    (
      "feather"
      "gboolean"
      "The feather setting (TRUE or FALSE)"
    )
  )
)
(register-procedure "gimp-context-get-line-width"
  "Get the line width setting."
  "This procedure returns the line width setting."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2015"
  "Internal GIMP procedure"
  (
  )
  (
    (
      "line-width"
      "gdouble"
      "The line width setting (0 <= line-width <= 2000)"
    )
  )
)
(register-procedure "plug-in-spheredesigner"
  "Create an image of a textured sphere"
  "This plug-in can be used to create textured and/or bumpmapped spheres, and uses a small lightweight raytracer to perform the task with good quality"
  "Vidar Madsen"
  "Vidar Madsen"
  "1999"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The input image"
    )
    (
      "num-drawables"
      "gint"
      "Number of input drawables (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The input drawables"
    )
  )
  (
  )
)
(register-procedure "gimp-help-using-web"
  "Bookmark to the user manual"
  ""
  "Roman Joost <romanofski@@gimp.org>"
  "Roman Joost <romanofski@@gimp.org>"
  "2006"
  "Temporary Procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
  )
  (
  )
)
(register-procedure "gimp-selection-shrink"
  "Shrink the image's selection"
  "This procedure shrinks the selection. Shrinking involves trimming the existing selection boundary on all sides by the specified number of pixels."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "steps"
      "gint"
      "Steps of shrink (in pixels) (steps >= 0)"
    )
  )
  (
  )
)
(register-procedure "gimp-text-layer-get-letter-spacing"
  "Get the letter spacing used in a text layer."
  "This procedure returns the additional spacing between the single glyphs in a text layer."
  "Marcus Heese <heese@@cip.ifi.lmu.de>"
  "Marcus Heese"
  "2008"
  "Internal GIMP procedure"
  (
    (
      "layer"
      "GimpLayer"
      "The text layer."
    )
  )
  (
    (
      "letter-spacing"
      "gdouble"
      "The letter-spacing value."
    )
  )
)
(register-procedure "gimp-context-set-transform-resize"
  "Set the transform resize type."
  "This procedure modifies the transform resize setting. When transforming pixels, if the result of a transform operation has a different size than the original area, this setting determines how the resulting area is sized.

This setting affects affects the following procedures: 'gimp-item-transform-flip', 'gimp-item-transform-flip-simple', 'gimp-item-transform-perspective', 'gimp-item-transform-rotate', 'gimp-item-transform-rotate-simple', 'gimp-item-transform-scale', 'gimp-item-transform-shear', 'gimp-item-transform-2d', 'gimp-item-transform-matrix'."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2010"
  "Internal GIMP procedure"
  (
    (
      "transform-resize"
      "GimpTransformResize"
      "The transform resize type @{ TRANSFORM-RESIZE-ADJUST (0), TRANSFORM-RESIZE-CLIP (1), TRANSFORM-RESIZE-CROP (2), TRANSFORM-RESIZE-CROP-WITH-ASPECT (3) @}"
    )
  )
  (
  )
)
(register-procedure "plug-in-applylens"
  "Simulate an elliptical lens over the image"
  "This plug-in uses Snell's law to draw an ellipsoid lens over the image."
  "Compatibility procedure. Please see 'gegl:apply-lens' for credits."
  "Compatibility procedure. Please see 'gegl:apply-lens' for credits."
  "2014"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
    (
      "refraction"
      "gdouble"
      "Lens refraction index (1 <= refraction <= 100)"
    )
    (
      "keep-surroundings"
      "gboolean"
      "Keep lens surroundings (TRUE or FALSE)"
    )
    (
      "set-background"
      "gboolean"
      "Set lens surroundings to BG value (TRUE or FALSE)"
    )
    (
      "set-transparent"
      "gboolean"
      "Set lens surroundings transparent (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "script-fu-blend-anim"
  "Create intermediate layers to blend two or more layers over a background as an animation"
  ""
  "Sven Neumann <sven@@gimp.org>"
  "Sven Neumann"
  "1999/12/21"
  "Temporary Procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Image"
    )
    (
      "drawable"
      "GimpDrawable"
      "Drawable"
    )
    (
      "adjustment"
      "gdouble"
      "Intermediate frames"
    )
    (
      "adjustment-2"
      "gdouble"
      "Max. blur radius"
    )
    (
      "toggle"
      "gboolean"
      "Looped (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "gimp-palette-delete-entry"
  "Deletes a palette entry from the specified palette."
  "This procedure deletes an entry from the specified palette. It returns an error if the entry palette does not exist."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2004"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The palette name"
    )
    (
      "entry-num"
      "gint"
      "The index of the added entry"
    )
  )
  (
  )
)
(register-procedure "file-hgt-load"
  "Load HGT data as images"
  "Load Digital Elevation Model data in HGT format from the Shuttle Radar Topography Mission as images. Though the output image will be RGB, all colors are grayscale by default and the contrast will be quite low on most earth relief. Therefore You will likely want to remap elevation to colors as a second step, for instance with the \"Gradient Map\" plug-in."
  ""
  ""
  "2017-12-09"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "file"
      "GFile"
      "The file to load"
    )
    (
      "sample-spacing"
      "gint"
      "The sample spacing of the data. (0: auto-detect, 1: SRTM-1, 2: SRTM-3 data) (0 <= sample-spacing <= 2)"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "Output image"
    )
  )
)
(register-procedure "file-xbm-load"
  "Load a file in X10 or X11 bitmap (XBM) file format"
  "Load a file in X10 or X11 bitmap (XBM) file format. XBM is a lossless format for flat black-and-white (two color indexed) images."
  "Gordon Matzigkeit"
  "Gordon Matzigkeit"
  "1998"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "file"
      "GFile"
      "The file to load"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "Output image"
    )
  )
)
(register-procedure "gimp-image-get-imported-file"
  "Returns the imported file for the specified image."
  "This procedure returns the file associated with the specified image if the image was imported from a non-native Gimp format. If the image was not imported, or has since been saved in the native Gimp format, this procedure returns %NULL."
  "Eric Grivel <gimp@@lumenssolutions.com>"
  "Eric Grivel"
  "2011"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
  )
  (
    (
      "file"
      "GFile"
      "The imported file."
    )
  )
)
(register-procedure "plug-in-gauss-iir"
  "Apply a gaussian blur"
  "Applies a gaussian blur to the drawable, with specified radius of affect. The standard deviation of the normal distribution used to modify pixel values is calculated based on the supplied radius. Horizontal and vertical blurring can be independently invoked by specifying only one to run."
  "Compatibility procedure. Please see 'gegl:gaussian-blur' for credits."
  "Compatibility procedure. Please see 'gegl:gaussian-blur' for credits."
  "2014"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
    (
      "radius"
      "gdouble"
      "Radius of gaussian blur (in pixels (0 <= radius <= 500)"
    )
    (
      "horizontal"
      "gboolean"
      "Blur in horizontal direction (TRUE or FALSE)"
    )
    (
      "vertical"
      "gboolean"
      "Blur in vertical direction (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "gimp-vectors-stroke-get-length"
  "Measure the length of the given stroke."
  "Measure the length of the given stroke."
  "Simon Budig"
  "Simon Budig"
  "2005"
  "Internal GIMP procedure"
  (
    (
      "vectors"
      "GimpVectors"
      "The vectors object"
    )
    (
      "stroke-id"
      "gint"
      "The stroke ID"
    )
    (
      "precision"
      "gdouble"
      "The precision used for approximating straight portions of the stroke (precision >= 0)"
    )
  )
  (
    (
      "length"
      "gdouble"
      "The length (in pixels) of the given stroke."
    )
  )
)
(register-procedure "gimp-image-undo-is-enabled"
  "Check if the image's undo stack is enabled."
  "This procedure checks if the image's undo stack is currently enabled or disabled. This is useful when several plug-ins or scripts call each other and want to check if their caller has already used 'gimp-image-undo-disable' or 'gimp-image-undo-freeze'."
  "Raphaël Quinet <raphael@@gimp.org>"
  "Raphaël Quinet"
  "1999"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
  )
  (
    (
      "enabled"
      "gboolean"
      "TRUE if undo is enabled for this image (TRUE or FALSE)"
    )
  )
)
(register-procedure "plug-in-hsv-noise"
  "Randomize hue, saturation and value independently"
  "Scattering pixel values in HSV space"
  "Compatibility procedure. Please see 'gegl:noise-hsv' for credits."
  "Compatibility procedure. Please see 'gegl:noise-hsv' for credits."
  "2013"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
    (
      "holdness"
      "gint"
      "Convolution strength (1 <= holdness <= 8)"
    )
    (
      "hue-distance"
      "gint"
      "Scattering of hue angle (0 <= hue-distance <= 180)"
    )
    (
      "saturation-distance"
      "gint"
      "Distribution distance on saturation axis (0 <= saturation-distance <= 255)"
    )
    (
      "value-distance"
      "gint"
      "Distribution distance on value axis (0 <= value-distance <= 255)"
    )
  )
  (
  )
)
(register-procedure "gimp-progress-pulse"
  "Pulses the progress bar for the current plug-in."
  "Updates the progress bar for the current plug-in. It is only valid to call this procedure from a plug-in. Use this function instead of 'gimp-progress-update' if you cannot tell how much progress has been made. This usually causes the the progress bar to enter \"activity mode\", where a block bounces back and forth."
  "Sven Neumann <sven@@gimp.org>"
  "Sven Neumann"
  "2005"
  "Internal GIMP procedure"
  (
  )
  (
  )
)
(register-procedure "plug-in-despeckle"
  "Remove speckle noise from the image"
  "This plug-in selectively performs a median or adaptive box filter on an image."
  "Michael Sweet <mike@@easysw.com>"
  "Copyright 1997-1998 by Michael Sweet"
  "May 2010"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The input image"
    )
    (
      "num-drawables"
      "gint"
      "Number of input drawables (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The input drawables"
    )
    (
      "radius"
      "gint"
      "Filter box radius (1 <= radius <= 30)"
    )
    (
      "type"
      "gint"
      "Filter type @{ MEDIAN (0), ADAPTIVE (1), RECURSIVE-MEDIAN (2), RECURSIVE-ADAPTIVE (3) @} (0 <= type <= 3)"
    )
    (
      "black"
      "gint"
      "Black level (-1 <= black <= 255)"
    )
    (
      "white"
      "gint"
      "White level (0 <= white <= 256)"
    )
  )
  (
  )
)
(register-procedure "gimp-context-get-line-dash-offset"
  "Get the line dash offset setting."
  "This procedure returns the line dash offset setting."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2015"
  "Internal GIMP procedure"
  (
  )
  (
    (
      "dash-offset"
      "gdouble"
      "The line dash offset setting (0 <= dash-offset <= 2000)"
    )
  )
)
(register-procedure "gimp-palettes-set-popup"
  "Sets the current palette in a palette selection dialog."
  "Sets the current palette in a palette selection dialog."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2002"
  "Internal GIMP procedure"
  (
    (
      "palette-callback"
      "gchararray"
      "The name of the callback registered for this pop-up"
    )
    (
      "palette-name"
      "gchararray"
      "The name of the palette to set as selected"
    )
  )
  (
  )
)
(register-procedure "gimp-pdb-get-proc-attribution"
  "Queries the procedural database for attribution information on the specified procedure."
  "This procedure returns attribution information on the specified procedure. The authors, copyright information and date are returned."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2019"
  "Internal GIMP procedure"
  (
    (
      "procedure-name"
      "gchararray"
      "The procedure name"
    )
  )
  (
    (
      "authors"
      "gchararray"
      "Authors of the procedure"
    )
    (
      "copyright"
      "gchararray"
      "The copyright"
    )
    (
      "date"
      "gchararray"
      "Copyright date"
    )
  )
)
(register-procedure "script-fu-coffee-stain"
  "Add realistic looking coffee stains to the image"
  ""
  "Chris Gutteridge"
  "1998, Chris Gutteridge / ECS dept, University of Southampton, England."
  "25th April 1998"
  "Temporary Procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "drawable"
      "GimpDrawable"
      "The layer"
    )
    (
      "adjustment"
      "gdouble"
      "Stains"
    )
    (
      "toggle"
      "gboolean"
      "Darken only (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "gimp-vectors-import-from-file"
  "Import paths from an SVG file."
  "This procedure imports paths from an SVG file. SVG elements other than paths and basic shapes are ignored."
  "Simon Budig"
  "Simon Budig"
  "2006"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "file"
      "GFile"
      "The SVG file to import."
    )
    (
      "merge"
      "gboolean"
      "Merge paths into a single vectors object. (TRUE or FALSE)"
    )
    (
      "scale"
      "gboolean"
      "Scale the SVG to image dimensions. (TRUE or FALSE)"
    )
  )
  (
    (
      "num-vectors"
      "gint"
      "The number of newly created vectors (num-vectors >= 0)"
    )
    (
      "vectors"
      "GimpObjectArray"
      "The list of newly created vectors"
    )
  )
)
(register-procedure "plug-in-depth-merge"
  "Combine two images using depth maps (z-buffers)"
  "Taking as input two full-color, full-alpha images and two corresponding grayscale depth maps, this plug-in combines the images based on which is closer (has a lower depth map value) at each point."
  "Sean Cier"
  "Sean Cier"
  "August 1998"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The input image"
    )
    (
      "num-drawables"
      "gint"
      "Number of input drawables (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The input drawables"
    )
    (
      "source-1"
      "GimpDrawable"
      "Source 1"
    )
    (
      "source-2"
      "GimpDrawable"
      "Source 2"
    )
    (
      "depth-map-1"
      "GimpDrawable"
      "Depth map 1"
    )
    (
      "depth-map-2"
      "GimpDrawable"
      "Depth map 2"
    )
    (
      "overlap"
      "gdouble"
      "Overlap (0 <= overlap <= 2)"
    )
    (
      "offset"
      "gdouble"
      "Depth relative offset (-1 <= offset <= 1)"
    )
    (
      "scale-1"
      "gdouble"
      "Depth relative scale 1 (-1 <= scale-1 <= 1)"
    )
    (
      "scale-2"
      "gdouble"
      "Depth relative scale 2 (-1 <= scale-2 <= 1)"
    )
  )
  (
  )
)
(register-procedure "gimp-text-layer-get-base-direction"
  "Get the base direction used for rendering the text layer."
  "This procedure returns the base direction used for rendering the text in the text layer"
  "Marcus Heese <heese@@cip.ifi.lmu.de>"
  "Marcus Heese"
  "2008"
  "Internal GIMP procedure"
  (
    (
      "layer"
      "GimpLayer"
      "The text layer."
    )
  )
  (
    (
      "direction"
      "GimpTextDirection"
      "The based direction used for the text layer. @{ TEXT-DIRECTION-LTR (0), TEXT-DIRECTION-RTL (1), TEXT-DIRECTION-TTB-RTL (2), TEXT-DIRECTION-TTB-RTL-UPRIGHT (3), TEXT-DIRECTION-TTB-LTR (4), TEXT-DIRECTION-TTB-LTR-UPRIGHT (5) @}"
    )
  )
)
(register-procedure "plug-in-plasma"
  "Create a random plasma texture"
  "This plug-in produces plasma fractal images."
  "Compatibility procedure. Please see 'gegl:plasma' for credits."
  "Compatibility procedure. Please see 'gegl:plasma' for credits."
  "2013"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
    (
      "seed"
      "gint"
      "Random seed (seed >= -1)"
    )
    (
      "turbulence"
      "gdouble"
      "The value of the turbulence (0 <= turbulence <= 7)"
    )
  )
  (
  )
)
(register-procedure "gimp-pdb-get-proc-menu-label"
  "Queries the procedural database for the procedure's menu label."
  "This procedure returns the menu label of the specified procedure."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2019"
  "Internal GIMP procedure"
  (
    (
      "procedure-name"
      "gchararray"
      "The procedure name"
    )
  )
  (
    (
      "menu-label"
      "gchararray"
      "The menu_label"
    )
  )
)
(register-procedure "gimp-image-grid-get-spacing"
  "Gets the spacing of an image's grid."
  "This procedure retrieves the horizontal and vertical spacing of an image's grid. It takes the image as parameter."
  "Sylvain Foret"
  "Sylvain Foret"
  "2005"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
  )
  (
    (
      "xspacing"
      "gdouble"
      "The image's grid horizontal spacing"
    )
    (
      "yspacing"
      "gdouble"
      "The image's grid vertical spacing"
    )
  )
)
(register-procedure "gimp-gradient-get-custom-samples"
  "Sample the specified gradient in custom positions."
  "This procedure samples the active gradient in the specified number of points. The procedure will sample the gradient in the specified positions from the list. The left endpoint of the gradient corresponds to position 0.0, and the right endpoint corresponds to 1.0. The procedure returns a list of floating-point values which correspond to the RGBA values for each sample."
  "Federico Mena Quintero"
  "Federico Mena Quintero"
  "1997"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The gradient name"
    )
    (
      "num-samples"
      "gint"
      "The number of samples to take (num-samples >= 1)"
    )
    (
      "positions"
      "GimpFloatArray"
      "The list of positions to sample along the gradient"
    )
    (
      "reverse"
      "gboolean"
      "Use the reverse gradient (TRUE or FALSE)"
    )
  )
  (
    (
      "num-color-samples"
      "gint"
      "Length of the color_samples array (4 * num_samples) (num-color-samples >= 0)"
    )
    (
      "color-samples"
      "GimpFloatArray"
      "Color samples: @{ R1, G1, B1, A1, ..., Rn, Gn, Bn, An @}"
    )
  )
)
(register-procedure "gimp-drawable-mask-intersect"
  "Find the bounding box of the current selection in relation to the specified drawable."
  "This procedure returns whether there is an intersection between the drawable and the selection. Unlike 'gimp-drawable-mask-bounds', the intersection's bounds are returned as x, y, width, height.
If there is no selection this function returns TRUE and the returned bounds are the extents of the whole drawable."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2004"
  "Internal GIMP procedure"
  (
    (
      "drawable"
      "GimpDrawable"
      "The drawable"
    )
  )
  (
    (
      "non-empty"
      "gboolean"
      "TRUE if the returned area is not empty (TRUE or FALSE)"
    )
    (
      "x"
      "gint"
      "x coordinate of the upper left corner of the intersection"
    )
    (
      "y"
      "gint"
      "y coordinate of the upper left corner of the intersection"
    )
    (
      "width"
      "gint"
      "width of the intersection"
    )
    (
      "height"
      "gint"
      "height of the intersection"
    )
  )
)
(register-procedure "file-xmc-save"
  "Exports files of X11 cursor file"
  "This plug-in exports X11 Mouse Cursor (XMC) files"
  "Takeshi Matsuyama <tksmashiw@@gmail.com>"
  "Takeshi Matsuyama"
  "26 May 2009"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The image to save"
    )
    (
      "num-drawables"
      "gint"
      "Number of drawables to be saved (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The drawables to save"
    )
    (
      "file"
      "GFile"
      "The file to save to"
    )
    (
      "hot-spot-x"
      "gint"
      "X-coordinate of hot spot (use -1, -1 to keep original hot spot (-1 <= hot-spot-x <= 524288)"
    )
    (
      "hot-spot-y"
      "gint"
      "Y-coordinate of hot spot (use -1, -1 to keep original hot spot (-1 <= hot-spot-y <= 524288)"
    )
    (
      "crop"
      "gboolean"
      "Auto-crop or not (TRUE or FALSE)"
    )
    (
      "size"
      "gint"
      "Default nominal size (size >= 1)"
    )
    (
      "size-replace"
      "gboolean"
      "Replace existent size or not (TRUE or FALSE)"
    )
    (
      "delay"
      "gint"
      "Default delay (delay >= 5)"
    )
    (
      "delay-replace"
      "gboolean"
      "Replace existent delay or not (TRUE or FALSE)"
    )
    (
      "xmc-copyright"
      "gchararray"
      "Copyright information"
    )
    (
      "xmc-license"
      "gchararray"
      "License information"
    )
    (
      "gimp-comment"
      "gchararray"
      "Other comment (taken from 'gimp-comment' parasite)"
    )
  )
  (
  )
)
(register-procedure "gimp-pdb-get-proc-return-value"
  "Queries the procedural database for information on the specified procedure's return value."
  "This procedure returns the #GParamSpec of procedure_name's return value."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2019"
  "Internal GIMP procedure"
  (
    (
      "procedure-name"
      "gchararray"
      "The procedure name"
    )
    (
      "val-num"
      "gint"
      "The return value number"
    )
  )
  (
    (
      "param-spec"
      "GParam"
      "The GParamSpec of the return value"
    )
  )
)
(register-procedure "gimp-brush-set-angle"
  "Sets the rotation angle of a generated brush."
  "This procedure sets the rotation angle for a generated brush. If called for any other type of brush, it does not succeed."
  "Bill Skaggs <weskaggs@@primate.ucdavis.edu>"
  "Bill Skaggs"
  "2004"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The brush name"
    )
    (
      "angle-in"
      "gdouble"
      "The desired brush rotation angle in degree"
    )
  )
  (
    (
      "angle-out"
      "gdouble"
      "The brush rotation angle actually assigned"
    )
  )
)
(register-procedure "gimp-layer-set-offsets"
  "Set the layer offsets."
  "This procedure sets the offsets for the specified layer. The offsets are relative to the image origin and can be any values. This operation is valid only on layers which have been added to an image."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "layer"
      "GimpLayer"
      "The layer"
    )
    (
      "offx"
      "gint"
      "Offset in x direction"
    )
    (
      "offy"
      "gint"
      "Offset in y direction"
    )
  )
  (
  )
)
(register-procedure "histogram-export"
  "Exports the image histogram to a text file (CSV)"
  "
Exports the image histogram to a text file,
so that it can be used by other programs
and loaded into spreadsheets.

The resulting file is a CSV file (Comma Separated
Values), which can be imported
directly in most spreadsheet programs.

The first two columns are the bucket boundaries,
followed by the selected columns. The histogram
refers to the selected image area, and
can use either Sample Average data or data
from the current drawable only.;

The output is in \"weighted pixels\" - meaning
all fully transparent pixels are not counted.

Check the gimp-histogram call
"
  "João S. O. Bueno"
  "(c) GPL V3.0 or later"
  "2014"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The input image"
    )
    (
      "num-drawables"
      "gint"
      "Number of input drawables (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The input drawables"
    )
    (
      "file"
      "GFile"
      "Histogram export file"
    )
    (
      "bucket-size"
      "gdouble"
      "Bucket Size (0.001 <= bucket-size <= 1)"
    )
    (
      "sample-average"
      "gboolean"
      "Sample Average (TRUE or FALSE)"
    )
    (
      "output-format"
      "gchararray"
      "Output format: 'pixel count', 'normalized', 'percent'"
    )
  )
  (
  )
)
(register-procedure "gimp-palette-rename"
  "Rename a palette"
  "This procedure renames a palette"
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2004"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The palette name"
    )
    (
      "new-name"
      "gchararray"
      "The new name of the palette"
    )
  )
  (
    (
      "actual-name"
      "gchararray"
      "The actual new name of the palette"
    )
  )
)
(register-procedure "gimp-edit-copy"
  "Copy from the specified drawables."
  "If there is a selection in the image, then the area specified by the selection is copied from the specified drawables and placed in an internal GIMP edit buffer. It can subsequently be retrieved using the 'gimp-edit-paste' command. If there is no selection, then the specified drawables' contents will be stored in the internal GIMP edit buffer. This procedure will fail if the selected area lies completely outside the bounds of the current drawables and there is nothing to copy from. All the drawables must belong to the same image."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "num-drawables"
      "gint"
      "The number of drawables to save (num-drawables >= 1)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "Drawables to copy from"
    )
  )
  (
    (
      "non-empty"
      "gboolean"
      "TRUE if the cut was successful, FALSE if there was nothing to copy from (TRUE or FALSE)"
    )
  )
)
(register-procedure "file-dds-save"
  "Saves files in DDS image format"
  "Saves files in DDS image format"
  "Shawn Kirst"
  "Shawn Kirst"
  "2008"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The image to save"
    )
    (
      "num-drawables"
      "gint"
      "Number of drawables to be saved (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The drawables to save"
    )
    (
      "file"
      "GFile"
      "The file to save to"
    )
    (
      "compression-format"
      "gint"
      "Compression format (0 = None, 1 = BC1/DXT1, 2 = BC2/DXT3, 3 = BC3/DXT5, 4 = BC3n/DXT5nm, 5 = BC4/ATI1N, 6 = BC5/ATI2N, 7 = RXGB (DXT5), 8 = Alpha Exponent (DXT5), 9 = YCoCg (DXT5), 10 = YCoCg scaled (DXT5)) (0 <= compression-format <= 10)"
    )
    (
      "mipmaps"
      "gint"
      "How to handle mipmaps (0 = No mipmaps, 1 = Generate mipmaps, 2 = Use existing mipmaps (layers) (0 <= mipmaps <= 2)"
    )
    (
      "save-type"
      "gint"
      "How to save the image (0 = selected layer, 1 = cube map, 2 = volume map, 3 = texture array (0 <= save-type <= 3)"
    )
    (
      "format"
      "gint"
      "Pixel format (0 = default, 1 = DDS_FORMAT_RGB8, 2 = DDS_FORMAT_RGBA8, 3 = DDS_FORMAT_BGR8, 4 = DDS_FORMAT_ABGR8, 5 = DDS_FORMAT_R5G6B5, 6 = DDS_FORMAT_RGBA4, 7 = DDS_FORMAT_RGB5A1, 8 = DDS_FORMAT_RGB10A2, 9 = DDS_FORMAT_R3G3B2, 10 = DDS_FORMAT_A8, 11 = DDS_FORMAT_L8, 12 = DDS_FORMAT_L8A8, 13 = DDS_FORMAT_AEXP, 14 = DDS_FORMAT_YCOCG) (0 <= format <= 14)"
    )
    (
      "transparent-color"
      "gboolean"
      "Make an indexed color transparent (TRUE or FALSE)"
    )
    (
      "transparent-index"
      "gint"
      "Index of transparent color or -1 to disable (for indexed images only). (0 <= transparent-index <= 255)"
    )
    (
      "mipmap-filter"
      "gint"
      "Filtering to use when generating mipmaps (0 = default, 1 = nearest, 2 = box, 3 = triangle, 4 = quadratic, 5 = bspline, 6 = mitchell, 7 = lanczos, 8 = kaiser) (0 <= mipmap-filter <= 8)"
    )
    (
      "mipmap-wrap"
      "gint"
      "Wrap mode to use when generating mipmaps (0 = default, 1 = mirror, 2 = repeat, 3 = clamp) (0 <= mipmap-wrap <= 3)"
    )
    (
      "gamma-correct"
      "gboolean"
      "Use gamma correct mipmap filtering (TRUE or FALSE)"
    )
    (
      "srgb"
      "gboolean"
      "Use sRGB colorspace for gamma correction (TRUE or FALSE)"
    )
    (
      "gamma"
      "gdouble"
      "Gamma value to use for gamma correction (i.e. 2.2) (0 <= gamma <= 10)"
    )
    (
      "perceptual-metric"
      "gboolean"
      "Use a perceptual error metric during compression (TRUE or FALSE)"
    )
    (
      "preserve-alpha-coverage"
      "gboolean"
      "Preserve alpha test converage for alpha channel maps (TRUE or FALSE)"
    )
    (
      "alpha-test-threshold"
      "gdouble"
      "Alpha test threshold value for which alpha test converage should be preserved (0 <= alpha-test-threshold <= 1)"
    )
  )
  (
  )
)
(register-procedure "gimp-selection-grow"
  "Grow the image's selection"
  "This procedure grows the selection. Growing involves expanding the boundary in all directions by the specified pixel amount."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "steps"
      "gint"
      "Steps of grow (in pixels) (steps >= 0)"
    )
  )
  (
  )
)
(register-procedure "gimp-selection-is-empty"
  "Determine whether the selection is empty."
  "This procedure returns TRUE if the selection for the specified image is empty."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
  )
  (
    (
      "is-empty"
      "gboolean"
      "Is the selection empty? (TRUE or FALSE)"
    )
  )
)
(register-procedure "file-psd-load-thumb"
  "Loads thumbnails from the Photoshop PSD file format"
  "This plug-in loads thumbnail images from Adobe Photoshop (TM) native PSD format files."
  "John Marshall"
  "John Marshall"
  "2007"
  "GIMP Plug-In"
  (
    (
      "file"
      "GFile"
      "The file to load the thumbnail from"
    )
    (
      "thumb-size"
      "gint"
      "Preferred thumbnail size (16 <= thumb-size <= 2014)"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "Thumbnail image"
    )
    (
      "image-width"
      "gint"
      "Width of the full-sized image (0 for unknown) (0 <= image-width <= 524288)"
    )
    (
      "image-height"
      "gint"
      "Height of the full-sized image (0 for unknown) (0 <= image-height <= 524288)"
    )
    (
      "image-type"
      "GimpImageType"
      "Type of the image @{ RGB-IMAGE (0), RGBA-IMAGE (1), GRAY-IMAGE (2), GRAYA-IMAGE (3), INDEXED-IMAGE (4), INDEXEDA-IMAGE (5) @}"
    )
    (
      "num-layers"
      "gint"
      "Number of layers in the image (num-layers >= 1)"
    )
  )
)
(register-procedure "gimp-context-set-brush-spacing"
  "Set brush spacing as percent of size."
  "Set the brush spacing as percent of size for brush based paint tools."
  "Alexia Death"
  "Alexia Death"
  "2014"
  "Internal GIMP procedure"
  (
    (
      "spacing"
      "gdouble"
      "Brush spacing as fraction of size (0.01 <= spacing <= 50)"
    )
  )
  (
  )
)
(register-procedure "file-sgi-save"
  "Exports files in SGI image file format"
  "This plug-in exports SGI image files."
  "Michael Sweet <mike@@easysw.com>"
  "Copyright 1997-1998 by Michael Sweet"
  "1.1.1 - 17 May 1998"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The image to save"
    )
    (
      "num-drawables"
      "gint"
      "Number of drawables to be saved (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The drawables to save"
    )
    (
      "file"
      "GFile"
      "The file to save to"
    )
    (
      "compression"
      "gint"
      "Compression level (0 = none, 1 = RLE, 2 = ARLE) (0 <= compression <= 2)"
    )
  )
  (
  )
)
(register-procedure "gimp-gradients-refresh"
  "Refresh current gradients. This function always succeeds."
  "This procedure retrieves all gradients currently in the user's gradient path and updates the gradient dialogs accordingly."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2002"
  "Internal GIMP procedure"
  (
  )
  (
  )
)
(register-procedure "plug-in-pixelize2"
  "Simplify image into an array of solid-colored rectangles"
  "Pixelize the contents of the specified drawable with specified pixelizing width and height."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1997"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
    (
      "pixel-width"
      "gint"
      "Pixel width (the decrease in horizontal resolution) (1 <= pixel-width <= 524288)"
    )
    (
      "pixel-height"
      "gint"
      "Pixel height (the decrease in vertical resolution) (1 <= pixel-height <= 524288)"
    )
  )
  (
  )
)
(register-procedure "gimp-image-grid-set-spacing"
  "Sets the spacing of an image's grid."
  "This procedure sets the horizontal and vertical spacing of an image's grid."
  "Sylvain Foret"
  "Sylvain Foret"
  "2005"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "xspacing"
      "gdouble"
      "The image's grid horizontal spacing"
    )
    (
      "yspacing"
      "gdouble"
      "The image's grid vertical spacing"
    )
  )
  (
  )
)
(register-procedure "gimp-image-remove-vectors"
  "Remove the specified path from the image."
  "This procedure removes the specified path from the image. If the path doesn't exist, an error is returned."
  "Simon Budig"
  "Simon Budig"
  "2005"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "vectors"
      "GimpVectors"
      "The vectors object"
    )
  )
  (
  )
)
(register-procedure "gimp-image-thaw-channels"
  "Thaw the image's channel list."
  "This procedure thaws the channel list of the image, re-enabling updates to the Channels dialog.

This procedure should match a corresponding call to 'gimp-image-freeze-channels'."
  "Ell"
  "Ell"
  "2018"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
  )
  (
  )
)
(register-procedure "plug-in-plug-in-details"
  "Display information about plug-ins"
  "Allows one to browse the plug-in menus system. You can search for plug-in names, sort by name or menu location and you can view a tree representation of the plug-in menus. Can also be of help to find where new plug-ins have installed themselves in the menus."
  "Andy Thomas"
  "Andy Thomas"
  "1999"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
  )
  (
  )
)
(register-procedure "gimp-drawable-get-offsets"
  "Returns the offsets for the drawable."
  "This procedure returns the specified drawable's offsets. This only makes sense if the drawable is a layer since channels are anchored. The offsets of a channel will be returned as 0."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "drawable"
      "GimpDrawable"
      "The drawable"
    )
  )
  (
    (
      "offset-x"
      "gint"
      "x offset of drawable"
    )
    (
      "offset-y"
      "gint"
      "y offset of drawable"
    )
  )
)
(register-procedure "gimp-layer-get-show-mask"
  "Get the show mask setting of the specified layer."
  "This procedure returns the specified layer's show mask setting. This controls whether the layer or its mask is visible. TRUE indicates that the mask should be visible. If the layer has no mask, then this function returns an error."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "layer"
      "GimpLayer"
      "The layer"
    )
  )
  (
    (
      "show-mask"
      "gboolean"
      "The layer's show mask setting (TRUE or FALSE)"
    )
  )
)
(register-procedure "gimp-help-using-simpleobjects"
  "Bookmark to the user manual"
  ""
  "Roman Joost <romanofski@@gimp.org>"
  "Roman Joost <romanofski@@gimp.org>"
  "2006"
  "Temporary Procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
  )
  (
  )
)
(register-procedure "gimp-drawable-get-pixel"
  "Gets the value of the pixel at the specified coordinates."
  "This procedure gets the pixel value at the specified coordinates. The 'num_channels' argument must always be equal to the bytes-per-pixel value for the specified drawable."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1997"
  "Internal GIMP procedure"
  (
    (
      "drawable"
      "GimpDrawable"
      "The drawable"
    )
    (
      "x-coord"
      "gint"
      "The x coordinate (x-coord >= 0)"
    )
    (
      "y-coord"
      "gint"
      "The y coordinate (y-coord >= 0)"
    )
  )
  (
    (
      "num-channels"
      "gint"
      "The number of channels for the pixel (num-channels >= 0)"
    )
    (
      "pixel"
      "GimpUint8Array"
      "The pixel value"
    )
  )
)
(register-procedure "gimp-text-layer-set-font"
  "Set the font of a text layer."
  "This procedure modifies the font used in the specified text layer."
  "Marcus Heese <heese@@cip.ifi.lmu.de>"
  "Marcus Heese"
  "2008"
  "Internal GIMP procedure"
  (
    (
      "layer"
      "GimpLayer"
      "The text layer"
    )
    (
      "font"
      "gchararray"
      "The new font to use"
    )
  )
  (
  )
)
(register-procedure "plug-in-fractalexplorer"
  "Render fractal art"
  "No help yet."
  "Daniel Cotting (cotting@@multimania.com, www.multimania.com/cotting)"
  "Daniel Cotting (cotting@@multimania.com, www.multimania.com/cotting)"
  "December, 1998"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The input image"
    )
    (
      "num-drawables"
      "gint"
      "Number of input drawables (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The input drawables"
    )
    (
      "fractal-type"
      "gint"
      "0: Mandelbrot; 1: Julia; 2: Barnsley 1; 3: Barnsley 2; 4: Barnsley 3; 5: Spider; 6: ManOWar; 7: Lambda; 8: Sierpinski (0 <= fractal-type <= 8)"
    )
    (
      "xmin"
      "gdouble"
      "xmin fractal image delimiter"
    )
    (
      "xmax"
      "gdouble"
      "xmax fractal image delimiter"
    )
    (
      "ymin"
      "gdouble"
      "ymin fractal image delimiter"
    )
    (
      "ymax"
      "gdouble"
      "ymax fractal image delimiter"
    )
    (
      "iter"
      "gdouble"
      "Iteration value"
    )
    (
      "cx"
      "gdouble"
      "cx value (only Julia)"
    )
    (
      "cy"
      "gdouble"
      "cy value (only Julia)"
    )
    (
      "color-mode"
      "gint"
      "0: Apply colormap as specified by the parameters below; 1: Apply active gradient to final image (0 <= color-mode <= 1)"
    )
    (
      "red-stretch"
      "gdouble"
      "Red stretching factor"
    )
    (
      "green-stretch"
      "gdouble"
      "Green stretching factor"
    )
    (
      "blues-tretch"
      "gdouble"
      "Blue stretching factor"
    )
    (
      "red-mode"
      "gint"
      "Red application mode (0:SIN; 1:COS; 2:NONE) (0 <= red-mode <= 2)"
    )
    (
      "green-mode"
      "gint"
      "Green application mode (0:SIN; 1:COS; 2:NONE) (0 <= green-mode <= 2)"
    )
    (
      "blue-mode"
      "gint"
      "Blue application mode (0:SIN; 1:COS; 2:NONE) (0 <= blue-mode <= 2)"
    )
    (
      "red-invert"
      "gboolean"
      "Red inversion mode (TRUE or FALSE)"
    )
    (
      "green-invert"
      "gboolean"
      "Green inversion mode (TRUE or FALSE)"
    )
    (
      "blue-invert"
      "gboolean"
      "Blue inversion mode (TRUE or FALSE)"
    )
    (
      "n-colors"
      "gint"
      "Number of Colors for mapping (2 <= n-colors <= 8192)"
    )
  )
  (
  )
)
(register-procedure "gimp-buffers-get-list"
  "Retrieve a complete listing of the available buffers."
  "This procedure returns a complete listing of available named buffers."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2005"
  "Internal GIMP procedure"
  (
    (
      "filter"
      "gchararray"
      "An optional regular expression used to filter the list"
    )
  )
  (
    (
      "buffer-list"
      "GStrv"
      "The list of buffer names"
    )
  )
)
(register-procedure "gimp-layer-resize"
  "Resize the layer to the specified extents."
  "This procedure resizes the layer so that its new width and height are equal to the supplied parameters. Offsets are also provided which describe the position of the previous layer's content. This operation only works if the layer has been added to an image."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "layer"
      "GimpLayer"
      "The layer"
    )
    (
      "new-width"
      "gint"
      "New layer width (1 <= new-width <= 524288)"
    )
    (
      "new-height"
      "gint"
      "New layer height (1 <= new-height <= 524288)"
    )
    (
      "offx"
      "gint"
      "x offset between upper left corner of old and new layers: (old - new)"
    )
    (
      "offy"
      "gint"
      "y offset between upper left corner of old and new layers: (old - new)"
    )
  )
  (
  )
)
(register-procedure "gimp-fonts-set-popup"
  "Sets the current font in a font selection dialog."
  "Sets the current font in a font selection dialog."
  "Sven Neumann <sven@@gimp.org>"
  "Sven Neumann"
  "2003"
  "Internal GIMP procedure"
  (
    (
      "font-callback"
      "gchararray"
      "The name of the callback registered for this pop-up"
    )
    (
      "font-name"
      "gchararray"
      "The name of the font to set as selected"
    )
  )
  (
  )
)
(register-procedure "gimp-fonts-popup"
  "Invokes the Gimp font selection."
  "This procedure opens the font selection dialog."
  "Sven Neumann <sven@@gimp.org>"
  "Sven Neumann"
  "2003"
  "Internal GIMP procedure"
  (
    (
      "font-callback"
      "gchararray"
      "The callback PDB proc to call when font selection is made"
    )
    (
      "popup-title"
      "gchararray"
      "Title of the font selection dialog"
    )
    (
      "initial-font"
      "gchararray"
      "The name of the font to set as the first selected"
    )
  )
  (
  )
)
(register-procedure "gimp-palette-is-editable"
  "Tests if palette can be edited"
  "Returns TRUE if you have permission to change the palette"
  "Bill Skaggs <weskaggs@@primate.ucdavis.edu>"
  "Bill Skaggs"
  "2004"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The palette name"
    )
  )
  (
    (
      "editable"
      "gboolean"
      "TRUE if the palette can be edited (TRUE or FALSE)"
    )
  )
)
(register-procedure "gimp-brush-is-generated"
  "Tests if brush is generated."
  "Returns TRUE if this brush is parametric, FALSE for other types."
  "Bill Skaggs <weskaggs@@primate.ucdavis.edu>"
  "Bill Skaggs"
  "2004"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The brush name"
    )
  )
  (
    (
      "generated"
      "gboolean"
      "TRUE if the brush is generated (TRUE or FALSE)"
    )
  )
)
(register-procedure "gimp-item-transform-flip"
  "Flip the specified item around a given line."
  "This procedure flips the specified item.

If a selection exists and the item is a drawable, the portion of the drawable which lies under the selection is cut from the drawable and made into a floating selection which is then flipped. The axis to flip around is specified by specifying two points from that line. The return value is the ID of the flipped floating selection.

If there is no selection or the item is not a drawable, the entire item will be flipped around the specified axis. The return value will be equal to the item ID supplied as input.

This procedure is affected by the following context setters: 'gimp-context-set-interpolation', 'gimp-context-set-transform-direction', 'gimp-context-set-transform-resize'."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2010"
  "Internal GIMP procedure"
  (
    (
      "item"
      "GimpItem"
      "The affected item"
    )
    (
      "x0"
      "gdouble"
      "horz. coord. of one end of axis"
    )
    (
      "y0"
      "gdouble"
      "vert. coord. of one end of axis"
    )
    (
      "x1"
      "gdouble"
      "horz. coord. of other end of axis"
    )
    (
      "y1"
      "gdouble"
      "vert. coord. of other end of axis"
    )
  )
  (
    (
      "item"
      "GimpItem"
      "The flipped item"
    )
  )
)
(register-procedure "gimp-drawable-foreground-extract"
  "Extract the foreground of a drawable using a given trimap."
  "Image Segmentation by Uniform Color Clustering, see https://www.inf.fu-berlin.de/inst/pubs/tr-b-05-07.pdf"
  "Gerald Friedland <fland@@inf.fu-berlin.de>, Kristian Jantz <jantz@@inf.fu-berlin.de>, Sven Neumann <sven@@gimp.org>"
  "Gerald Friedland"
  "2005"
  "Internal GIMP procedure"
  (
    (
      "drawable"
      "GimpDrawable"
      "The drawable"
    )
    (
      "mode"
      "GimpForegroundExtractMode"
      "The algorithm to use @{ FOREGROUND-EXTRACT-MATTING (0) @}"
    )
    (
      "mask"
      "GimpDrawable"
      "Tri-Map"
    )
  )
  (
  )
)
(register-procedure "plug-in-spread"
  "Move pixels around randomly"
  "Spreads the pixels of the specified drawable. Pixels are randomly moved to another location whose distance varies from the original by the horizontal and vertical spread amounts."
  "Compatibility procedure. Please see 'gegl:noise-spread' for credits."
  "Compatibility procedure. Please see 'gegl:noise-spread' for credits."
  "2013"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
    (
      "spread-amount-x"
      "gdouble"
      "Horizontal spread amount (0 <= spread-amount-x <= 200)"
    )
    (
      "spread-amount-y"
      "gdouble"
      "Vertical spread amount (0 <= spread-amount-y <= 200)"
    )
  )
  (
  )
)
(register-procedure "plug-in-rgb-noise"
  "Distort colors by random amounts"
  "Add normally distributed (zero mean) random values to image channels. Noise may be additive (uncorrelated) or multiplicative (correlated - also known as speckle noise). For color images color channels may be treated together or independently."
  "Compatibility procedure. Please see 'gegl:noise-rgb' for credits."
  "Compatibility procedure. Please see 'gegl:noise-rgb' for credits."
  "2013"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
    (
      "independent"
      "gboolean"
      "Noise in channels independent (TRUE or FALSE)"
    )
    (
      "correlated"
      "gboolean"
      "Noise correlated (i.e. multiplicative not additive) (TRUE or FALSE)"
    )
    (
      "noise-1"
      "gdouble"
      "Noise in the first channel (red, gray) (0 <= noise-1 <= 1)"
    )
    (
      "noise-2"
      "gdouble"
      "Noise in the second channel (green, gray_alpha) (0 <= noise-2 <= 1)"
    )
    (
      "noise-3"
      "gdouble"
      "Noise in the third channel (blue) (0 <= noise-3 <= 1)"
    )
    (
      "noise-4"
      "gdouble"
      "Noise in the fourth channel (alpha) (0 <= noise-4 <= 1)"
    )
  )
  (
  )
)
(register-procedure "gimp-vectors-bezier-stroke-conicto"
  "Extends a bezier stroke with a conic bezier spline."
  "Extends a bezier stroke with a conic bezier spline. Actually a cubic bezier spline gets added that realizes the shape of a conic bezier spline."
  "Simon Budig"
  "Simon Budig"
  "2005"
  "Internal GIMP procedure"
  (
    (
      "vectors"
      "GimpVectors"
      "The vectors object"
    )
    (
      "stroke-id"
      "gint"
      "The stroke ID"
    )
    (
      "x0"
      "gdouble"
      "The x-coordinate of the control point"
    )
    (
      "y0"
      "gdouble"
      "The y-coordinate of the control point"
    )
    (
      "x1"
      "gdouble"
      "The x-coordinate of the end point"
    )
    (
      "y1"
      "gdouble"
      "The y-coordinate of the end point"
    )
  )
  (
  )
)
(register-procedure "gimp-item-id-is-channel"
  "Returns whether the item ID is a channel."
  "This procedure returns TRUE if the specified item ID is a channel."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "item-id"
      "gint"
      "The item ID"
    )
  )
  (
    (
      "channel"
      "gboolean"
      "TRUE if the item ID is a channel, FALSE otherwise (TRUE or FALSE)"
    )
  )
)
(register-procedure "script-fu-make-brush-rectangular"
  "Create a rectangular brush"
  ""
  "Seth Burgess <sjburges@@ou.edu>"
  "Seth Burgess"
  "1997"
  "Temporary Procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "string"
      "gchararray"
      "Name"
    )
    (
      "adjustment"
      "gdouble"
      "Width"
    )
    (
      "adjustment-2"
      "gdouble"
      "Height"
    )
    (
      "adjustment-3"
      "gdouble"
      "Spacing"
    )
  )
  (
  )
)
(register-procedure "gimp-context-set-line-dash-pattern"
  "Set the line dash pattern setting."
  "This procedure modifies the line dash pattern setting for stroking lines.

The unit of the dash pattern segments is the actual line width used for the stroke operation, in other words a segment length of 1.0 results in a square segment shape (or gap shape).

This setting affects the following procedures: 'gimp-drawable-edit-stroke-selection', 'gimp-drawable-edit-stroke-item'."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2015"
  "Internal GIMP procedure"
  (
    (
      "num-dashes"
      "gint"
      "The number of dashes in the dash_pattern array (num-dashes >= 0)"
    )
    (
      "dashes"
      "GimpFloatArray"
      "The line dash pattern setting"
    )
  )
  (
  )
)
(register-procedure "gimp-progress-set-text"
  "Changes the text in the progress bar for the current plug-in."
  "This function changes the text in the progress bar for the current plug-in. Unlike 'gimp-progress-init' it does not change the displayed value."
  "Sven Neumann <sven@@gimp.org>"
  "Sven Neumann"
  "2005"
  "Internal GIMP procedure"
  (
    (
      "message"
      "gchararray"
      "Message to use in the progress dialog"
    )
  )
  (
  )
)
(register-procedure "gimp-layer-set-edit-mask"
  "Set the edit mask setting of the specified layer."
  "This procedure sets the specified layer's edit mask setting. This controls whether the layer or it's mask is currently active for editing. If the specified layer has no layer mask, then this procedure will return an error."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "layer"
      "GimpLayer"
      "The layer"
    )
    (
      "edit-mask"
      "gboolean"
      "The new layer's edit mask setting (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "gimp-channel-new"
  "Create a new channel."
  "This procedure creates a new channel with the specified width, height, name, opacity and color.
The new channel still needs to be added to the image, as this is not automatic. Add the new channel with 'gimp-image-insert-channel'. Other attributes, such as channel visibility, should be set with explicit procedure calls.
The channel's contents are undefined initially."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image to which to add the channel"
    )
    (
      "width"
      "gint"
      "The channel width (1 <= width <= 524288)"
    )
    (
      "height"
      "gint"
      "The channel height (1 <= height <= 524288)"
    )
    (
      "name"
      "gchararray"
      "The channel name"
    )
    (
      "opacity"
      "gdouble"
      "The channel opacity (0 <= opacity <= 100)"
    )
    (
      "color"
      "GimpRGB"
      "The channel compositing color"
    )
  )
  (
    (
      "channel"
      "GimpChannel"
      "The newly created channel"
    )
  )
)
(register-procedure "plug-in-solid-noise"
  "Create a random cloud-like texture"
  "Generates 2D textures using Perlin's classic solid noise function."
  "Compatibility procedure. Please see 'gegl:noise-solid' for credits."
  "Compatibility procedure. Please see 'gegl:noise-solid' for credits."
  "2014"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
    (
      "tileable"
      "gboolean"
      "Create a tileable output (TRUE or FALSE)"
    )
    (
      "turbulent"
      "gboolean"
      "Make a turbulent noise (TRUE or FALSE)"
    )
    (
      "seed"
      "gint"
      "Random seed"
    )
    (
      "detail"
      "gint"
      "Detail level (0 <= detail <= 15)"
    )
    (
      "xsize"
      "gdouble"
      "Horizontal texture size"
    )
    (
      "ysize"
      "gdouble"
      "Vertical texture size"
    )
  )
  (
  )
)
(register-procedure "gimp-help-using-fileformats"
  "Bookmark to the user manual"
  ""
  "Roman Joost <romanofski@@gimp.org>"
  "Roman Joost <romanofski@@gimp.org>"
  "2006"
  "Temporary Procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
  )
  (
  )
)
(register-procedure "gimp-image-get-layers"
  "Returns the list of root layers contained in the specified image."
  "This procedure returns the list of root layers contained in the specified image. The order of layers is from topmost to bottommost.
Note that this is not the full list of layers, but only the root layers, i.e. layers with no parents themselves. If you need all layers, it is up to you to verify that any of these layers is a group layer with 'gimp-item-is-group' and to obtain its children with 'gimp-item-get-children' (possibly recursively checking if these have children too)."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
  )
  (
    (
      "num-layers"
      "gint"
      "The number of root layers contained in the image (num-layers >= 0)"
    )
    (
      "layers"
      "GimpObjectArray"
      "The list of layers contained in the image."
    )
  )
)
(register-procedure "plug-in-colors-channel-mixer"
  "Alter colors by mixing RGB Channels"
  "This plug-in mixes the RGB channels."
  "Compatibility procedure. Please see 'gegl:channel-mixer' for credits."
  "Compatibility procedure. Please see 'gegl:channel-mixer' for credits."
  "2013"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
    (
      "monochrome"
      "gint"
      "Monochrome @{ TRUE, FALSE @} (0 <= monochrome <= 1)"
    )
    (
      "rr-gain"
      "gdouble"
      "Set the red gain for the red channel (-2 <= rr-gain <= 2)"
    )
    (
      "rg-gain"
      "gdouble"
      "Set the green gain for the red channel (-2 <= rg-gain <= 2)"
    )
    (
      "rb-gain"
      "gdouble"
      "Set the blue gain for the red channel (-2 <= rb-gain <= 2)"
    )
    (
      "gr-gain"
      "gdouble"
      "Set the red gain for the green channel (-2 <= gr-gain <= 2)"
    )
    (
      "gg-gain"
      "gdouble"
      "Set the green gain for the green channel (-2 <= gg-gain <= 2)"
    )
    (
      "gb-gain"
      "gdouble"
      "Set the blue gain for the green channel (-2 <= gb-gain <= 2)"
    )
    (
      "br-gain"
      "gdouble"
      "Set the red gain for the blue channel (-2 <= br-gain <= 2)"
    )
    (
      "bg-gain"
      "gdouble"
      "Set the green gain for the blue channel (-2 <= bg-gain <= 2)"
    )
    (
      "bb-gain"
      "gdouble"
      "Set the blue gain for the blue channel (-2 <= bb-gain <= 2)"
    )
  )
  (
  )
)
(register-procedure "gimp-item-id-is-layer"
  "Returns whether the item ID is a layer."
  "This procedure returns TRUE if the specified item ID is a layer."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "item-id"
      "gint"
      "The item ID"
    )
  )
  (
    (
      "layer"
      "gboolean"
      "TRUE if the item is a layer, FALSE otherwise (TRUE or FALSE)"
    )
  )
)
(register-procedure "gimp-text-layer-get-indent"
  "Get the line indentation of text layer."
  "This procedure returns the indentation of the first line in a text layer."
  "Marcus Heese <heese@@cip.ifi.lmu.de>"
  "Marcus Heese"
  "2008"
  "Internal GIMP procedure"
  (
    (
      "layer"
      "GimpLayer"
      "The text layer."
    )
  )
  (
    (
      "indent"
      "gdouble"
      "The indentation value of the first line."
    )
  )
)
(register-procedure "plug-in-bump-map-tiled"
  "Create an embossing effect using a tiled image as a bump map"
  "This plug-in uses the algorithm described by John Schlag, \"Fast Embossing Effects on Raster Image Data\" in Graphics GEMS IV (ISBN 0-12-336155-9). It takes a drawable to be tiled and applied as a bump map to another image and produces a nice embossing effect."
  "Compatibility procedure. Please see 'gegl:bump-map' for credits."
  "Compatibility procedure. Please see 'gegl:bump-map' for credits."
  "2015"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
    (
      "bumpmap"
      "GimpDrawable"
      "Bump map drawable"
    )
    (
      "azimuth"
      "gdouble"
      "Azimuth (0 <= azimuth <= 360)"
    )
    (
      "elevation"
      "gdouble"
      "Elevation (0.5 <= elevation <= 90)"
    )
    (
      "depth"
      "gint"
      "Depth (1 <= depth <= 65)"
    )
    (
      "xofs"
      "gint"
      "X offset"
    )
    (
      "yofs"
      "gint"
      "Y offset"
    )
    (
      "waterlevel"
      "gdouble"
      "Level that full transparency should represent (0 <= waterlevel <= 1)"
    )
    (
      "ambient"
      "gdouble"
      "Ambient lighting factor (0 <= ambient <= 1)"
    )
    (
      "compensate"
      "gboolean"
      "Compensate for darkening (TRUE or FALSE)"
    )
    (
      "invert"
      "gboolean"
      "Invert bumpmap (TRUE or FALSE)"
    )
    (
      "type"
      "gint"
      "Type of map @{ LINEAR (0), SPHERICAL (1), SINUSOIDAL (2) @} (0 <= type <= 3)"
    )
  )
  (
  )
)
(register-procedure "gimp-text-layer-new"
  "Creates a new text layer."
  "This procedure creates a new text layer. The arguments are kept as simple as necessary for the normal case. All text attributes, however, can be modified with the appropriate gimp_text_layer_set_*() procedures. The new layer still needs to be added to the image, as this is not automatic. Add the new layer using 'gimp-image-insert-layer'."
  "Marcus Heese <heese@@cip.ifi.lmu.de>"
  "Marcus Heese"
  "2008"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "text"
      "gchararray"
      "The text to generate (in UTF-8 encoding)"
    )
    (
      "fontname"
      "gchararray"
      "The name of the font"
    )
    (
      "size"
      "gdouble"
      "The size of text in either pixels or points (0 <= size <= 8192)"
    )
    (
      "unit"
      "GimpUnit"
      "The units of specified size"
    )
  )
  (
    (
      "layer"
      "GimpLayer"
      "The new text layer."
    )
  )
)
(register-procedure "gimp-drawable-mask-bounds"
  "Find the bounding box of the current selection in relation to the specified drawable."
  "This procedure returns whether there is a selection. If there is one, the upper left and lower right-hand corners of its bounding box are returned. These coordinates are specified relative to the drawable's origin, and bounded by the drawable's extents. Please note that the pixel specified by the lower right-hand coordinate of the bounding box is not part of the selection. The selection ends at the upper left corner of this pixel. This means the width of the selection can be calculated as (x2 - x1), its height as (y2 - y1).
Note that the returned boolean does NOT correspond with the returned region being empty or not, it always returns whether the selection is non_empty. See 'gimp-drawable-mask-intersect' for a boolean return value which is more useful in most cases."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "drawable"
      "GimpDrawable"
      "The drawable"
    )
  )
  (
    (
      "non-empty"
      "gboolean"
      "TRUE if there is a selection (TRUE or FALSE)"
    )
    (
      "x1"
      "gint"
      "x coordinate of the upper left corner of selection bounds"
    )
    (
      "y1"
      "gint"
      "y coordinate of the upper left corner of selection bounds"
    )
    (
      "x2"
      "gint"
      "x coordinate of the lower right corner of selection bounds"
    )
    (
      "y2"
      "gint"
      "y coordinate of the lower right corner of selection bounds"
    )
  )
)
(register-procedure "gimp-plug-in-get-pdb-error-handler"
  "Retrieves the active error handler for procedure calls."
  "This procedure retrieves the currently active error handler for procedure calls made by the calling plug-in. See 'gimp-plugin-set-pdb-error-handler' for details."
  "Sven Neumann <sven@@gimp.org>"
  "Sven Neumann"
  "2008"
  "Internal GIMP procedure"
  (
  )
  (
    (
      "handler"
      "GimpPDBErrorHandler"
      "Who is responsible for handling procedure call errors @{ PDB-ERROR-HANDLER-INTERNAL (0), PDB-ERROR-HANDLER-PLUGIN (1) @}"
    )
  )
)
(register-procedure "gimp-context-get-brush-force"
  "Get brush force in paint options."
  "Get the brush application force for brush based paint tools."
  "Alexia Death"
  "Alexia Death"
  "2014"
  "Internal GIMP procedure"
  (
  )
  (
    (
      "force"
      "gdouble"
      "Brush application force (0 <= force <= 1)"
    )
  )
)
(register-procedure "extension-gimp-help"
  ""
  ""
  "Sven Neumann <sven@@gimp.org>, Michael Natterer <mitch@@gimp.org>, Henrik Brix Andersen <brix@@gimp.org>"
  "Sven Neumann, Michael Natterer & Henrik Brix Andersen"
  "1999-2008"
  "GIMP Extension"
  (
    (
      "domain-names"
      "GStrv"
      "Domain names"
    )
    (
      "domain-uris"
      "GStrv"
      "Domain URIs"
    )
  )
  (
  )
)
(register-procedure "gimp-get-module-load-inhibit"
  "Get the list of modules which should not be loaded."
  "Returns a copy of the list of modules which should not be loaded."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
  )
  (
    (
      "load-inhibit"
      "gchararray"
      "The list of modules"
    )
  )
)
(register-procedure "gimp-file-load"
  "Loads an image file by invoking the right load handler."
  "This procedure invokes the correct file load handler using magic if possible, and falling back on the file's extension and/or prefix if not."
  "Josh MacDonald"
  "Josh MacDonald"
  "1997"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1) @}"
    )
    (
      "file"
      "GFile"
      "The file to load"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "The output image"
    )
  )
)
(register-procedure "gimp-image-set-color-profile-from-file"
  "Sets the image's color profile from an ICC file"
  "This procedure sets the image's color profile from a file containing an ICC profile, or unsets it if NULL is passed as 'file'. This procedure does no color conversion. However, it will change the pixel format of all layers to contain the babl space matching the profile. You must call this procedure before adding layers to the image."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2015"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "file"
      "GFile"
      "The file containing the new color profile"
    )
  )
  (
  )
)
(register-procedure "gimp-pencil"
  "Paint in the current brush without sub-pixel sampling."
  "This tool is the standard pencil. It draws linearly interpolated lines through the specified stroke coordinates. It operates on the specified drawable in the foreground color with the active brush. The brush mask is treated as though it contains only black and white values. Any value below half is treated as black; any above half, as white."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "drawable"
      "GimpDrawable"
      "The affected drawable"
    )
    (
      "num-strokes"
      "gint"
      "Number of stroke control points (count each coordinate as 2 points) (num-strokes >= 2)"
    )
    (
      "strokes"
      "GimpFloatArray"
      "Array of stroke coordinates: @{ s1.x, s1.y, s2.x, s2.y, ..., sn.x, sn.y @}"
    )
  )
  (
  )
)
(register-procedure "gimp-text-layer-get-hint-style"
  "Get information about hinting in the specified text layer."
  "This procedure provides information about the hinting that is being used in a text layer. Hinting can be optimized for fidelity or contrast or it can be turned entirely off."
  "Marcus Heese <heese@@cip.ifi.lmu.de>"
  "Marcus Heese"
  "2008"
  "Internal GIMP procedure"
  (
    (
      "layer"
      "GimpLayer"
      "The text layer"
    )
  )
  (
    (
      "style"
      "GimpTextHintStyle"
      "The hint style used for font outlines @{ TEXT-HINT-STYLE-NONE (0), TEXT-HINT-STYLE-SLIGHT (1), TEXT-HINT-STYLE-MEDIUM (2), TEXT-HINT-STYLE-FULL (3) @}"
    )
  )
)
(register-procedure "script-fu-selection-to-pattern"
  "Convert a selection to a pattern"
  ""
  "Cameron Gregory <cameron@@bloke.com>"
  "Cameron Gregory"
  "09/02/2003"
  "Temporary Procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Image"
    )
    (
      "drawable"
      "GimpDrawable"
      "Drawable"
    )
    (
      "string"
      "gchararray"
      "_Pattern name"
    )
    (
      "string-2"
      "gchararray"
      "_File name"
    )
  )
  (
  )
)
(register-procedure "gimp-image-policy-color-profile"
  "Execute the color profile conversion policy."
  "Process the image according to the color profile policy as set in Preferences.
If GIMP is running as a GUI and interactive is TRUE, a dialog may be presented to the user depending on the policy. Otherwise, if the policy does not mandate the conversion to perform, the conversion to the preferred RGB or grayscale profile will happen, defaulting to built-in profiles if no preferred profiles were set in `Preferences`.
This function should be used only if you want to follow user settings. If you intend to convert to a specific profile, call preferably 'gimp-image-convert-color-profile'. And if you wish to leave whatever profile an image has, do not call any of these functions.
Finally it is unnecessary to call this function in a format load procedure because this is called automatically by the core code when loading any image. You should only call this function explicitly when loading an image through a PDB call."
  "Jehan"
  "Jehan"
  "2020"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "interactive"
      "gboolean"
      "Querying the user through a dialog is a possibility (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "gimp-drawable-edit-stroke-selection"
  "Stroke the current selection"
  "This procedure strokes the current selection, painting along the selection boundary with the active paint method and brush, or using a plain line with configurable properties. The paint is applied to the specified drawable regardless of the active selection.

This procedure is affected by the following context setters: 'gimp-context-set-opacity', 'gimp-context-set-paint-mode', 'gimp-context-set-paint-method', 'gimp-context-set-stroke-method', 'gimp-context-set-foreground', 'gimp-context-set-brush' and all brush property settings, 'gimp-context-set-gradient' and all gradient property settings, 'gimp-context-set-line-width' and all line property settings, 'gimp-context-set-antialias'."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "drawable"
      "GimpDrawable"
      "The drawable to stroke to"
    )
  )
  (
  )
)
(register-procedure "gimp-online-bugs-features"
  "Bookmark to the bug tracker of GIMP"
  ""
  "Alexandre Prokoudine <alexandre.prokoudine@@gmail.com>"
  "Alexandre Prokoudine <alexandre.prokoudine@@gmail.com>"
  "2018"
  "Temporary Procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
  )
  (
  )
)
(register-procedure "file-raw-placeholder-cine-load"
  "Load files in the CINE raw format via placeholder"
  "This plug-in loads files in Phantom Software's raw CINE format by calling placeholder."
  "Tobias Ellinghaus"
  "Tobias Ellinghaus"
  "2016"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "file"
      "GFile"
      "The file to load"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "Output image"
    )
  )
)
(register-procedure "gimp-xcf-load"
  "Loads file saved in the .xcf file format"
  "The XCF file format has been designed specifically for loading and saving tiled and layered images in GIMP. This procedure will load the specified file."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "dummy-param"
      "GimpRunMode"
      "Dummy parameter @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "file"
      "GFile"
      "The file to load"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "Output image"
    )
  )
)
(register-procedure "gimp-image-get-colormap"
  "Returns the image's colormap"
  "This procedure returns an actual pointer to the image's colormap, as well as the number of bytes contained in the colormap. The actual number of colors in the transmitted colormap will be 'num-bytes' / 3. If the image is not in Indexed color mode, no colormap is returned."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
  )
  (
    (
      "num-bytes"
      "gint"
      "Number of bytes in the colormap array (num-bytes >= 0)"
    )
    (
      "colormap"
      "GimpUint8Array"
      "The image's colormap."
    )
  )
)
(register-procedure "plug-in-displace-polar"
  "Displace pixels as indicated by displacement maps"
  "Just like plug-in-displace but working in polar coordinates. The drawable is whirled and pinched according to the map."
  "Compatibility procedure. Please see 'gegl:displace' for credits."
  "Compatibility procedure. Please see 'gegl:displace' for credits."
  "2015"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
    (
      "amount-x"
      "gdouble"
      "Displace multiplier for radial direction (-500 <= amount-x <= 500)"
    )
    (
      "amount-y"
      "gdouble"
      "Displace multiplier for tangent direction (-500 <= amount-y <= 500)"
    )
    (
      "do-x"
      "gboolean"
      "Displace in radial direction ? (TRUE or FALSE)"
    )
    (
      "do-y"
      "gboolean"
      "Displace in tangent direction ? (TRUE or FALSE)"
    )
    (
      "displace-map-x"
      "GimpDrawable"
      "Displacement map for radial direction"
    )
    (
      "displace-map-y"
      "GimpDrawable"
      "Displacement map for tangent direction"
    )
    (
      "displace-type"
      "gint"
      "Edge behavior @{ WRAP (1), SMEAR (2), BLACK (3) @} (1 <= displace-type <= 3)"
    )
  )
  (
  )
)
(register-procedure "plug-in-cartoon"
  "Simulate a cartoon by enhancing edges"
  "Propagates dark values in an image based on each pixel's relative darkness to a neighboring average. The idea behind this filter is to give the look of a black felt pen drawing subsequently shaded with color. This is achieved by darkening areas of the image which are measured to be darker than a neighborhood average. In this way, sufficiently large shifts in intensity are darkened to black. The rate at which they are darkened to black is determined by the second pct_black parameter. The mask_radius parameter controls the size of the pixel neighborhood over which the average intensity is computed and then compared to each pixel in the neighborhood to decide whether or not to darken it to black. Large values for mask_radius result in very thick black areas bordering the shaded regions of color and much less detail for black areas everywhere including inside regions of color. Small values result in more subtle pen strokes and detail everywhere. Small values for the pct_black make the
blend from the color regions to the black border lines smoother and the lines themselves thinner and less noticeable; larger values achieve the opposite effect."
  "Compatibility procedure. Please see 'gegl:cartoon' for credits."
  "Compatibility procedure. Please see 'gegl:cartoon' for credits."
  "2019"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
    (
      "mask-radius"
      "gdouble"
      "Cartoon mask radius (radius of pixel neighborhood) (1 <= mask-radius <= 50)"
    )
    (
      "pct-black"
      "gdouble"
      "Percentage of darkened pixels to set to black (0 <= pct-black <= 1)"
    )
  )
  (
  )
)
(register-procedure "file-faxg3-load"
  "Loads g3 fax files"
  "This plug-in loads Fax G3 Image files."
  "Jochen Friedrich"
  "Jochen Friedrich, Gert Doering, Spencer Kimball & Peter Mattis"
  ""
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "file"
      "GFile"
      "The file to load"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "Output image"
    )
  )
)
(register-procedure "gimp-image-delete"
  "Delete the specified image."
  "If there are no displays associated with this image it will be deleted. This means that you can not delete an image through the PDB that was created by the user. If the associated display was however created through the PDB and you know the display ID, you may delete the display. Removal of the last associated display will then delete the image."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
  )
  (
  )
)
(register-procedure "file-raw-placeholder-mos-load"
  "Load files in the MOS raw format via placeholder"
  "This plug-in loads files in Leaf's raw MOS format by calling placeholder."
  "Tobias Ellinghaus"
  "Tobias Ellinghaus"
  "2016"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "file"
      "GFile"
      "The file to load"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "Output image"
    )
  )
)
(register-procedure "gimp-image-detach-parasite"
  "Removes a parasite from an image."
  "This procedure detaches a parasite from an image. It has no return values."
  "Jay Cox"
  "Jay Cox"
  "1998"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "name"
      "gchararray"
      "The name of the parasite to detach from an image."
    )
  )
  (
  )
)
(register-procedure "gimp-layer-get-lock-alpha"
  "Get the lock alpha channel setting of the specified layer."
  "This procedure returns the specified layer's lock alpha channel setting."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "layer"
      "GimpLayer"
      "The layer"
    )
  )
  (
    (
      "lock-alpha"
      "gboolean"
      "The layer's lock alpha channel setting (TRUE or FALSE)"
    )
  )
)
(register-procedure "gimp-image-insert-channel"
  "Add the specified channel to the image."
  "This procedure adds the specified channel to the image at the given position. Since channel groups are not currently supported, the parent argument must always be 0. The position argument specifies the location of the channel inside the stack, starting from the top (0) and increasing. If the position is specified as -1, then the channel is inserted above the active channel."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "channel"
      "GimpChannel"
      "The channel"
    )
    (
      "parent"
      "GimpChannel"
      "The parent channel"
    )
    (
      "position"
      "gint"
      "The channel position"
    )
  )
  (
  )
)
(register-procedure "gimp-unit-get-number-of-built-in-units"
  "Returns the number of built-in units."
  "This procedure returns the number of defined units built-in to GIMP."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "1999"
  "Internal GIMP procedure"
  (
  )
  (
    (
      "num-units"
      "gint"
      "The number of built-in units"
    )
  )
)
(register-procedure "gimp-item-set-lock-visibility"
  "Set the 'lock visibility' state of the specified item."
  "This procedure sets the specified item's lock visibility state."
  "Jehan"
  "Jehan"
  "2021"
  "Internal GIMP procedure"
  (
    (
      "item"
      "GimpItem"
      "The item"
    )
    (
      "lock-visibility"
      "gboolean"
      "The new item 'lock visibility' state (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "gimp-image-get-layer-by-tattoo"
  "Find a layer with a given tattoo in an image."
  "This procedure returns the layer with the given tattoo in the specified image."
  "Jay Cox"
  "Jay Cox"
  "1998"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "tattoo"
      "guint"
      "The tattoo of the layer to find"
    )
  )
  (
    (
      "layer"
      "GimpLayer"
      "The layer with the specified tattoo"
    )
  )
)
(register-procedure "gimp-pdb-set-file-proc-save-handler"
  "Registers a file save handler procedure."
  "Registers a procedural database procedure to be called to save files in a particular file format."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "procedure-name"
      "gchararray"
      "The name of the procedure to be used for saving"
    )
    (
      "extensions"
      "gchararray"
      "comma separated list of extensions this handler can save (i.e. \"jpg,jpeg\")"
    )
    (
      "prefixes"
      "gchararray"
      "comma separated list of prefixes this handler can save (i.e. \"http:,ftp:\")"
    )
  )
  (
  )
)
(register-procedure "gimp-brushes-popup"
  "Invokes the Gimp brush selection."
  "This procedure opens the brush selection dialog."
  "Andy Thomas"
  "Andy Thomas"
  "1998"
  "Internal GIMP procedure"
  (
    (
      "brush-callback"
      "gchararray"
      "The callback PDB proc to call when brush selection is made"
    )
    (
      "popup-title"
      "gchararray"
      "Title of the brush selection dialog"
    )
    (
      "initial-brush"
      "gchararray"
      "The name of the brush to set as the first selected"
    )
    (
      "opacity"
      "gdouble"
      "The initial opacity of the brush (0 <= opacity <= 100)"
    )
    (
      "spacing"
      "gint"
      "The initial spacing of the brush (if < 0 then use brush default spacing) (spacing <= 1000)"
    )
    (
      "paint-mode"
      "GimpLayerMode"
      "The initial paint mode @{ LAYER-MODE-NORMAL-LEGACY (0), LAYER-MODE-DISSOLVE (1), LAYER-MODE-BEHIND-LEGACY (2), LAYER-MODE-MULTIPLY-LEGACY (3), LAYER-MODE-SCREEN-LEGACY (4), LAYER-MODE-OVERLAY-LEGACY (5), LAYER-MODE-DIFFERENCE-LEGACY (6), LAYER-MODE-ADDITION-LEGACY (7), LAYER-MODE-SUBTRACT-LEGACY (8), LAYER-MODE-DARKEN-ONLY-LEGACY (9), LAYER-MODE-LIGHTEN-ONLY-LEGACY (10), LAYER-MODE-HSV-HUE-LEGACY (11), LAYER-MODE-HSV-SATURATION-LEGACY (12), LAYER-MODE-HSL-COLOR-LEGACY (13), LAYER-MODE-HSV-VALUE-LEGACY (14), LAYER-MODE-DIVIDE-LEGACY (15), LAYER-MODE-DODGE-LEGACY (16), LAYER-MODE-BURN-LEGACY (17), LAYER-MODE-HARDLIGHT-LEGACY (18), LAYER-MODE-SOFTLIGHT-LEGACY (19), LAYER-MODE-GRAIN-EXTRACT-LEGACY (20), LAYER-MODE-GRAIN-MERGE-LEGACY (21), LAYER-MODE-COLOR-ERASE-LEGACY (22), LAYER-MODE-OVERLAY (23), LAYER-MODE-LCH-HUE (24), LAYER-MODE-LCH-CHROMA (25), LAYER-MODE-LCH-COLOR (26), LAYER-MODE-LCH-LIGHTNESS (27), LAYER-MODE-NORMAL (28), LAYER-MODE-BEHIND (29), LAYER-MODE-MULTIPLY (30), LAYER-MODE-SCREEN (31), LAYER-MODE-DIFFERENCE (32), LAYER-MODE-ADDITION (33), LAYER-MODE-SUBTRACT (34), LAYER-MODE-DARKEN-ONLY (35), LAYER-MODE-LIGHTEN-ONLY (36), LAYER-MODE-HSV-HUE (37), LAYER-MODE-HSV-SATURATION (38), LAYER-MODE-HSL-COLOR (39), LAYER-MODE-HSV-VALUE (40), LAYER-MODE-DIVIDE (41), LAYER-MODE-DODGE (42), LAYER-MODE-BURN (43), LAYER-MODE-HARDLIGHT (44), LAYER-MODE-SOFTLIGHT (45), LAYER-MODE-GRAIN-EXTRACT (46), LAYER-MODE-GRAIN-MERGE (47), LAYER-MODE-VIVID-LIGHT (48), LAYER-MODE-PIN-LIGHT (49), LAYER-MODE-LINEAR-LIGHT (50), LAYER-MODE-HARD-MIX (51), LAYER-MODE-EXCLUSION (52), LAYER-MODE-LINEAR-BURN (53), LAYER-MODE-LUMA-DARKEN-ONLY (54), LAYER-MODE-LUMA-LIGHTEN-ONLY (55), LAYER-MODE-LUMINANCE (56), LAYER-MODE-COLOR-ERASE (57), LAYER-MODE-ERASE (58), LAYER-MODE-MERGE (59), LAYER-MODE-SPLIT (60), LAYER-MODE-PASS-THROUGH (61), LAYER-MODE-REPLACE (62), LAYER-MODE-ANTI-ERASE (63) @}"
    )
  )
  (
  )
)
(register-procedure "plug-in-decompose"
  "Decompose an image into separate colorspace components"
  "This function creates new gray images with different channel information in each of them"
  "Peter Kirchgessner"
  "Peter Kirchgessner, Clarence Risher"
  "1997"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The input image"
    )
    (
      "num-drawables"
      "gint"
      "Number of input drawables (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The input drawables"
    )
    (
      "decompose-type"
      "gchararray"
      "What to decompose: \"RGB\", \"RGBA\", \"Red\", \"Green\", \"Blue\", \"Alpha\", \"HSV\", \"Hue\", \"Saturation\", \"Value\", \"HSL\", \"Hue (HSL)\", \"Saturation (HSL)\", \"Lightness\", \"CMYK\", \"Cyan\", \"Magenta\", \"Yellow\", \"Black\", \"LAB\", \"LCH\", \"YCbCr_ITU_R470\", \"YCbCr_ITU_R470_256\", \"YCbCr_ITU_R709\", \"YCbCr_ITU_R709_256\""
    )
    (
      "layers-mode"
      "gboolean"
      "Create channels as layers in a single image (TRUE or FALSE)"
    )
    (
      "use-registration"
      "gboolean"
      "When enabled, pixels in the foreground color will appear black in all output images. This can be used for things like crop marks that have to show up on all channels. (TRUE or FALSE)"
    )
  )
  (
    (
      "new-image-1"
      "GimpImage"
      "Output gray image 1"
    )
    (
      "new-image-2"
      "GimpImage"
      "Output gray image 2 (N/A for single channel extract)"
    )
    (
      "new-image-3"
      "GimpImage"
      "Output gray image 3 (N/A for single channel extract)"
    )
    (
      "new-image-4"
      "GimpImage"
      "Output gray image 4 (N/A for single channel extract)"
    )
  )
)
(register-procedure "file-raw-placeholder-srw-load"
  "Load files in the SRW raw format via placeholder"
  "This plug-in loads files in Samsung's raw SRW format by calling placeholder."
  "Tobias Ellinghaus"
  "Tobias Ellinghaus"
  "2016"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "file"
      "GFile"
      "The file to load"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "Output image"
    )
  )
)
(register-procedure "gimp-progress-get-window-handle"
  "Returns the native window ID of the toplevel window this plug-in's progress is displayed in."
  "This function returns the native window ID of the toplevel window this plug-in's progress is displayed in."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2004"
  "Internal GIMP procedure"
  (
  )
  (
    (
      "window"
      "gint"
      "The progress bar's toplevel window"
    )
  )
)
(register-procedure "gimp-image-duplicate"
  "Duplicate the specified image"
  "This procedure duplicates the specified image, copying all layers, channels, and image information."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1997"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
  )
  (
    (
      "new-image"
      "GimpImage"
      "The new, duplicated image"
    )
  )
)
(register-procedure "script-fu-drop-shadow"
  "Add a drop shadow to the selected region (or alpha)"
  ""
  "Sven Neumann <sven@@gimp.org>"
  "Sven Neumann"
  "1999/12/21"
  "Temporary Procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Image"
    )
    (
      "drawable"
      "GimpDrawable"
      "Drawable"
    )
    (
      "adjustment"
      "gdouble"
      "Offset X"
    )
    (
      "adjustment-2"
      "gdouble"
      "Offset Y"
    )
    (
      "adjustment-3"
      "gdouble"
      "Blur radius"
    )
    (
      "color"
      "GimpRGB"
      "Color"
    )
    (
      "adjustment-4"
      "gdouble"
      "Opacity"
    )
    (
      "toggle"
      "gboolean"
      "Allow resizing (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "gimp-item-get-parasite"
  "Look up a parasite in an item"
  "Finds and returns the parasite that is attached to an item."
  "Jay Cox"
  "Jay Cox"
  "1998"
  "Internal GIMP procedure"
  (
    (
      "item"
      "GimpItem"
      "The item"
    )
    (
      "name"
      "gchararray"
      "The name of the parasite to find"
    )
  )
  (
    (
      "parasite"
      "GimpParasite"
      "The found parasite"
    )
  )
)
(register-procedure "gimp-image-get-component-active"
  "Returns if the specified image's image component is active."
  "This procedure returns if the specified image's image component (i.e. Red, Green, Blue intensity channels in an RGB image) is active or inactive -- whether or not it can be modified. If the specified component is not valid for the image type, an error is returned."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "component"
      "GimpChannelType"
      "The image component @{ CHANNEL-RED (0), CHANNEL-GREEN (1), CHANNEL-BLUE (2), CHANNEL-GRAY (3), CHANNEL-INDEXED (4), CHANNEL-ALPHA (5) @}"
    )
  )
  (
    (
      "active"
      "gboolean"
      "Component is active (TRUE or FALSE)"
    )
  )
)
(register-procedure "plug-in-web-browser"
  "Open an URL in the user specified web browser"
  "Opens the given URL in the user specified web browser."
  "Henrik Brix Andersen <brix@@gimp.org>"
  "2003"
  "2003/09/16"
  "GIMP Plug-In"
  (
    (
      "url"
      "gchararray"
      "URL to open"
    )
  )
  (
  )
)
(register-procedure "gimp-item-transform-2d"
  "Transform the specified item in 2d."
  "This procedure transforms the specified item.

The transformation is done by scaling by the x and y scale factors about the point (source_x, source_y), then rotating around the same point, then translating that point to the new position (dest_x, dest_y).

If a selection exists and the item is a drawable, the portion of the drawable which lies under the selection is cut from the drawable and made into a floating selection which is then transformed as specified. The return value is the ID of the transformed floating selection.

If there is no selection or the item is not a drawable, the entire item will be transformed according to the specified parameters.
The return value will be equal to the item ID supplied as input.

This procedure is affected by the following context setters: 'gimp-context-set-interpolation', 'gimp-context-set-transform-direction', 'gimp-context-set-transform-resize'."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2010"
  "Internal GIMP procedure"
  (
    (
      "item"
      "GimpItem"
      "The affected item"
    )
    (
      "source-x"
      "gdouble"
      "X coordinate of the transformation center"
    )
    (
      "source-y"
      "gdouble"
      "Y coordinate of the transformation center"
    )
    (
      "scale-x"
      "gdouble"
      "Amount to scale in x direction"
    )
    (
      "scale-y"
      "gdouble"
      "Amount to scale in y direction"
    )
    (
      "angle"
      "gdouble"
      "The angle of rotation (radians)"
    )
    (
      "dest-x"
      "gdouble"
      "X coordinate of where the center goes"
    )
    (
      "dest-y"
      "gdouble"
      "Y coordinate of where the center goes"
    )
  )
  (
    (
      "item"
      "GimpItem"
      "The transformed item"
    )
  )
)
(register-procedure "gimp-image-get-active-layer"
  "Returns the specified image's active layer."
  "If there is an active layer, its ID will be returned, otherwise, -1. If a channel is currently active, then no layer will be. If a layer mask is active, then this will return the associated layer."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
  )
  (
    (
      "active-layer"
      "GimpLayer"
      "The active layer"
    )
  )
)
(register-procedure "gimp-context-set-gradient-blend-color-space"
  "Set the gradient blend color space."
  "Set the gradient blend color space for paint tools and the gradient tool."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2018"
  "Internal GIMP procedure"
  (
    (
      "blend-color-space"
      "GimpGradientBlendColorSpace"
      "Blend color space @{ GRADIENT-BLEND-RGB-PERCEPTUAL (0), GRADIENT-BLEND-RGB-LINEAR (1), GRADIENT-BLEND-CIE-LAB (2) @}"
    )
  )
  (
  )
)
(register-procedure "gimp-text-layer-get-text"
  "Get the text from a text layer as string."
  "This procedure returns the text from a text layer as a string."
  "Marcus Heese <heese@@cip.ifi.lmu.de>"
  "Marcus Heese"
  "2008"
  "Internal GIMP procedure"
  (
    (
      "layer"
      "GimpLayer"
      "The text layer"
    )
  )
  (
    (
      "text"
      "gchararray"
      "The text from the specified text layer."
    )
  )
)
(register-procedure "gimp-context-get-brush"
  "Retrieve the currently active brush."
  "This procedure returns the name of the currently active brush. All paint operations and stroke operations use this brush to control the application of paint to the image."
  "Michael Natterer <mitch@@gimp.org> & Sven Neumann <sven@@gimp.org>"
  "Michael Natterer & Sven Neumann"
  "2004"
  "Internal GIMP procedure"
  (
  )
  (
    (
      "name"
      "gchararray"
      "The name of the active brush"
    )
  )
)
(register-procedure "gimp-drawable-levels-stretch"
  "Automatically modifies intensity levels in the specified drawable."
  "This procedure allows intensity levels in the specified drawable to be remapped according to a set of guessed parameters. It is equivalent to clicking the \"Auto\" button in the Levels tool."
  "Joao S.O. Bueno, Shawn Willden"
  "Joao S.O. Bueno, Shawn Willden"
  "2003"
  "Internal GIMP procedure"
  (
    (
      "drawable"
      "GimpDrawable"
      "The drawable"
    )
  )
  (
  )
)
(register-procedure "gimp-item-transform-matrix"
  "Transform the specified item in 2d."
  "This procedure transforms the specified item.

The transformation is done by assembling a 3x3 matrix from the coefficients passed.

If a selection exists and the item is a drawable, the portion of the drawable which lies under the selection is cut from the drawable and made into a floating selection which is then transformed as specified. The return value is the ID of the transformed floating selection.

If there is no selection or the item is not a drawable, the entire item will be transformed according to the specified matrix.
The return value will be equal to the item ID supplied as input.

This procedure is affected by the following context setters: 'gimp-context-set-interpolation', 'gimp-context-set-transform-direction', 'gimp-context-set-transform-resize'."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2010"
  "Internal GIMP procedure"
  (
    (
      "item"
      "GimpItem"
      "The affected item"
    )
    (
      "coeff-0-0"
      "gdouble"
      "coefficient (0,0) of the transformation matrix"
    )
    (
      "coeff-0-1"
      "gdouble"
      "coefficient (0,1) of the transformation matrix"
    )
    (
      "coeff-0-2"
      "gdouble"
      "coefficient (0,2) of the transformation matrix"
    )
    (
      "coeff-1-0"
      "gdouble"
      "coefficient (1,0) of the transformation matrix"
    )
    (
      "coeff-1-1"
      "gdouble"
      "coefficient (1,1) of the transformation matrix"
    )
    (
      "coeff-1-2"
      "gdouble"
      "coefficient (1,2) of the transformation matrix"
    )
    (
      "coeff-2-0"
      "gdouble"
      "coefficient (2,0) of the transformation matrix"
    )
    (
      "coeff-2-1"
      "gdouble"
      "coefficient (2,1) of the transformation matrix"
    )
    (
      "coeff-2-2"
      "gdouble"
      "coefficient (2,2) of the transformation matrix"
    )
  )
  (
    (
      "item"
      "GimpItem"
      "The transformed item"
    )
  )
)
(register-procedure "gimp-drawable-set-pixel"
  "Sets the value of the pixel at the specified coordinates."
  "This procedure sets the pixel value at the specified coordinates. The 'num_channels' argument must always be equal to the bytes-per-pixel value for the specified drawable. Note that this function is not undoable, you should use it only on drawables you just created yourself."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1997"
  "Internal GIMP procedure"
  (
    (
      "drawable"
      "GimpDrawable"
      "The drawable"
    )
    (
      "x-coord"
      "gint"
      "The x coordinate (x-coord >= 0)"
    )
    (
      "y-coord"
      "gint"
      "The y coordinate (y-coord >= 0)"
    )
    (
      "num-channels"
      "gint"
      "The number of channels for the pixel (num-channels >= 0)"
    )
    (
      "pixel"
      "GimpUint8Array"
      "The pixel value"
    )
  )
  (
  )
)
(register-procedure "gimp-vectors-stroke-translate"
  "translate the given stroke."
  "Translate the given stroke."
  "Simon Budig"
  "Simon Budig"
  "2005"
  "Internal GIMP procedure"
  (
    (
      "vectors"
      "GimpVectors"
      "The vectors object"
    )
    (
      "stroke-id"
      "gint"
      "The stroke ID"
    )
    (
      "off-x"
      "gint"
      "Offset in x direction"
    )
    (
      "off-y"
      "gint"
      "Offset in y direction"
    )
  )
  (
  )
)
(register-procedure "gimp-brush-delete"
  "Deletes a brush."
  "This procedure deletes a brush."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2004"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The brush name"
    )
  )
  (
  )
)
(register-procedure "gimp-image-get-precision"
  "Get the precision of the image."
  "This procedure returns the image's precision."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2012"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
  )
  (
    (
      "precision"
      "GimpPrecision"
      "The image's precision @{ PRECISION-U8-LINEAR (100), PRECISION-U8-NON-LINEAR (150), PRECISION-U8-PERCEPTUAL (175), PRECISION-U16-LINEAR (200), PRECISION-U16-NON-LINEAR (250), PRECISION-U16-PERCEPTUAL (275), PRECISION-U32-LINEAR (300), PRECISION-U32-NON-LINEAR (350), PRECISION-U32-PERCEPTUAL (375), PRECISION-HALF-LINEAR (500), PRECISION-HALF-NON-LINEAR (550), PRECISION-HALF-PERCEPTUAL (575), PRECISION-FLOAT-LINEAR (600), PRECISION-FLOAT-NON-LINEAR (650), PRECISION-FLOAT-PERCEPTUAL (675), PRECISION-DOUBLE-LINEAR (700), PRECISION-DOUBLE-NON-LINEAR (750), PRECISION-DOUBLE-PERCEPTUAL (775), PRECISION-U8-GAMMA (150), PRECISION-U16-GAMMA (250), PRECISION-U32-GAMMA (350), PRECISION-HALF-GAMMA (550), PRECISION-FLOAT-GAMMA (650), PRECISION-DOUBLE-GAMMA (750) @}"
    )
  )
)
(register-procedure "gimp-progress-uninstall"
  "Uninstalls the progress callback for the current plug-in."
  "This function uninstalls any progress callback installed with 'gimp-progress-install' before."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2004"
  "Internal GIMP procedure"
  (
    (
      "progress-callback"
      "gchararray"
      "The name of the callback registered for this progress"
    )
  )
  (
  )
)
(register-procedure "file-sunras-load"
  "Load file of the SunRaster file format"
  "Load file of the SunRaster file format"
  "Peter Kirchgessner"
  "Peter Kirchgessner"
  "1996"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "file"
      "GFile"
      "The file to load"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "Output image"
    )
  )
)
(register-procedure "gimp-item-id-is-text-layer"
  "Returns whether the item ID is a text layer."
  "This procedure returns TRUE if the specified item ID is a text layer."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2010"
  "Internal GIMP procedure"
  (
    (
      "item-id"
      "gint"
      "The item ID"
    )
  )
  (
    (
      "text-layer"
      "gboolean"
      "TRUE if the item is a text layer, FALSE otherwise. (TRUE or FALSE)"
    )
  )
)
(register-procedure "gimp-palette-export-php"
  "Export the active palette as a PHP dictionary (name => color)"
  ""
  "Barak Itkin <lightningismyname@@gmail.com>"
  "Barak Itkin"
  "May 15th, 2009"
  "Temporary Procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "dirname"
      "gchararray"
      "Folder for the output file"
    )
    (
      "string"
      "gchararray"
      "The name of the file to create (if a file with this name already exist, it will be replaced)"
    )
  )
  (
  )
)
(register-procedure "gimp-context-get-ink-size-sensitivity"
  "Get ink size sensitivity."
  "Get the ink size sensitivity for ink tool."
  "Ed Swartz"
  "Ed Swartz"
  "2012"
  "Internal GIMP procedure"
  (
  )
  (
    (
      "size"
      "gdouble"
      "ink size sensitivity (0 <= size <= 1)"
    )
  )
)
(register-procedure "gimp-context-get-brush-angle"
  "Get brush angle in degrees."
  "Set the angle in degrees for brush based paint tools."
  "Ed Swartz"
  "Ed Swartz"
  "2012"
  "Internal GIMP procedure"
  (
  )
  (
    (
      "angle"
      "gdouble"
      "Angle in degrees (-180 <= angle <= 180)"
    )
  )
)
(register-procedure "file-psd-save"
  "Saves files in the Photoshop(tm) PSD file format"
  "This filter saves files of Adobe Photoshop(tm) native PSD format. These files may be of any image type supported by GIMP, with or without layers, layer masks, aux channels and guides."
  "Monigotes"
  "Monigotes"
  "2000"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The image to save"
    )
    (
      "num-drawables"
      "gint"
      "Number of drawables to be saved (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The drawables to save"
    )
    (
      "file"
      "GFile"
      "The file to save to"
    )
  )
  (
  )
)
(register-procedure "gimp-image-add-hguide"
  "Add a horizontal guide to an image."
  "This procedure adds a horizontal guide to an image. It takes the input image and the y-position of the new guide as parameters. It returns the guide ID of the new guide."
  "Adam D. Moss"
  "Adam D. Moss"
  "1998"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "yposition"
      "gint"
      "The guide's y-offset from top of image (yposition >= 0)"
    )
  )
  (
    (
      "guide"
      "guint"
      "The new guide"
    )
  )
)
(register-procedure "gimp-image-convert-rgb"
  "Convert specified image to RGB color"
  "This procedure converts the specified image to RGB color. This process requires an image in Grayscale or Indexed color mode. No image content is lost in this process aside from the colormap for an indexed image."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
  )
  (
  )
)
(register-procedure "gimp-context-get-paint-mode"
  "Get the paint mode."
  "This procedure returns the paint-mode setting. The return value is an integer which corresponds to the values listed in the argument description."
  "Michael Natterer <mitch@@gimp.org> & Sven Neumann <sven@@gimp.org>"
  "Michael Natterer & Sven Neumann"
  "2004"
  "Internal GIMP procedure"
  (
  )
  (
    (
      "paint-mode"
      "GimpLayerMode"
      "The paint mode @{ LAYER-MODE-NORMAL-LEGACY (0), LAYER-MODE-DISSOLVE (1), LAYER-MODE-BEHIND-LEGACY (2), LAYER-MODE-MULTIPLY-LEGACY (3), LAYER-MODE-SCREEN-LEGACY (4), LAYER-MODE-OVERLAY-LEGACY (5), LAYER-MODE-DIFFERENCE-LEGACY (6), LAYER-MODE-ADDITION-LEGACY (7), LAYER-MODE-SUBTRACT-LEGACY (8), LAYER-MODE-DARKEN-ONLY-LEGACY (9), LAYER-MODE-LIGHTEN-ONLY-LEGACY (10), LAYER-MODE-HSV-HUE-LEGACY (11), LAYER-MODE-HSV-SATURATION-LEGACY (12), LAYER-MODE-HSL-COLOR-LEGACY (13), LAYER-MODE-HSV-VALUE-LEGACY (14), LAYER-MODE-DIVIDE-LEGACY (15), LAYER-MODE-DODGE-LEGACY (16), LAYER-MODE-BURN-LEGACY (17), LAYER-MODE-HARDLIGHT-LEGACY (18), LAYER-MODE-SOFTLIGHT-LEGACY (19), LAYER-MODE-GRAIN-EXTRACT-LEGACY (20), LAYER-MODE-GRAIN-MERGE-LEGACY (21), LAYER-MODE-COLOR-ERASE-LEGACY (22), LAYER-MODE-OVERLAY (23), LAYER-MODE-LCH-HUE (24), LAYER-MODE-LCH-CHROMA (25), LAYER-MODE-LCH-COLOR (26), LAYER-MODE-LCH-LIGHTNESS (27), LAYER-MODE-NORMAL (28), LAYER-MODE-BEHIND (29), LAYER-MODE-MULTIPLY (30), LAYER-MODE-SCREEN (31), LAYER-MODE-DIFFERENCE (32), LAYER-MODE-ADDITION (33), LAYER-MODE-SUBTRACT (34), LAYER-MODE-DARKEN-ONLY (35), LAYER-MODE-LIGHTEN-ONLY (36), LAYER-MODE-HSV-HUE (37), LAYER-MODE-HSV-SATURATION (38), LAYER-MODE-HSL-COLOR (39), LAYER-MODE-HSV-VALUE (40), LAYER-MODE-DIVIDE (41), LAYER-MODE-DODGE (42), LAYER-MODE-BURN (43), LAYER-MODE-HARDLIGHT (44), LAYER-MODE-SOFTLIGHT (45), LAYER-MODE-GRAIN-EXTRACT (46), LAYER-MODE-GRAIN-MERGE (47), LAYER-MODE-VIVID-LIGHT (48), LAYER-MODE-PIN-LIGHT (49), LAYER-MODE-LINEAR-LIGHT (50), LAYER-MODE-HARD-MIX (51), LAYER-MODE-EXCLUSION (52), LAYER-MODE-LINEAR-BURN (53), LAYER-MODE-LUMA-DARKEN-ONLY (54), LAYER-MODE-LUMA-LIGHTEN-ONLY (55), LAYER-MODE-LUMINANCE (56), LAYER-MODE-COLOR-ERASE (57), LAYER-MODE-ERASE (58), LAYER-MODE-MERGE (59), LAYER-MODE-SPLIT (60), LAYER-MODE-PASS-THROUGH (61), LAYER-MODE-REPLACE (62), LAYER-MODE-ANTI-ERASE (63) @}"
    )
  )
)
(register-procedure "file-cel-load"
  "Loads files in KISS CEL file format"
  "This plug-in loads individual KISS cell files."
  "Nick Lamb"
  "Nick Lamb <njl195@@zepler.org.uk>"
  "May 1998"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "file"
      "GFile"
      "The file to load"
    )
    (
      "palette-filename"
      "gchararray"
      "Filename to load palette from"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "Output image"
    )
  )
)
(register-procedure "gimp-layer-get-edit-mask"
  "Get the edit mask setting of the specified layer."
  "This procedure returns the specified layer's edit mask setting. If the value is TRUE, then the layer mask for this layer is currently active, and not the layer."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "layer"
      "GimpLayer"
      "The layer"
    )
  )
  (
    (
      "edit-mask"
      "gboolean"
      "The layer's edit mask setting (TRUE or FALSE)"
    )
  )
)
(register-procedure "gimp-image-get-guide-orientation"
  "Get orientation of a guide on an image."
  "This procedure takes an image and a guide ID as input and returns the orientations of the guide."
  "Adam D. Moss"
  "Adam D. Moss"
  "1998"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "guide"
      "guint"
      "The guide"
    )
  )
  (
    (
      "orientation"
      "GimpOrientationType"
      "The guide's orientation @{ ORIENTATION-HORIZONTAL (0), ORIENTATION-VERTICAL (1) @}"
    )
  )
)
(register-procedure "gimp-get-parasite"
  "Look up a global parasite."
  "Finds and returns the global parasite that was previously attached."
  "Jay Cox"
  "Jay Cox"
  "1998"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The name of the parasite to find"
    )
  )
  (
    (
      "parasite"
      "GimpParasite"
      "The found parasite"
    )
  )
)
(register-procedure "file-gbr-save-internal"
  "Exports Gimp brush file (.GBR)"
  "Exports Gimp brush file (.GBR)"
  "Tim Newsome, Michael Natterer"
  "Tim Newsome, Michael Natterer"
  "1995-2019"
  "Internal GIMP procedure"
  (
    (
      "dummy-param"
      "GimpRunMode"
      "Dummy parameter @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image"
    )
    (
      "drawable"
      "GimpDrawable"
      "Active drawable of input image"
    )
    (
      "file"
      "GFile"
      "The file to export"
    )
    (
      "spacing"
      "gint"
      "Spacing of the brush (1 <= spacing <= 1000)"
    )
    (
      "name"
      "gchararray"
      "The name of the brush"
    )
  )
  (
  )
)
(register-procedure "file-pat-save"
  "Exports Gimp pattern file (.PAT)"
  "New Gimp patterns can be created by exporting them in the appropriate place with this plug-in."
  "Tim Newsome"
  "Tim Newsome"
  "1997"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The image to save"
    )
    (
      "num-drawables"
      "gint"
      "Number of drawables to be saved (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The drawables to save"
    )
    (
      "file"
      "GFile"
      "The file to save to"
    )
    (
      "description"
      "gchararray"
      "Short description of the pattern"
    )
  )
  (
  )
)
(register-procedure "gimp-item-set-tattoo"
  "Set the tattoo of the specified item."
  "This procedure sets the specified item's tattoo. A tattoo is a unique and permanent identifier attached to a item that can be used to uniquely identify a item within an image even between sessions."
  "Jay Cox"
  "Jay Cox"
  "1998"
  "Internal GIMP procedure"
  (
    (
      "item"
      "GimpItem"
      "The item"
    )
    (
      "tattoo"
      "guint"
      "The new item tattoo"
    )
  )
  (
  )
)
(register-procedure "gimp-image-unset-active-channel"
  "Unsets the active channel in the specified image."
  "If an active channel exists, it is unset. There then exists no active channel, and if desired, one can be set through a call to 'Set Active Channel'. No error is returned in the case of no existing active channel."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
  )
  (
  )
)
(register-procedure "gimp-image-raise-item-to-top"
  "Raise the specified item to the top of its level in its item tree"
  "This procedure raises the specified item to top of its level in the item tree. It will not move the item if there is no item above it."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2010"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "item"
      "GimpItem"
      "The item to raise to top"
    )
  )
  (
  )
)
(register-procedure "file-png-save"
  "Exports files in PNG file format"
  "This plug-in exports Portable Network Graphics (PNG) files."
  "Michael Sweet <mike@@easysw.com>, Daniel Skarda <0rfelyus@@atrey.karlin.mff.cuni.cz>"
  "Michael Sweet <mike@@easysw.com>, Daniel Skarda <0rfelyus@@atrey.karlin.mff.cuni.cz>, Nick Lamb <njl195@@zepler.org.uk>"
  "1.3.4 - 03 September 2002"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The image to save"
    )
    (
      "num-drawables"
      "gint"
      "Number of drawables to be saved (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The drawables to save"
    )
    (
      "file"
      "GFile"
      "The file to save to"
    )
    (
      "interlaced"
      "gboolean"
      "Use Adam7 interlacing (TRUE or FALSE)"
    )
    (
      "compression"
      "gint"
      "Deflate Compression factor (0..9) (0 <= compression <= 9)"
    )
    (
      "bkgd"
      "gboolean"
      "Write bKGD chunk (PNG metadata) (TRUE or FALSE)"
    )
    (
      "offs"
      "gboolean"
      "Write oFFs chunk (PNG metadata) (TRUE or FALSE)"
    )
    (
      "phys"
      "gboolean"
      "Write pHYs chunk (PNG metadata) (TRUE or FALSE)"
    )
    (
      "time"
      "gboolean"
      "Write tIME chunk (PNG metadata) (TRUE or FALSE)"
    )
    (
      "save-transparent"
      "gboolean"
      "Preserve color of completely transparent pixels (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "file-pdf-save"
  "Save files in PDF format"
  "Saves files in Adobe's Portable Document Format. PDF is designed to be easily processed by a variety of different platforms, and is a distant cousin of PostScript."
  "Barak Itkin, Lionel N., Jehan"
  "Copyright Barak Itkin, Lionel N., Jehan"
  "August 2009, 2017"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The image to save"
    )
    (
      "num-drawables"
      "gint"
      "Number of drawables to be saved (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The drawables to save"
    )
    (
      "file"
      "GFile"
      "The file to save to"
    )
    (
      "vectorize"
      "gboolean"
      "Convert bitmaps to vector graphics where possible. (TRUE or FALSE)"
    )
    (
      "ignore-hidden"
      "gboolean"
      "Omit hidden layers and layers with zero opacity. (TRUE or FALSE)"
    )
    (
      "apply-masks"
      "gboolean"
      "Apply layer masks before saving (Keeping them will not change the output), (TRUE or FALSE)"
    )
    (
      "layers-as-pages"
      "gboolean"
      "Layers as pages (bottom layers first). (TRUE or FALSE)"
    )
    (
      "reverse-order"
      "gboolean"
      "Reverse the pages order (top layers first). (TRUE or FALSE)"
    )
    (
      "convert-text-layers"
      "gboolean"
      "Convert text layers to raster graphics (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "gimp-smudge"
  "Smudge image with varying pressure."
  "This tool simulates a smudge using the current brush. High pressure results in a greater smudge of paint while low pressure results in a lesser smudge."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "drawable"
      "GimpDrawable"
      "The affected drawable"
    )
    (
      "pressure"
      "gdouble"
      "The pressure of the smudge strokes (0 <= pressure <= 100)"
    )
    (
      "num-strokes"
      "gint"
      "Number of stroke control points (count each coordinate as 2 points) (num-strokes >= 2)"
    )
    (
      "strokes"
      "GimpFloatArray"
      "Array of stroke coordinates: @{ s1.x, s1.y, s2.x, s2.y, ..., sn.x, sn.y @}"
    )
  )
  (
  )
)
(register-procedure "script-fu-gradient-example"
  "Create an image filled with an example of the current gradient"
  ""
  "Federico Mena Quintero"
  "Federico Mena Quintero"
  "June 1997"
  "Temporary Procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "adjustment"
      "gdouble"
      "Width"
    )
    (
      "adjustment-2"
      "gdouble"
      "Height"
    )
    (
      "toggle"
      "gboolean"
      "Gradient reverse (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "file-ico-load"
  "Loads files of Windows ICO file format"
  "Loads files of Windows ICO file format"
  "Christian Kreibich <christian@@whoop.org>"
  "Christian Kreibich <christian@@whoop.org>"
  "2002"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "file"
      "GFile"
      "The file to load"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "Output image"
    )
  )
)
(register-procedure "plug-in-mblur"
  "Simulate movement using directional blur"
  "This plug-in simulates the effect seen when photographing a moving object at a slow shutter speed. Done by adding multiple displaced copies."
  "Compatibility procedure. Please see 'gegl:motion-blur-linear, -zoom, -circular' for credits."
  "Compatibility procedure. Please see 'gegl:motion-blur-linear, -zoom, -circular' for credits."
  "2013"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
    (
      "type"
      "gint"
      "Type of motion blur @{ LINEAR (0), RADIAL (1), ZOOM (2) @} (0 <= type <= 2)"
    )
    (
      "length"
      "gdouble"
      "Length"
    )
    (
      "angle"
      "gdouble"
      "Angle (0 <= angle <= 360)"
    )
    (
      "center-x"
      "gdouble"
      "Center X"
    )
    (
      "center-y"
      "gdouble"
      "Center Y"
    )
  )
  (
  )
)
(register-procedure "gimp-vectors-remove-stroke"
  "remove the stroke from a vectors object."
  "Remove the stroke from a vectors object."
  "Simon Budig"
  "Simon Budig"
  "2005"
  "Internal GIMP procedure"
  (
    (
      "vectors"
      "GimpVectors"
      "The vectors object"
    )
    (
      "stroke-id"
      "gint"
      "The stroke ID"
    )
  )
  (
  )
)
(register-procedure "file-openraster-load-thumb"
  "loads a thumbnail from an OpenRaster (.ora) file"
  "loads a thumbnail from an OpenRaster (.ora) file"
  "Jon Nordby"
  "Jon Nordby"
  "2009"
  "GIMP Plug-In"
  (
    (
      "file"
      "GFile"
      "The file to load the thumbnail from"
    )
    (
      "thumb-size"
      "gint"
      "Preferred thumbnail size (16 <= thumb-size <= 2014)"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "Thumbnail image"
    )
    (
      "image-width"
      "gint"
      "Width of the full-sized image (0 for unknown) (0 <= image-width <= 524288)"
    )
    (
      "image-height"
      "gint"
      "Height of the full-sized image (0 for unknown) (0 <= image-height <= 524288)"
    )
    (
      "image-type"
      "GimpImageType"
      "Type of the image @{ RGB-IMAGE (0), RGBA-IMAGE (1), GRAY-IMAGE (2), GRAYA-IMAGE (3), INDEXED-IMAGE (4), INDEXEDA-IMAGE (5) @}"
    )
    (
      "num-layers"
      "gint"
      "Number of layers in the image (num-layers >= 1)"
    )
  )
)
(register-procedure "gimp-image-undo-freeze"
  "Freeze the image's undo stack."
  "This procedure freezes the image's undo stack, allowing subsequent operations to ignore their undo steps. This is generally called in conjunction with 'gimp-image-undo-thaw' to temporarily disable an image undo stack. This is advantageous because saving undo steps can be time and memory intensive. 'gimp-image-undo-freeze' / 'gimp-image-undo-thaw' and 'gimp-image-undo-disable' / 'gimp-image-undo-enable' differ in that the former does not free up all undo steps when undo is thawed, so is more suited to interactive in-situ previews. It is important in this case that the image is back to the same state it was frozen in before thawing, else 'undo' behaviour is undefined."
  "Adam D. Moss"
  "Adam D. Moss"
  "1999"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
  )
  (
    (
      "frozen"
      "gboolean"
      "TRUE if the image undo has been frozen (TRUE or FALSE)"
    )
  )
)
(register-procedure "script-fu-perspective-shadow"
  "Add a perspective shadow to the selected region (or alpha)"
  ""
  "Sven Neumann <sven@@gimp.org>"
  "Sven Neumann"
  "2000/11/08"
  "Temporary Procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Image"
    )
    (
      "drawable"
      "GimpDrawable"
      "Drawable"
    )
    (
      "adjustment"
      "gdouble"
      "Angle"
    )
    (
      "adjustment-2"
      "gdouble"
      "Relative distance of horizon"
    )
    (
      "adjustment-3"
      "gdouble"
      "Relative length of shadow"
    )
    (
      "adjustment-4"
      "gdouble"
      "Blur radius"
    )
    (
      "color"
      "GimpRGB"
      "Color"
    )
    (
      "adjustment-5"
      "gdouble"
      "Opacity"
    )
    (
      "enum"
      "gint"
      "Interpolation"
    )
    (
      "toggle"
      "gboolean"
      "Allow resizing (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "gimp-image-set-active-vectors"
  "Sets the specified image's active vectors."
  "If the path exists, it is set as the active path in the image."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "active-vectors"
      "GimpVectors"
      "The new image active vectors"
    )
  )
  (
  )
)
(register-procedure "gimp-palette-new"
  "Creates a new palette"
  "This procedure creates a new, uninitialized palette"
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2004"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The requested name of the new palette"
    )
  )
  (
    (
      "actual-name"
      "gchararray"
      "The actual new palette name"
    )
  )
)
(register-procedure "plug-in-script-fu-console"
  "Interactive console for Script-Fu development"
  "Provides an interface which allows interactive scheme development."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1997"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
  )
  (
  )
)
(register-procedure "gimp-context-get-brush-aspect-ratio"
  "Get brush aspect ratio."
  "Set the aspect ratio for brush based paint tools."
  "Ed Swartz"
  "Ed Swartz"
  "2012"
  "Internal GIMP procedure"
  (
  )
  (
    (
      "aspect"
      "gdouble"
      "Aspect ratio (-20 <= aspect <= 20)"
    )
  )
)
(register-procedure "plug-in-diffraction"
  "Generate diffraction patterns"
  "Help? What help?"
  "Compatibility procedure. Please see 'gegl:diffraction-patterns' for credits."
  "Compatibility procedure. Please see 'gegl:diffraction-patterns' for credits."
  "2015"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
    (
      "lam-r"
      "gdouble"
      "Light frequency (red) (0 <= lam-r <= 20)"
    )
    (
      "lam-g"
      "gdouble"
      "Light frequency (green) (0 <= lam-g <= 20)"
    )
    (
      "lam-b"
      "gdouble"
      "Light frequency (blue) (0 <= lam-b <= 20)"
    )
    (
      "contour-r"
      "gdouble"
      "Number of contours (red) (0 <= contour-r <= 10)"
    )
    (
      "contour-g"
      "gdouble"
      "Number of contours (green) (0 <= contour-g <= 10)"
    )
    (
      "contour-b"
      "gdouble"
      "Number of contours (blue) (0 <= contour-b <= 10)"
    )
    (
      "edges-r"
      "gdouble"
      "Number of sharp edges (red) (0 <= edges-r <= 1)"
    )
    (
      "edges-g"
      "gdouble"
      "Number of sharp edges (green) (0 <= edges-g <= 1)"
    )
    (
      "edges-b"
      "gdouble"
      "Number of sharp edges (blue) (0 <= edges-b <= 1)"
    )
    (
      "brightness"
      "gdouble"
      "Brightness and shifting/fattening of contours (0 <= brightness <= 1)"
    )
    (
      "scattering"
      "gdouble"
      "Scattering (Speed vs. quality) (0 <= scattering <= 100)"
    )
    (
      "polarization"
      "gdouble"
      "Polarization (-1 <= polarization <= 1)"
    )
  )
  (
  )
)
(register-procedure "gimp-context-push"
  "Pushes a context to the top of the plug-in's context stack."
  "This procedure creates a new context by copying the current context. This copy becomes the new current context for the calling plug-in until it is popped again using 'gimp-context-pop'."
  "Michael Natterer <mitch@@gimp.org> & Sven Neumann <sven@@gimp.org>"
  "Michael Natterer & Sven Neumann"
  "2004"
  "Internal GIMP procedure"
  (
  )
  (
  )
)
(register-procedure "gimp-layer-set-apply-mask"
  "Set the apply mask setting of the specified layer."
  "This procedure sets the specified layer's apply mask setting. This controls whether the layer's mask is currently affecting the alpha channel. If there is no layer mask, this function will return an error."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "layer"
      "GimpLayer"
      "The layer"
    )
    (
      "apply-mask"
      "gboolean"
      "The new layer's apply mask setting (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "gimp-online-developer-web-site"
  "Bookmark to the GIMP web site"
  ""
  "Henrik Brix Andersen <brix@@gimp.org>"
  "Henrik Brix Andersen <brix@@gimp.org>"
  "2003"
  "Temporary Procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
  )
  (
  )
)
(register-procedure "plug-in-metadata-viewer"
  "View metadata (Exif, IPTC, XMP)"
  "View metadata information attached to the current image. This can include Exif, IPTC and/or XMP information."
  "Hartmut Kuhse, Michael Natterer, Ben Touchette"
  "Hartmut Kuhse, Michael Natterer, Ben Touchette"
  "2013, 2017"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The input image"
    )
  )
  (
  )
)
(register-procedure "gimp-convolve-default"
  "Convolve (Blur, Sharpen) using the current brush."
  "This tool convolves the specified drawable with either a sharpening or blurring kernel. This function performs exactly the same as the 'gimp-convolve' function except that the tools arguments are obtained from the convolve option dialog. It this dialog has not been activated then the dialogs default values will be used."
  "Andy Thomas"
  "Andy Thomas"
  "1999"
  "Internal GIMP procedure"
  (
    (
      "drawable"
      "GimpDrawable"
      "The affected drawable"
    )
    (
      "num-strokes"
      "gint"
      "Number of stroke control points (count each coordinate as 2 points) (num-strokes >= 2)"
    )
    (
      "strokes"
      "GimpFloatArray"
      "Array of stroke coordinates: @{ s1.x, s1.y, s2.x, s2.y, ..., sn.x, sn.y @}"
    )
  )
  (
  )
)
(register-procedure "plug-in-small-tiles"
  "Tile image into smaller versions of the original"
  "More here later"
  "Andy Thomas"
  "Andy Thomas"
  "1997"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The input image"
    )
    (
      "num-drawables"
      "gint"
      "Number of input drawables (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The input drawables"
    )
    (
      "num-tiles"
      "gint"
      "Number of tiles to make (2 <= num-tiles <= 6)"
    )
  )
  (
  )
)
(register-procedure "gimp-unit-get-abbreviation"
  "Returns the abbreviation of the unit."
  "This procedure returns the abbreviation of the unit (\"in\" for inches)."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "1999"
  "Internal GIMP procedure"
  (
    (
      "unit-id"
      "GimpUnit"
      "The unit's integer ID"
    )
  )
  (
    (
      "abbreviation"
      "gchararray"
      "The unit's abbreviation"
    )
  )
)
(register-procedure "file-gih-load"
  "Loads GIMP animated brushes"
  "This procedure loads a GIMP brush pipe as an image."
  "Tor Lillqvist, Michael Natterer"
  "Tor Lillqvist, Michael Natterer"
  "1999-2019"
  "Internal GIMP procedure"
  (
    (
      "dummy-param"
      "GimpRunMode"
      "Dummy parameter @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "file"
      "GFile"
      "The file to load"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "Output image"
    )
  )
)
(register-procedure "plug-in-colormap-swap"
  "Swap two colors in the colormap"
  "This procedure takes an indexed image and lets you swap the positions of two colors in the colormap without visually changing the image."
  "Mukund Sivaraman <muks@@mukund.org>"
  "Mukund Sivaraman <muks@@mukund.org>"
  "June 2006"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The input image"
    )
    (
      "num-drawables"
      "gint"
      "Number of input drawables (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The input drawables"
    )
    (
      "index1"
      "guchar"
      "First index in the colormap"
    )
    (
      "index2"
      "guchar"
      "Second (other) index in the colormap"
    )
  )
  (
  )
)
(register-procedure "gimp-pdb-set-file-proc-load-handler"
  "Registers a file load handler procedure."
  "Registers a procedural database procedure to be called to load files of a particular file format using magic file information."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "procedure-name"
      "gchararray"
      "The name of the procedure to be used for loading"
    )
    (
      "extensions"
      "gchararray"
      "comma separated list of extensions this handler can load (i.e. \"jpg,jpeg\")"
    )
    (
      "prefixes"
      "gchararray"
      "comma separated list of prefixes this handler can load (i.e. \"http:,ftp:\")"
    )
    (
      "magics"
      "gchararray"
      "comma separated list of magic file information this handler can load (i.e. \"0,string,GIF\")"
    )
  )
  (
  )
)
(register-procedure "script-fu-distress-selection"
  "Distress the selection"
  ""
  "Chris Gutteridge"
  "1998, Chris Gutteridge / ECS dept, University of Southampton, England."
  "23rd April 1998"
  "Temporary Procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "drawable"
      "GimpDrawable"
      "The layer"
    )
    (
      "adjustment"
      "gdouble"
      "_Threshold (bigger 1<-->254 smaller)"
    )
    (
      "adjustment-2"
      "gdouble"
      "_Spread"
    )
    (
      "adjustment-3"
      "gdouble"
      "_Granularity (1 is low)"
    )
    (
      "adjustment-4"
      "gdouble"
      "S_mooth"
    )
    (
      "toggle"
      "gboolean"
      "Smooth hor_izontally (TRUE or FALSE)"
    )
    (
      "toggle-2"
      "gboolean"
      "Smooth _vertically (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "gimp-context-set-gradient"
  "Sets the specified gradient as the active gradient."
  "This procedure lets you set the specified gradient as the active or \"current\" one. The name is simply a string which corresponds to one of the loaded gradients. If no matching gradient is found, this procedure will return an error. Otherwise, the specified gradient will become active and will be used for subsequent custom gradient operations."
  "Michael Natterer <mitch@@gimp.org> & Sven Neumann <sven@@gimp.org>"
  "Michael Natterer & Sven Neumann"
  "2004"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The name of the gradient"
    )
  )
  (
  )
)
(register-procedure "gimp-drawable-invert"
  "Invert the contents of the specified drawable."
  "This procedure inverts the contents of the specified drawable. Each intensity channel is inverted independently. The inverted intensity is given as inten' = (255 - inten). If 'linear' is TRUE, the drawable is inverted in linear space."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "drawable"
      "GimpDrawable"
      "The drawable"
    )
    (
      "linear"
      "gboolean"
      "Whether to invert in linear space (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "gimp-image-get-file"
  "Returns the file for the specified image."
  "This procedure returns the file associated with the specified image. The image has a file only if it was loaded or imported from a file or has since been saved or exported. Otherwise, this function returns %NULL. See also gimp-image-get-imported-file to get the current file if it was imported from a non-GIMP file format and not yet saved, or gimp-image-get-exported-file if the image has been exported to a non-GIMP file format."
  "Sven Neumann <sven@@gimp.org>"
  "Sven Neumann"
  "2009"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
  )
  (
    (
      "file"
      "GFile"
      "The file."
    )
  )
)
(register-procedure "gimp-display-get-window-handle"
  "Get a handle to the native window for an image display."
  "This procedure returns a handle to the native window for a given image display. For example in the X backend of GDK, a native window handle is an Xlib XID. A value of 0 is returned for an invalid display or if this function is unimplemented for the windowing system that is being used."
  "Sven Neumann <sven@@gimp.org>"
  "Sven Neumann"
  "2005"
  "Internal GIMP procedure"
  (
    (
      "display"
      "GimpDisplay"
      "The display to get the window handle from"
    )
  )
  (
    (
      "window"
      "gint"
      "The native window handle or 0"
    )
  )
)
(register-procedure "gimp-brush-rename"
  "Renames a brush."
  "This procedure renames a brush."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2004"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The brush name"
    )
    (
      "new-name"
      "gchararray"
      "The new name of the brush"
    )
  )
  (
    (
      "actual-name"
      "gchararray"
      "The actual new name of the brush."
    )
  )
)
(register-procedure "gimp-image-freeze-channels"
  "Freeze the image's channel list."
  "This procedure freezes the channel list of the image, suppressing any updates to the Channels dialog in response to changes to the image's channels. This can significantly improve performance while applying changes affecting the channel list.

Each call to 'gimp-image-freeze-channels' should be matched by a corresponding call to 'gimp-image-thaw-channels', undoing its effects."
  "Ell"
  "Ell"
  "2018"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
  )
  (
  )
)
(register-procedure "plug-in-align-layers"
  "Align all visible layers of the image"
  "Align visible layers"
  "Shuji Narazaki <narazaki@@InetQ.or.jp>"
  "Shuji Narazaki"
  "1997"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The input image"
    )
    (
      "num-drawables"
      "gint"
      "Number of input drawables (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The input drawables"
    )
  )
  (
  )
)
(register-procedure "gimp-image-get-channel-by-tattoo"
  "Find a channel with a given tattoo in an image."
  "This procedure returns the channel with the given tattoo in the specified image."
  "Jay Cox"
  "Jay Cox"
  "1998"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "tattoo"
      "guint"
      "The tattoo of the channel to find"
    )
  )
  (
    (
      "channel"
      "GimpChannel"
      "The channel with the specified tattoo"
    )
  )
)
(register-procedure "gimp-context-get-ink-blob-aspect-ratio"
  "Get ink blob aspect ratio."
  "Get the ink blob aspect ratio for ink tool."
  "Ed Swartz"
  "Ed Swartz"
  "2012"
  "Internal GIMP procedure"
  (
  )
  (
    (
      "aspect"
      "gdouble"
      "ink blob aspect ratio (1 <= aspect <= 10)"
    )
  )
)
(register-procedure "gimp-image-add-sample-point"
  "Add a sample point to an image."
  "This procedure adds a sample point to an image. It takes the input image and the position of the new sample points as parameters. It returns the sample point ID of the new sample point."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2016"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "position-x"
      "gint"
      "The guide'sample points x-offset from left of image (position-x >= 0)"
    )
    (
      "position-y"
      "gint"
      "The guide'sample points y-offset from top of image (position-y >= 0)"
    )
  )
  (
    (
      "sample-point"
      "guint"
      "The new sample point"
    )
  )
)
(register-procedure "gimp-gradient-segment-range-set-blending-function"
  "Change the blending function of a segments range"
  "This function changes the blending function of a segment range to the specified blending function."
  "Shlomi Fish <shlomif@@iglu.org.il>"
  "Shlomi Fish"
  "2003"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The gradient name"
    )
    (
      "start-segment"
      "gint"
      "The index of the first segment to operate on (start-segment >= 0)"
    )
    (
      "end-segment"
      "gint"
      "The index of the last segment to operate on. If negative, the selection will extend to the end of the string."
    )
    (
      "blending-function"
      "GimpGradientSegmentType"
      "The blending function @{ GRADIENT-SEGMENT-LINEAR (0), GRADIENT-SEGMENT-CURVED (1), GRADIENT-SEGMENT-SINE (2), GRADIENT-SEGMENT-SPHERE-INCREASING (3), GRADIENT-SEGMENT-SPHERE-DECREASING (4), GRADIENT-SEGMENT-STEP (5) @}"
    )
  )
  (
  )
)
(register-procedure "gimp-image-get-base-type"
  "Get the base type of the image."
  "This procedure returns the image's base type. Layers in the image must be of this subtype, but can have an optional alpha channel."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
  )
  (
    (
      "base-type"
      "GimpImageBaseType"
      "The image's base type @{ RGB (0), GRAY (1), INDEXED (2) @}"
    )
  )
)
(register-procedure "script-fu-tile-blur"
  "Blur the edges of an image so the result tiles seamlessly"
  ""
  "Chris Gutteridge"
  "1998, Chris Gutteridge / ECS dept, University of Southampton, England."
  "25th April 1998"
  "Temporary Procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The Image"
    )
    (
      "drawable"
      "GimpDrawable"
      "The Layer"
    )
    (
      "adjustment"
      "gdouble"
      "Radius"
    )
    (
      "toggle"
      "gboolean"
      "Blur vertically (TRUE or FALSE)"
    )
    (
      "toggle-2"
      "gboolean"
      "Blur horizontally (TRUE or FALSE)"
    )
    (
      "option"
      "gint"
      "Blur type"
    )
  )
  (
  )
)
(register-procedure "gimp-selection-float"
  "Float the selection from the specified drawable with initial offsets as specified."
  "This procedure determines the region of the specified drawable that lies beneath the current selection. The region is then cut from the drawable and the resulting data is made into a new layer which is instantiated as a floating selection. The offsets allow initial positioning of the new floating selection."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "num-drawables"
      "gint"
      "The number of drawables (num-drawables >= 1)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The drawables from which to float selection"
    )
    (
      "offx"
      "gint"
      "x offset for translation"
    )
    (
      "offy"
      "gint"
      "y offset for translation"
    )
  )
  (
    (
      "layer"
      "GimpLayer"
      "The floated layer"
    )
  )
)
(register-procedure "file-pnm-save"
  "Exports files in the PNM file format"
  "PNM export handles all image types without transparency."
  "Erik Nygren"
  "Erik Nygren"
  "1996"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The image to save"
    )
    (
      "num-drawables"
      "gint"
      "Number of drawables to be saved (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The drawables to save"
    )
    (
      "file"
      "GFile"
      "The file to save to"
    )
    (
      "raw"
      "gboolean"
      "TRUE for raw output, FALSE for ascii output (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "gimp-brush-get-radius"
  "Gets the radius of a generated brush."
  "This procedure gets the radius value for a generated brush. If called for any other type of brush, it does not succeed."
  "Bill Skaggs <weskaggs@@primate.ucdavis.edu>"
  "Bill Skaggs"
  "2004"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The brush name"
    )
  )
  (
    (
      "radius"
      "gdouble"
      "The radius of the brush in pixels"
    )
  )
)
(register-procedure "gimp-drawable-threshold"
  "Threshold the specified drawable."
  "This procedures generates a threshold map of the specified drawable. All pixels between the values of 'low_threshold' and 'high_threshold', on the scale of 'channel' are replaced with white, and all other pixels with black."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1997"
  "Internal GIMP procedure"
  (
    (
      "drawable"
      "GimpDrawable"
      "The drawable"
    )
    (
      "channel"
      "GimpHistogramChannel"
      "The channel to base the threshold on @{ HISTOGRAM-VALUE (0), HISTOGRAM-RED (1), HISTOGRAM-GREEN (2), HISTOGRAM-BLUE (3), HISTOGRAM-ALPHA (4), HISTOGRAM-LUMINANCE (5), HISTOGRAM-RGB (6) @}"
    )
    (
      "low-threshold"
      "gdouble"
      "The low threshold value (0 <= low-threshold <= 1)"
    )
    (
      "high-threshold"
      "gdouble"
      "The high threshold value (0 <= high-threshold <= 1)"
    )
  )
  (
  )
)
(register-procedure "gimp-item-transform-translate"
  "Translate the item by the specified offsets."
  "This procedure translates the item by the amounts specified in the off_x and off_y arguments. These can be negative, and are considered offsets from the current position. The offsets will be rounded to the nearest pixel unless the item is a path."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2018"
  "Internal GIMP procedure"
  (
    (
      "item"
      "GimpItem"
      "The item"
    )
    (
      "off-x"
      "gdouble"
      "Offset in x direction"
    )
    (
      "off-y"
      "gdouble"
      "Offset in y direction"
    )
  )
  (
    (
      "item"
      "GimpItem"
      "The translated item"
    )
  )
)
(register-procedure "gimp-image-get-unit"
  "Returns the specified image's unit."
  "This procedure returns the specified image's unit. This value is independent of any of the layers in this image. See the gimp_unit_*() procedure definitions for the valid range of unit IDs and a description of the unit system."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "1998"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
  )
  (
    (
      "unit"
      "GimpUnit"
      "The unit"
    )
  )
)
(register-procedure "gimp-image-get-active-drawable"
  "Get the image's active drawable"
  "This procedure returns the ID of the image's active drawable. This can be either a layer, a channel, or a layer mask. The active drawable is specified by the active image channel. If that is -1, then by the active image layer. If the active image layer has a layer mask and the layer mask is in edit mode, then the layer mask is the active drawable."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
  )
  (
    (
      "drawable"
      "GimpDrawable"
      "The active drawable"
    )
  )
)
(register-procedure "gimp-context-get-gradient"
  "Retrieve the currently active gradient."
  "This procedure returns the name of the currently active gradient."
  "Michael Natterer <mitch@@gimp.org> & Sven Neumann <sven@@gimp.org>"
  "Michael Natterer & Sven Neumann"
  "2004"
  "Internal GIMP procedure"
  (
  )
  (
    (
      "name"
      "gchararray"
      "The name of the active gradient"
    )
  )
)
(register-procedure "gimp-image-get-layer-by-name"
  "Find a layer with a given name in an image."
  "This procedure returns the layer with the given name in the specified image."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2011"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "name"
      "gchararray"
      "The name of the layer to find"
    )
  )
  (
    (
      "layer"
      "GimpLayer"
      "The layer with the specified name"
    )
  )
)
(register-procedure "file-raw-placeholder-sony-load"
  "Load files in the Sony raw formats via placeholder"
  "This plug-in loads files in Sony's raw formats by calling placeholder."
  "Tobias Ellinghaus"
  "Tobias Ellinghaus"
  "2016"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "file"
      "GFile"
      "The file to load"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "Output image"
    )
  )
)
(register-procedure "file-raw-placeholder-orf-load"
  "Load files in the ORF raw format via placeholder"
  "This plug-in loads files in Olympus' raw ORF format by calling placeholder."
  "Tobias Ellinghaus"
  "Tobias Ellinghaus"
  "2016"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "file"
      "GFile"
      "The file to load"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "Output image"
    )
  )
)
(register-procedure "gimp-get-color-configuration"
  "Get a serialized version of the color management configuration."
  "Returns a string that can be deserialized into a GimpColorConfig object representing the current color management configuration."
  "Sven Neumann <sven@@gimp.org>"
  "Sven Neumann"
  "2005"
  "Internal GIMP procedure"
  (
  )
  (
    (
      "config"
      "gchararray"
      "Serialized color management configuration"
    )
  )
)
(register-procedure "gimp-context-get-background"
  "Get the current GIMP background color."
  "This procedure returns the current GIMP background color. The background color is used in a variety of tools such as blending, erasing (with non-alpha images), and image filling."
  "Michael Natterer <mitch@@gimp.org> & Sven Neumann <sven@@gimp.org>"
  "Michael Natterer & Sven Neumann"
  "2004"
  "Internal GIMP procedure"
  (
  )
  (
    (
      "background"
      "GimpRGB"
      "The background color"
    )
  )
)
(register-procedure "gimp-image-set-tattoo-state"
  "Set the tattoo state associated with the image."
  "This procedure sets the tattoo state of the image. Use only by save/load plug-ins that wish to preserve an images tattoo state. Using this function at other times will produce unexpected results. A full check of uniqueness of states in layers, channels and paths will be performed by this procedure and a execution failure will be returned if this fails. A failure will also be returned if the new tattoo state value is less than the maximum tattoo value from all of the tattoos from the paths, layers and channels. After the image data has been loaded and all the tattoos have been set then this is the last procedure that should be called. If effectively does a status check on the tattoo values that have been set to make sure that all is OK."
  "Andy Thomas"
  "Andy Thomas"
  "2000"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "tattoo-state"
      "guint"
      "The new image tattoo state"
    )
  )
  (
  )
)
(register-procedure "plug-in-autocrop-layer"
  "Crop the selected layers based on empty borders of the input drawable"
  "Crop the selected layers of the input \"image\" based on empty borders of the input \"drawable\". 

The input drawable serves as a base for detecting cropping extents (transparency or background color), and is not necessarily among the cropped layers (the current selected layers)."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1997"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
  )
  (
  )
)
(register-procedure "file-svg-load-thumb"
  "Generates a thumbnail of an SVG image"
  "Renders a thumbnail of an SVG file using librsvg."
  "Dom Lachowicz, Sven Neumann"
  "Dom Lachowicz <cinamod@@hotmail.com>"
  "2.5.0"
  "GIMP Plug-In"
  (
    (
      "file"
      "GFile"
      "The file to load the thumbnail from"
    )
    (
      "thumb-size"
      "gint"
      "Preferred thumbnail size (16 <= thumb-size <= 2014)"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "Thumbnail image"
    )
    (
      "image-width"
      "gint"
      "Width of the full-sized image (0 for unknown) (0 <= image-width <= 524288)"
    )
    (
      "image-height"
      "gint"
      "Height of the full-sized image (0 for unknown) (0 <= image-height <= 524288)"
    )
    (
      "image-type"
      "GimpImageType"
      "Type of the image @{ RGB-IMAGE (0), RGBA-IMAGE (1), GRAY-IMAGE (2), GRAYA-IMAGE (3), INDEXED-IMAGE (4), INDEXEDA-IMAGE (5) @}"
    )
    (
      "num-layers"
      "gint"
      "Number of layers in the image (num-layers >= 1)"
    )
  )
)
(register-procedure "gimp-context-get-palette"
  "Retrieve the currently active palette."
  "This procedure returns the name of the the currently active palette."
  "Michael Natterer <mitch@@gimp.org> & Sven Neumann <sven@@gimp.org>"
  "Michael Natterer & Sven Neumann"
  "2004"
  "Internal GIMP procedure"
  (
  )
  (
    (
      "name"
      "gchararray"
      "The name of the active palette"
    )
  )
)
(register-procedure "gimp-context-get-diagonal-neighbors"
  "Get the diagonal neighbors setting."
  "This procedure returns the diagonal neighbors setting."
  "Ell"
  "Ell"
  "2016"
  "Internal GIMP procedure"
  (
  )
  (
    (
      "diagonal-neighbors"
      "gboolean"
      "The diagonal neighbors setting (TRUE or FALSE)"
    )
  )
)
(register-procedure "gimp-context-set-feather-radius"
  "Set the feather radius setting."
  "This procedure modifies the feather radius setting.

This setting affects all procedures that are affected by 'gimp-context-set-feather'."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2010"
  "Internal GIMP procedure"
  (
    (
      "feather-radius-x"
      "gdouble"
      "The horizontal feather radius (0 <= feather-radius-x <= 1000)"
    )
    (
      "feather-radius-y"
      "gdouble"
      "The vertical feather radius (0 <= feather-radius-y <= 1000)"
    )
  )
  (
  )
)
(register-procedure "gimp-vectors-copy"
  "Copy a vectors object."
  "This procedure copies the specified vectors object and returns the copy."
  "Barak Itkin <lightningismyname@@gmail.com>"
  "Barak Itkin"
  "2008"
  "Internal GIMP procedure"
  (
    (
      "vectors"
      "GimpVectors"
      "The vectors object to copy"
    )
  )
  (
    (
      "vectors-copy"
      "GimpVectors"
      "The newly copied vectors object"
    )
  )
)
(register-procedure "plug-in-imagemap"
  "Create a clickable imagemap"
  ""
  "Maurits Rijk"
  "Maurits Rijk"
  "1998-2005"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The input image"
    )
    (
      "num-drawables"
      "gint"
      "Number of input drawables (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The input drawables"
    )
  )
  (
  )
)
(register-procedure "gimp-display-delete"
  "Delete the specified display."
  "This procedure removes the specified display. If this is the last remaining display for the underlying image, then the image is deleted also. Note that the display is closed no matter if the image is dirty or not. Better save the image before calling this procedure."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "display"
      "GimpDisplay"
      "The display to delete"
    )
  )
  (
  )
)
(register-procedure "file-openraster-load"
  "load an OpenRaster (.ora) file"
  "load an OpenRaster (.ora) file"
  "Jon Nordby"
  "Jon Nordby"
  "2009"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "file"
      "GFile"
      "The file to load"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "Output image"
    )
  )
)
(register-procedure "file-xz-load"
  "loads files compressed with xz"
  "This procedure loads files in the xz compressed format."
  "Daniel Risacher"
  "Daniel Risacher, Spencer Kimball and Peter Mattis"
  "1995-1997"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "file"
      "GFile"
      "The file to load"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "Output image"
    )
  )
)
(register-procedure "gimp-help-using-docks"
  "Bookmark to the user manual"
  ""
  "Roman Joost <romanofski@@gimp.org>"
  "Roman Joost <romanofski@@gimp.org>"
  "2006"
  "Temporary Procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
  )
  (
  )
)
(register-procedure "gimp-gradient-get-number-of-segments"
  "Returns the number of segments of the specified gradient"
  "This procedure returns the number of segments of the specified gradient."
  "Lars-Peter Clausen <lars@@metafoo.de>"
  "Lars-Peter Clausen"
  "2008"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The gradient name"
    )
  )
  (
    (
      "num-segments"
      "gint"
      "Number of segments"
    )
  )
)
(register-procedure "gimp-image-get-vectors-by-tattoo"
  "Find a vectors with a given tattoo in an image."
  "This procedure returns the vectors with the given tattoo in the specified image."
  "Simon Budig"
  "Simon Budig"
  "2005"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "tattoo"
      "guint"
      "The tattoo of the vectors to find"
    )
  )
  (
    (
      "vectors"
      "GimpVectors"
      "The vectors with the specified tattoo"
    )
  )
)
(register-procedure "script-fu-helloworld"
  "Creates an image with a user specified text string."
  ""
  "Kevin Cozens <kcozens@@interlog.com>"
  "Kevin Cozens"
  "February 29, 2004"
  "Temporary Procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "string"
      "gchararray"
      "Text string"
    )
    (
      "font"
      "gchararray"
      "Font"
    )
    (
      "adjustment"
      "gdouble"
      "Font size (pixels)"
    )
    (
      "color"
      "GimpRGB"
      "Color"
    )
  )
  (
  )
)
(register-procedure "plug-in-rotate"
  "Rotates a layer or the whole image by 90, 180 or 270 degrees"
  "This plug-in does rotate the active layer or the whole image clockwise by multiples of 90 degrees. When the whole image is chosen, the image is resized if necessary."
  "Sven Neumann <sven@@gimp.org>"
  "Sven Neumann"
  "2014"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
    (
      "angle"
      "gint"
      "Angle @{ 90 (1), 180 (2), 270 (3) @} degrees (1 <= angle <= 3)"
    )
    (
      "everything"
      "gboolean"
      "Rotate the whole image (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "gimp-vectors-stroke-flip"
  "flips the given stroke."
  "Rotates the given stroke around given center by angle (in degrees)."
  "João S. O. Bueno"
  "João S. O. Bueno"
  "2006"
  "Internal GIMP procedure"
  (
    (
      "vectors"
      "GimpVectors"
      "The vectors object"
    )
    (
      "stroke-id"
      "gint"
      "The stroke ID"
    )
    (
      "flip-type"
      "GimpOrientationType"
      "Flip orientation, either vertical or horizontal @{ ORIENTATION-HORIZONTAL (0), ORIENTATION-VERTICAL (1) @}"
    )
    (
      "axis"
      "gdouble"
      "axis coordinate about which to flip, in pixels"
    )
  )
  (
  )
)
(register-procedure "plug-in-nlfilt"
  "Nonlinear swiss army knife filter"
  "This is the pnmnlfilt, in gimp's clothing. See the pnmnlfilt manpage for details."
  "Graeme W. Gill, gimp 0.99 plug-in by Eric L. Hernes"
  "Graeme W. Gill, Eric L. Hernes"
  "1997"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The input image"
    )
    (
      "num-drawables"
      "gint"
      "Number of input drawables (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The input drawables"
    )
    (
      "alpha"
      "gdouble"
      "The amount of the filter to apply (0 <= alpha <= 1)"
    )
    (
      "radius"
      "gdouble"
      "The filter radius (0.333333 <= radius <= 1)"
    )
    (
      "filter"
      "gint"
      "The Filter to Run, 0 - alpha trimmed mean; 1 - optimal estimation (alpha controls noise variance); 2 - edge enhancement (0 <= filter <= 2)"
    )
  )
  (
  )
)
(register-procedure "gimp-context-set-palette"
  "Set the specified palette as the active palette."
  "This procedure allows the active palette to be set by specifying its name. The name is simply a string which corresponds to one of the names of the installed palettes. If no matching palette is found, this procedure will return an error. Otherwise, the specified palette becomes active and will be used in all subsequent palette operations."
  "Michael Natterer <mitch@@gimp.org> & Sven Neumann <sven@@gimp.org>"
  "Michael Natterer & Sven Neumann"
  "2004"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The name of the palette"
    )
  )
  (
  )
)
(register-procedure "file-dicom-save"
  "Save file in the DICOM file format"
  "Save an image in the medical standard DICOM image formats. The standard is defined at http://medical.nema.org/. The file format is defined in section 10 of the standard. The files are saved uncompressed and the compulsory DICOM tags are filled with default dummy values."
  "Dov Grobgeld"
  "Dov Grobgeld <dov@@imagic.weizmann.ac.il>"
  "2003"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The image to save"
    )
    (
      "num-drawables"
      "gint"
      "Number of drawables to be saved (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The drawables to save"
    )
    (
      "file"
      "GFile"
      "The file to save to"
    )
  )
  (
  )
)
(register-procedure "gimp-context-set-brush-hardness"
  "Set brush hardness."
  "Set the brush hardness for brush based paint tools."
  "Alexia Death"
  "Alexia Death"
  "2014"
  "Internal GIMP procedure"
  (
    (
      "hardness"
      "gdouble"
      "Brush hardness (0 <= hardness <= 1)"
    )
  )
  (
  )
)
(register-procedure "gimp-convolve"
  "Convolve (Blur, Sharpen) using the current brush."
  "This tool convolves the specified drawable with either a sharpening or blurring kernel. The pressure parameter controls the magnitude of the operation. Like the paintbrush, this tool linearly interpolates between the specified stroke coordinates."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "drawable"
      "GimpDrawable"
      "The affected drawable"
    )
    (
      "pressure"
      "gdouble"
      "The pressure (0 <= pressure <= 100)"
    )
    (
      "convolve-type"
      "GimpConvolveType"
      "Convolve type @{ CONVOLVE-BLUR (0), CONVOLVE-SHARPEN (1) @}"
    )
    (
      "num-strokes"
      "gint"
      "Number of stroke control points (count each coordinate as 2 points) (num-strokes >= 2)"
    )
    (
      "strokes"
      "GimpFloatArray"
      "Array of stroke coordinates: @{ s1.x, s1.y, s2.x, s2.y, ..., sn.x, sn.y @}"
    )
  )
  (
  )
)
(register-procedure "gimp-gradient-segment-set-middle-pos"
  "Sets the middle point position of the specified segment"
  "This procedure sets the middle point position of the specified segment of the specified gradient. The final position will be between the two endpoints of the segment.
This procedure returns the final position."
  "Shlomi Fish <shlomif@@iglu.org.il>"
  "Shlomi Fish"
  "2003"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The gradient name"
    )
    (
      "segment"
      "gint"
      "The index of the segment within the gradient (segment >= 0)"
    )
    (
      "pos"
      "gdouble"
      "The position to set the guidepoint to (0 <= pos <= 1)"
    )
  )
  (
    (
      "final-pos"
      "gdouble"
      "The return position"
    )
  )
)
(register-procedure "gimp-context-get-ink-speed-sensitivity"
  "Get ink speed sensitivity."
  "Get the ink speed sensitivity for ink tool."
  "Ed Swartz"
  "Ed Swartz"
  "2012"
  "Internal GIMP procedure"
  (
  )
  (
    (
      "speed"
      "gdouble"
      "ink speed sensitivity (0 <= speed <= 1)"
    )
  )
)
(register-procedure "plug-in-colortoalpha"
  "Convert a specified color to transparency"
  "This replaces as much of a given color as possible in each pixel with a corresponding amount of alpha, then readjusts the color accordingly."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1999"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
    (
      "color"
      "GimpRGB"
      "Color to remove"
    )
  )
  (
  )
)
(register-procedure "file-gbr-save"
  "Exports files in the GIMP brush file format"
  "Exports files in the GIMP brush file format"
  "Tim Newsome, Jens Lautenbacher, Sven Neumann"
  "Tim Newsome, Jens Lautenbacher, Sven Neumann"
  "1997-2000"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The image to save"
    )
    (
      "num-drawables"
      "gint"
      "Number of drawables to be saved (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The drawables to save"
    )
    (
      "file"
      "GFile"
      "The file to save to"
    )
    (
      "spacing"
      "gint"
      "Spacing of the brush (1 <= spacing <= 1000)"
    )
    (
      "description"
      "gchararray"
      "Short description of the brush"
    )
  )
  (
  )
)
(register-procedure "gimp-context-set-ink-blob-aspect-ratio"
  "Set ink blob aspect ratio."
  "Set the ink blob aspect ratio for ink tool."
  "Ed Swartz"
  "Ed Swartz"
  "2012"
  "Internal GIMP procedure"
  (
    (
      "aspect"
      "gdouble"
      "ink blob aspect ratio (1 <= aspect <= 10)"
    )
  )
  (
  )
)
(register-procedure "gimp-image-delete-guide"
  "Deletes a guide from an image."
  "This procedure takes an image and a guide ID as input and removes the specified guide from the specified image."
  "Adam D. Moss"
  "Adam D. Moss"
  "1998"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "guide"
      "guint"
      "The ID of the guide to be removed"
    )
  )
  (
  )
)
(register-procedure "gimp-context-get-gradient-reverse"
  "Get the gradient reverse setting."
  "Get the gradient reverse setting for paint tools and the gradient tool."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2018"
  "Internal GIMP procedure"
  (
  )
  (
    (
      "reverse"
      "gboolean"
      "Reverse (TRUE or FALSE)"
    )
  )
)
(register-procedure "gimp-context-get-brush-spacing"
  "Get brush spacing as percent of size."
  "Get the brush spacing as percent of size for brush based paint tools."
  "Alexia Death"
  "Alexia Death"
  "2014"
  "Internal GIMP procedure"
  (
  )
  (
    (
      "spacing"
      "gdouble"
      "Brush spacing as fraction of size (0.01 <= spacing <= 50)"
    )
  )
)
(register-procedure "gimp-image-get-active-channel"
  "Returns the specified image's active channel."
  "If there is an active channel, this will return the channel ID, otherwise, -1."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
  )
  (
    (
      "active-channel"
      "GimpChannel"
      "The active channel"
    )
  )
)
(register-procedure "plug-in-sel2path"
  "Converts a selection to a path"
  "Converts a selection to a path"
  "Andy Thomas"
  "Andy Thomas"
  "1999"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The input image"
    )
    (
      "num-drawables"
      "gint"
      "Number of input drawables (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The input drawables"
    )
    (
      "align-threshold"
      "gdouble"
      "Align threshold (0.2 <= align-threshold <= 2)"
    )
    (
      "corner-always-threshold"
      "gdouble"
      "Corner always threshold (30 <= corner-always-threshold <= 180)"
    )
    (
      "corner-surround"
      "gint"
      "Corner surround (3 <= corner-surround <= 8)"
    )
    (
      "corner-threshold"
      "gdouble"
      "Corner threshold (0 <= corner-threshold <= 180)"
    )
    (
      "error-threshold"
      "gdouble"
      "Error threshold (0.2 <= error-threshold <= 10)"
    )
    (
      "filter-alternative-surround"
      "gint"
      "Filter alternative surround (1 <= filter-alternative-surround <= 10)"
    )
    (
      "filter-epsilon"
      "gdouble"
      "Filter epsilon (5 <= filter-epsilon <= 40)"
    )
    (
      "filter-iteration-count"
      "gint"
      "Filter iteration count (4 <= filter-iteration-count <= 70)"
    )
    (
      "filter-percent"
      "gdouble"
      "Filter percent (0 <= filter-percent <= 1)"
    )
    (
      "filter-secondary-surround"
      "gint"
      "Filter secondary surround (3 <= filter-secondary-surround <= 10)"
    )
    (
      "filter-surround"
      "gint"
      "Filter surround (2 <= filter-surround <= 10)"
    )
    (
      "keep-knees"
      "gboolean"
      "Keep knees (TRUE or FALSE)"
    )
    (
      "line-reversion-threshold"
      "gdouble"
      "Line reversion threshold (0.01 <= line-reversion-threshold <= 0.2)"
    )
    (
      "line-threshold"
      "gdouble"
      "Line threshold (0.2 <= line-threshold <= 4)"
    )
    (
      "reparametrize-improvement"
      "gdouble"
      "Reparametrize improvement (0 <= reparametrize-improvement <= 1)"
    )
    (
      "reparametrize-threshold"
      "gdouble"
      "Reparametrize threshold (1 <= reparametrize-threshold <= 50)"
    )
    (
      "subdivide-search"
      "gdouble"
      "Subdivide search (0.05 <= subdivide-search <= 1)"
    )
    (
      "subdivide-surround"
      "gint"
      "Subdivide surround (2 <= subdivide-surround <= 10)"
    )
    (
      "subdivide-threshold"
      "gdouble"
      "Subdivide threshold (0.01 <= subdivide-threshold <= 1)"
    )
    (
      "tangent-surround"
      "gint"
      "Tangent surround (2 <= tangent-surround <= 10)"
    )
  )
  (
  )
)
(register-procedure "gimp-context-get-gradient-repeat-mode"
  "Get the gradient repeat mode."
  "Get the gradient repeat mode for paint tools and the gradient tool."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2018"
  "Internal GIMP procedure"
  (
  )
  (
    (
      "repeat-mode"
      "GimpRepeatMode"
      "Repeat mode @{ REPEAT-NONE (0), REPEAT-SAWTOOTH (1), REPEAT-TRIANGULAR (2), REPEAT-TRUNCATE (3) @}"
    )
  )
)
(register-procedure "file-raw-placeholder-x3f-load"
  "Load files in the X3F raw format via placeholder"
  "This plug-in loads files in Sigma's raw X3F format by calling placeholder."
  "Tobias Ellinghaus"
  "Tobias Ellinghaus"
  "2016"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "file"
      "GFile"
      "The file to load"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "Output image"
    )
  )
)
(register-procedure "gimp-image-grid-set-background-color"
  "Gets the background color of an image's grid."
  "This procedure sets the background color of an image's grid."
  "Sylvain Foret"
  "Sylvain Foret"
  "2005"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "bgcolor"
      "GimpRGB"
      "The new background color"
    )
  )
  (
  )
)
(register-procedure "plug-in-checkerboard"
  "Create a checkerboard pattern"
  "More here later"
  "Brent Burton & the Edward Blevins"
  "Brent Burton & the Edward Blevins"
  "1997"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The input image"
    )
    (
      "num-drawables"
      "gint"
      "Number of input drawables (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The input drawables"
    )
    (
      "psychobily"
      "gboolean"
      "Render a psychobiliy checkerboard (TRUE or FALSE)"
    )
    (
      "check-size"
      "gint"
      "Size of the checks (1 <= check-size <= 524288)"
    )
  )
  (
  )
)
(register-procedure "gimp-drawable-get-format"
  "Returns the drawable's Babl format"
  "This procedure returns the drawable's Babl format.
Note that the actual PDB procedure only transfers the format's encoding. In order to get to the real format, the libbgimp C wrapper must be used."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2012"
  "Internal GIMP procedure"
  (
    (
      "drawable"
      "GimpDrawable"
      "The drawable"
    )
  )
  (
    (
      "format"
      "gchararray"
      "The drawable's Babl format"
    )
  )
)
(register-procedure "gimp-gradient-segment-range-replicate"
  "Replicate the segment range"
  "This function replicates a segment range a given number of times. Instead of the original segment range, several smaller scaled copies of it will appear in equal widths."
  "Shlomi Fish <shlomif@@iglu.org.il>"
  "Shlomi Fish"
  "2003"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The gradient name"
    )
    (
      "start-segment"
      "gint"
      "The index of the first segment to operate on (start-segment >= 0)"
    )
    (
      "end-segment"
      "gint"
      "The index of the last segment to operate on. If negative, the selection will extend to the end of the string."
    )
    (
      "replicate-times"
      "gint"
      "The number of times to replicate (2 <= replicate-times <= 20)"
    )
  )
  (
  )
)
(register-procedure "gimp-drawable-update"
  "Update the specified region of the drawable."
  "This procedure updates the specified region of the drawable. The (x, y) coordinate pair is relative to the drawable's origin, not to the image origin. Therefore, the entire drawable can be updated using (0, 0, width, height)."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "drawable"
      "GimpDrawable"
      "The drawable"
    )
    (
      "x"
      "gint"
      "x coordinate of upper left corner of update region"
    )
    (
      "y"
      "gint"
      "y coordinate of upper left corner of update region"
    )
    (
      "width"
      "gint"
      "Width of update region"
    )
    (
      "height"
      "gint"
      "Height of update region"
    )
  )
  (
  )
)
(register-procedure "plug-in-autostretch-hsv"
  "Stretch contrast to cover the maximum possible range"
  "This simple plug-in does an automatic contrast stretch. For each channel in the image, it finds the minimum and maximum values... it uses those values to stretch the individual histograms to the full contrast range. For some images it may do just what you want; for others it may be total crap :). This version differs from Contrast Autostretch in that it works in HSV space, and preserves hue."
  "Compatibility procedure. Please see 'gegl:stretch-contrast-hsv' for credits."
  "Compatibility procedure. Please see 'gegl:stretch-contrast-hsv' for credits."
  "2013"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
  )
  (
  )
)
(register-procedure "gimp-file-load-layer"
  "Loads an image file as a layer for an existing image."
  "This procedure behaves like the file-load procedure but opens the specified image as a layer for an existing image. The returned layer needs to be added to the existing image with 'gimp-image-insert-layer'."
  "Sven Neumann <sven@@gimp.org>"
  "Sven Neumann"
  "2005"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1) @}"
    )
    (
      "image"
      "GimpImage"
      "Destination image"
    )
    (
      "file"
      "GFile"
      "The file to load"
    )
  )
  (
    (
      "layer"
      "GimpLayer"
      "The layer created when loading the image file"
    )
  )
)
(register-procedure "gimp-selection-none"
  "Deselect the entire image."
  "This procedure deselects the entire image. Every pixel in the selection channel is set to 0."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
  )
  (
  )
)
(register-procedure "plug-in-autocrop"
  "Remove empty borders from the image"
  "Remove empty borders from the image."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1997"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
  )
  (
  )
)
(register-procedure "gimp-image-delete-sample-point"
  "Deletes a sample point from an image."
  "This procedure takes an image and a sample point ID as input and removes the specified sample point from the specified image."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2016"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "sample-point"
      "guint"
      "The ID of the sample point to be removed"
    )
  )
  (
  )
)
(register-procedure "script-fu-line-nova"
  "Fill a layer with rays emanating outward from its center using the foreground color"
  ""
  "Shuji Narazaki <narazaki@@gimp.org>"
  "Shuji Narazaki"
  "1997,1998"
  "Temporary Procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Image"
    )
    (
      "drawable"
      "GimpDrawable"
      "Drawable"
    )
    (
      "adjustment"
      "gdouble"
      "Number of lines"
    )
    (
      "adjustment-2"
      "gdouble"
      "Sharpness (degrees)"
    )
    (
      "adjustment-3"
      "gdouble"
      "Offset radius"
    )
    (
      "adjustment-4"
      "gdouble"
      "Randomness"
    )
  )
  (
  )
)
(register-procedure "gimp-vectors-stroke-get-point-at-dist"
  "Get point at a specified distance along the stroke."
  "This will return the x,y position of a point at a given distance along the stroke. The distance will be obtained by first digitizing the curve internally and then walking along the curve. For a closed stroke the start of the path is the first point on the path that was created. This might not be obvious. If the stroke is not long enough, a \"valid\" flag will be FALSE."
  "Simon Budig"
  "Simon Budig"
  "2005"
  "Internal GIMP procedure"
  (
    (
      "vectors"
      "GimpVectors"
      "The vectors object"
    )
    (
      "stroke-id"
      "gint"
      "The stroke ID"
    )
    (
      "dist"
      "gdouble"
      "The given distance."
    )
    (
      "precision"
      "gdouble"
      "The precision used for the approximation"
    )
  )
  (
    (
      "x-point"
      "gdouble"
      "The x position of the point."
    )
    (
      "y-point"
      "gdouble"
      "The y position of the point."
    )
    (
      "slope"
      "gdouble"
      "The slope (dy / dx) at the specified point."
    )
    (
      "valid"
      "gboolean"
      "Indicator for the validity of the returned data. (TRUE or FALSE)"
    )
  )
)
(register-procedure "gimp-drawable-desaturate"
  "Desaturate the contents of the specified drawable, with the specified formula."
  "This procedure desaturates the contents of the specified drawable, with the specified formula. This procedure only works on drawables of type RGB color."
  "Karine Delvare"
  "Karine Delvare"
  "2005"
  "Internal GIMP procedure"
  (
    (
      "drawable"
      "GimpDrawable"
      "The drawable"
    )
    (
      "desaturate-mode"
      "GimpDesaturateMode"
      "The formula to use to desaturate @{ DESATURATE-LIGHTNESS (0), DESATURATE-LUMA (1), DESATURATE-AVERAGE (2), DESATURATE-LUMINANCE (3), DESATURATE-VALUE (4) @}"
    )
  )
  (
  )
)
(register-procedure "gimp-progress-update"
  "Updates the progress bar for the current plug-in."
  "Updates the progress bar for the current plug-in. It is only valid to call this procedure from a plug-in."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "percentage"
      "gdouble"
      "Percentage of progress completed which must be between 0.0 and 1.0"
    )
  )
  (
  )
)
(register-procedure "gimp-brush-get-spikes"
  "Gets the number of spikes for a generated brush."
  "This procedure gets the number of spikes for a generated brush. If called for any other type of brush, it does not succeed."
  "Bill Skaggs <weskaggs@@primate.ucdavis.edu>"
  "Bill Skaggs"
  "2004"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The brush name"
    )
  )
  (
    (
      "spikes"
      "gint"
      "The number of spikes on the brush."
    )
  )
)
(register-procedure "gimp-attach-parasite"
  "Add a global parasite."
  "This procedure attaches a global parasite. It has no return values."
  "Jay Cox"
  "Jay Cox"
  "1998"
  "Internal GIMP procedure"
  (
    (
      "parasite"
      "GimpParasite"
      "The parasite to attach"
    )
  )
  (
  )
)
(register-procedure "plug-in-ripple"
  "Displace pixels in a ripple pattern"
  "Ripples the pixels of the specified drawable. Each row or column will be displaced a certain number of pixels coinciding with the given wave form."
  "Compatibility procedure. Please see 'gegl:ripple' for credits."
  "Compatibility procedure. Please see 'gegl:ripple' for credits."
  "2018"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
    (
      "period"
      "gint"
      "Period: number of pixels for one wave to complete"
    )
    (
      "amplitude"
      "gint"
      "Amplitude: maximum displacement of wave"
    )
    (
      "orientation"
      "gint"
      "Orientation @{ ORIENTATION-HORIZONTAL (0), ORIENTATION-VERTICAL (1) @} (0 <= orientation <= 1)"
    )
    (
      "edges"
      "gint"
      "Edges @{ SMEAR (0), WRAP (1), BLANK (2) @} (0 <= edges <= 2)"
    )
    (
      "waveform"
      "gint"
      "Waveform @{ SAWTOOTH (0), SINE (1) @} (0 <= waveform <= 1)"
    )
    (
      "antialias"
      "gboolean"
      "Antialias @{ TRUE, FALSE @} (TRUE or FALSE)"
    )
    (
      "tile"
      "gboolean"
      "Tileable @{ TRUE, FALSE @} (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "gimp-drawable-edit-bucket-fill"
  "Fill the area by a seed fill starting at the specified coordinates."
  "This procedure does a seed fill at the specified coordinates, using various parameters from the current context.
In the case of merged sampling, the x and y coordinates are relative to the image's origin; otherwise, they are relative to the drawable's origin.

This procedure is affected by the following context setters: 'gimp-context-set-opacity', 'gimp-context-set-paint-mode', 'gimp-context-set-foreground', 'gimp-context-set-background', 'gimp-context-set-pattern', 'gimp-context-set-sample-threshold', 'gimp-context-set-sample-merged', 'gimp-context-set-sample-criterion', 'gimp-context-set-diagonal-neighbors', 'gimp-context-set-antialias'."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2018"
  "Internal GIMP procedure"
  (
    (
      "drawable"
      "GimpDrawable"
      "The affected drawable"
    )
    (
      "fill-type"
      "GimpFillType"
      "The type of fill @{ FILL-FOREGROUND (0), FILL-BACKGROUND (1), FILL-WHITE (2), FILL-TRANSPARENT (3), FILL-PATTERN (4) @}"
    )
    (
      "x"
      "gdouble"
      "The x coordinate of this bucket fill's application."
    )
    (
      "y"
      "gdouble"
      "The y coordinate of this bucket fill's application."
    )
  )
  (
  )
)
(register-procedure "gimp-layer-new-from-visible"
  "Create a new layer from what is visible in an image."
  "This procedure creates a new layer from what is visible in the given image. The new layer still needs to be added to the destination image, as this is not automatic. Add the new layer with the 'gimp-image-insert-layer' command. Other attributes such as layer mask modes, and offsets should be set with explicit procedure calls."
  "Sven Neumann <sven@@gimp.org>"
  "Sven Neumann"
  "2008"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The source image from where the content is copied"
    )
    (
      "dest-image"
      "GimpImage"
      "The destination image to which to add the layer"
    )
    (
      "name"
      "gchararray"
      "The layer name"
    )
  )
  (
    (
      "layer"
      "GimpLayer"
      "The newly created layer"
    )
  )
)
(register-procedure "gimp-text-layer-set-indent"
  "Set the indentation of the first line in a text layer."
  "This procedure sets the indentation of the first line in the text layer."
  "Marcus Heese <heese@@cip.ifi.lmu.de>"
  "Marcus Heese"
  "2008"
  "Internal GIMP procedure"
  (
    (
      "layer"
      "GimpLayer"
      "The text layer"
    )
    (
      "indent"
      "gdouble"
      "The indentation for the first line. (-8192 <= indent <= 8192)"
    )
  )
  (
  )
)
(register-procedure "gimp-palette-get-colors"
  "Gets all colors from the specified palette."
  "This procedure retrieves all color entries of the specified palette."
  "Sven Neumann <sven@@gimp.org>"
  "Sven Neumann"
  "2006"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The palette name"
    )
  )
  (
    (
      "num-colors"
      "gint"
      "Length of the colors array (num-colors >= 0)"
    )
    (
      "colors"
      "GimpRGBArray"
      "The colors in the palette"
    )
  )
)
(register-procedure "plug-in-convmatrix"
  "Apply a generic 5x5 convolution matrix"
  "Apply a generic 5x5 convolution matrix."
  "Compatibility procedure. Please see 'gegl:convolution-matrix' for credits."
  "Compatibility procedure. Please see 'gegl:convolution-matrix' for credits."
  "2014"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
    (
      "argc-matrix"
      "gint"
      "The number of elements in the following array, must always be 25 (argc-matrix >= 0)"
    )
    (
      "matrix"
      "GimpFloatArray"
      "The 5x5 convolution matrix"
    )
    (
      "alpha-alg"
      "gboolean"
      "Enable weighting by alpha channel (TRUE or FALSE)"
    )
    (
      "divisor"
      "gdouble"
      "Divisor"
    )
    (
      "offset"
      "gdouble"
      "Offset"
    )
    (
      "argc-channels"
      "gint"
      "The number of elements in following array, must always be 5 (argc-channels >= 0)"
    )
    (
      "channels"
      "GimpInt32Array"
      "Mask of the channels to be filtered"
    )
    (
      "bmode"
      "gint"
      "Mode for treating image borders @{ EXTEND (0), WRAP (1), CLEAR (2) @} (0 <= bmode <= 2)"
    )
  )
  (
  )
)
(register-procedure "gimp-image-get-color-profile"
  "Returns the image's color profile"
  "This procedure returns the image's color profile, or NULL if the image has no color profile assigned."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2015"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
  )
  (
    (
      "num-bytes"
      "gint"
      "Number of bytes in the color_profile array (num-bytes >= 0)"
    )
    (
      "profile-data"
      "GimpUint8Array"
      "The image's serialized color profile."
    )
  )
)
(register-procedure "gimp-item-transform-perspective"
  "Perform a possibly non-affine transformation on the specified item."
  "This procedure performs a possibly non-affine transformation on the specified item by allowing the corners of the original bounding box to be arbitrarily remapped to any values.

The 4 coordinates specify the new locations of each corner of the original bounding box. By specifying these values, any affine transformation (rotation, scaling, translation) can be affected. Additionally, these values can be specified such that the resulting transformed item will appear to have been projected via a perspective transform.

If a selection exists and the item is a drawable, the portion of the drawable which lies under the selection is cut from the drawable and made into a floating selection which is then transformed as specified. The return value is the ID of the transformed floating selection.

If there is no selection or the item is not a drawable, the entire item will be transformed according to the specified mapping.
The return value will be equal to the item ID supplied as input.

This procedure is affected by the following context setters: 'gimp-context-set-interpolation', 'gimp-context-set-transform-direction', 'gimp-context-set-transform-resize'."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2010"
  "Internal GIMP procedure"
  (
    (
      "item"
      "GimpItem"
      "The affected item"
    )
    (
      "x0"
      "gdouble"
      "The new x coordinate of upper-left corner of original bounding box"
    )
    (
      "y0"
      "gdouble"
      "The new y coordinate of upper-left corner of original bounding box"
    )
    (
      "x1"
      "gdouble"
      "The new x coordinate of upper-right corner of original bounding box"
    )
    (
      "y1"
      "gdouble"
      "The new y coordinate of upper-right corner of original bounding box"
    )
    (
      "x2"
      "gdouble"
      "The new x coordinate of lower-left corner of original bounding box"
    )
    (
      "y2"
      "gdouble"
      "The new y coordinate of lower-left corner of original bounding box"
    )
    (
      "x3"
      "gdouble"
      "The new x coordinate of lower-right corner of original bounding box"
    )
    (
      "y3"
      "gdouble"
      "The new y coordinate of lower-right corner of original bounding box"
    )
  )
  (
    (
      "item"
      "GimpItem"
      "The transformed item"
    )
  )
)
(register-procedure "gimp-gradient-segment-set-left-pos"
  "Sets the left endpoint position of the specified segment"
  "This procedure sets the left endpoint position of the specified segment of the specified gradient. The final position will be between the position of the middle point to the left to the middle point of the current segment.
This procedure returns the final position."
  "Shlomi Fish <shlomif@@iglu.org.il>"
  "Shlomi Fish"
  "2003"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The gradient name"
    )
    (
      "segment"
      "gint"
      "The index of the segment within the gradient (segment >= 0)"
    )
    (
      "pos"
      "gdouble"
      "The position to set the guidepoint to (0 <= pos <= 1)"
    )
  )
  (
    (
      "final-pos"
      "gdouble"
      "The return position"
    )
  )
)
(register-procedure "gimp-get-default-comment"
  "Get the default image comment as specified in the Preferences."
  "Returns a copy of the default image comment."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
  )
  (
    (
      "comment"
      "gchararray"
      "Default image comment"
    )
  )
)
(register-procedure "gimp-item-get-expanded"
  "Returns whether the item is expanded."
  "This procedure returns TRUE if the specified item is expanded."
  "Ell"
  "Ell"
  "2017"
  "Internal GIMP procedure"
  (
    (
      "item"
      "GimpItem"
      "The item"
    )
  )
  (
    (
      "expanded"
      "gboolean"
      "TRUE if the item is expanded, FALSE otherwise (TRUE or FALSE)"
    )
  )
)
(register-procedure "gimp-context-get-brush-size"
  "Get brush size in pixels."
  "Get the brush size in pixels for brush based paint tools."
  "Ed Swartz"
  "Ed Swartz"
  "2012"
  "Internal GIMP procedure"
  (
  )
  (
    (
      "size"
      "gdouble"
      "Brush size in pixels (size >= 0)"
    )
  )
)
(register-procedure "gimp-text-layer-set-line-spacing"
  "Adjust the line spacing in a text layer."
  "This procedure sets the additional spacing used between lines a text layer."
  "Marcus Heese <heese@@cip.ifi.lmu.de>"
  "Marcus Heese"
  "2008"
  "Internal GIMP procedure"
  (
    (
      "layer"
      "GimpLayer"
      "The text layer"
    )
    (
      "line-spacing"
      "gdouble"
      "The additional line spacing to use. (-8192 <= line-spacing <= 8192)"
    )
  )
  (
  )
)
(register-procedure "gimp-layer-set-blend-space"
  "Set the blend space of the specified layer."
  "This procedure sets the specified layer's blend space."
  "Ell"
  "Ell"
  "2017"
  "Internal GIMP procedure"
  (
    (
      "layer"
      "GimpLayer"
      "The layer"
    )
    (
      "blend-space"
      "GimpLayerColorSpace"
      "The new layer blend space @{ LAYER-COLOR-SPACE-AUTO (0), LAYER-COLOR-SPACE-RGB-LINEAR (1), LAYER-COLOR-SPACE-RGB-PERCEPTUAL (2), LAYER-COLOR-SPACE-LAB (3) @}"
    )
  )
  (
  )
)
(register-procedure "plug-in-waves"
  "Distort the image with waves"
  "Distort the image with waves."
  "Compatibility procedure. Please see 'gegl:waves' for credits."
  "Compatibility procedure. Please see 'gegl:waves' for credits."
  "2013"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
    (
      "amplitude"
      "gdouble"
      "The Amplitude of the Waves (0 <= amplitude <= 101)"
    )
    (
      "phase"
      "gdouble"
      "The Phase of the Waves (-360 <= phase <= 360)"
    )
    (
      "wavelength"
      "gdouble"
      "The Wavelength of the Waves (0.1 <= wavelength <= 50)"
    )
    (
      "type"
      "gboolean"
      "Type of waves: @{ 0 = smeared, 1 = black @} (TRUE or FALSE)"
    )
    (
      "reflective"
      "gboolean"
      "Use Reflection (not implemented) (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "gimp-item-attach-parasite"
  "Add a parasite to an item."
  "This procedure attaches a parasite to an item. It has no return values."
  "Jay Cox"
  "Jay Cox"
  "1998"
  "Internal GIMP procedure"
  (
    (
      "item"
      "GimpItem"
      "The item"
    )
    (
      "parasite"
      "GimpParasite"
      "The parasite to attach to the item"
    )
  )
  (
  )
)
(register-procedure "plug-in-maze"
  "Draw a labyrinth"
  "Generates a maze using either the depth-first search method or Prim's algorithm. Can make tileable mazes too."
  "Compatibility procedure. Please see 'gegl:maze' for credits."
  "Compatibility procedure. Please see 'gegl:maze' for credits."
  "2015"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
    (
      "width"
      "gint"
      "Width of the passages (1 <= width <= 1024)"
    )
    (
      "height"
      "gint"
      "Height of the passages (1 <= height <= 1024)"
    )
    (
      "tileable"
      "guchar"
      "Tileable maze? (TRUE or FALSE)"
    )
    (
      "algorithm"
      "guchar"
      "Generation algorithm (0 = DEPTH FIRST, 1 = PRIM'S ALGORITHM)"
    )
    (
      "seed"
      "gint"
      "Random Seed"
    )
    (
      "multiple"
      "gint"
      "Multiple (use 57)"
    )
    (
      "offset"
      "gint"
      "Offset (use 1)"
    )
  )
  (
  )
)
(register-procedure "gimp-context-get-transform-resize"
  "Get the transform resize type."
  "This procedure returns the transform resize setting. The return value is an integer which corresponds to the values listed in the argument description."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2010"
  "Internal GIMP procedure"
  (
  )
  (
    (
      "transform-resize"
      "GimpTransformResize"
      "The transform resize type @{ TRANSFORM-RESIZE-ADJUST (0), TRANSFORM-RESIZE-CLIP (1), TRANSFORM-RESIZE-CROP (2), TRANSFORM-RESIZE-CROP-WITH-ASPECT (3) @}"
    )
  )
)
(register-procedure "gimp-context-set-antialias"
  "Set the antialias setting."
  "This procedure modifies the antialias setting. If antialiasing is turned on, the edges of selected region will contain intermediate values which give the appearance of a sharper, less pixelized edge. This should be set as TRUE most of the time unless a binary-only selection is wanted.

This setting affects the following procedures: 'gimp-image-select-color', 'gimp-image-select-contiguous-color', 'gimp-image-select-round-rectangle', 'gimp-image-select-ellipse', 'gimp-image-select-polygon', 'gimp-image-select-item', 'gimp-drawable-edit-bucket-fill', 'gimp-drawable-edit-stroke-item', 'gimp-drawable-edit-stroke-selection'."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2010"
  "Internal GIMP procedure"
  (
    (
      "antialias"
      "gboolean"
      "The antialias setting (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "plug-in-threshold-alpha"
  "Make transparency all-or-nothing"
  "Make transparency all-or-nothing."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1997"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
    (
      "threshold"
      "gint"
      "Threshold (0 <= threshold <= 255)"
    )
  )
  (
  )
)
(register-procedure "gimp-context-get-interpolation"
  "Get the interpolation type."
  "This procedure returns the interpolation setting. The return value is an integer which corresponds to the values listed in the argument description. If the interpolation has not been set explicitly by 'gimp-context-set-interpolation', the default interpolation set in gimprc will be used."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2010"
  "Internal GIMP procedure"
  (
  )
  (
    (
      "interpolation"
      "GimpInterpolationType"
      "The interpolation type @{ INTERPOLATION-NONE (0), INTERPOLATION-LINEAR (1), INTERPOLATION-CUBIC (2), INTERPOLATION-NOHALO (3), INTERPOLATION-LOHALO (4) @}"
    )
  )
)
(register-procedure "plug-in-sample-colorize"
  "Colorize image using a sample image as a guide"
  "This plug-in colorizes the contents of the specified (gray) layer with the help of a  sample (color) layer. It analyzes all colors in the sample layer. The sample colors are sorted by brightness (== intentisty) and amount and stored in a sample colortable (where brightness is the index) The pixels of the destination layer are remapped with the help of the sample colortable. If use_subcolors is TRUE, the remapping process uses all sample colors of the corresponding brightness-intensity and distributes the subcolors according to their amount in the sample (If the sample has 5 green, 3 yellow, and 1 red pixel of the  intensity value 105, the destination pixels at intensity value 105 are randomly painted in green, yellow and red in a relation of 5:3:1 If use_subcolors is FALSE only one sample color per intensity is used. (green will be used in this example) The brightness intensity value is transformed at the remapping process according to the levels: out_lo, out_hi, in_lo, in_high and gamma The in_low / in_high levels specify an initial mapping of the intensity. The gamma value determines how intensities are interpolated between the in_lo and in_high levels. A gamma value of 1.0 results in linear interpolation. Higher gamma values results in more high-level intensities Lower gamma values results in more low-level intensities The out_low/out_high levels constrain the resulting intensity index The intensity index is used to pick the corresponding color in the sample colortable. If hold_inten is FALSE the picked color is used 1:1 as resulting remap_color. If hold_inten is TRUE The brightness of the picked color is adjusted back to the original intensity value (only hue and saturation are taken from the picked sample color) (or to the input level, if orig_inten is set FALSE) Works on both Grayscale and RGB image with/without alpha channel. (the image with the dst_drawable is converted to RGB if necessary) The sample_drawable should be of type RGB or RGBA"
  "Wolfgang Hofer"
  "hof@@hotbot.com"
  "02/2000"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The input image"
    )
    (
      "num-drawables"
      "gint"
      "Number of input drawables (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The input drawables"
    )
    (
      "sample-drawable"
      "GimpDrawable"
      "Sample drawable (should be of Type RGB or RGBA)"
    )
    (
      "hold-inten"
      "gboolean"
      "Hold brightness intensity levels (TRUE or FALSE)"
    )
    (
      "orig-inten"
      "gboolean"
      "TRUE: hold brightness of original intensity levels, FALSE: Hold Intensity of input levels (TRUE or FALSE)"
    )
    (
      "rnd-subcolors"
      "gboolean"
      "TRUE: Use all subcolors of same intensity, FALSE: Use only one color per intensity (TRUE or FALSE)"
    )
    (
      "guess-missing"
      "gboolean"
      "TRUE: guess samplecolors for the missing intensity values, FALSE: use only colors found in the sample (TRUE or FALSE)"
    )
    (
      "in-low"
      "gint"
      "Intensity of lowest input (0 <= in-low <= 254)"
    )
    (
      "in-high"
      "gint"
      "Intensity of highest input (1 <= in-high <= 255)"
    )
    (
      "gamma"
      "gdouble"
      "Gamma adjustment factor, 1.0 is linear (0.1 <= gamma <= 1)"
    )
    (
      "out-low"
      "gint"
      "Lowest sample color intensity (0 <= out-low <= 254)"
    )
    (
      "ouz-high"
      "gint"
      "Highest sample color intensity (1 <= ouz-high <= 255)"
    )
  )
  (
  )
)
(register-procedure "gimp-item-set-lock-content"
  "Set the 'lock content' state of the specified item."
  "This procedure sets the specified item's lock content state."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2009"
  "Internal GIMP procedure"
  (
    (
      "item"
      "GimpItem"
      "The item"
    )
    (
      "lock-content"
      "gboolean"
      "The new item 'lock content' state (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "file-jpeg-load"
  "Loads files in the JPEG file format"
  "Loads files in the JPEG file format"
  "Spencer Kimball, Peter Mattis & others"
  "Spencer Kimball & Peter Mattis"
  "1995-2007"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "file"
      "GFile"
      "The file to load"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "Output image"
    )
  )
)
(register-procedure "gimp-getpid"
  "Returns the PID of the host GIMP process."
  "This procedure returns the process ID of the currently running GIMP."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2005"
  "Internal GIMP procedure"
  (
  )
  (
    (
      "pid"
      "gint"
      "The PID"
    )
  )
)
(register-procedure "gimp-gradient-segment-get-left-pos"
  "Retrieves the left endpoint position of the specified segment"
  "This procedure retrieves the left endpoint position of the specified segment of the specified gradient."
  "Shlomi Fish <shlomif@@iglu.org.il>"
  "Shlomi Fish"
  "2003"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The gradient name"
    )
    (
      "segment"
      "gint"
      "The index of the segment within the gradient (segment >= 0)"
    )
  )
  (
    (
      "pos"
      "gdouble"
      "The return position"
    )
  )
)
(register-procedure "gimp-display-new"
  "Create a new display for the specified image."
  "Creates a new display for the specified image. If the image already has a display, another is added. Multiple displays are handled transparently by GIMP. The newly created display is returned and can be subsequently destroyed with a call to 'gimp-display-delete'. This procedure only makes sense for use with the GIMP UI, and will result in an execution error if called when GIMP has no UI."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
  )
  (
    (
      "display"
      "GimpDisplay"
      "The new display"
    )
  )
)
(register-procedure "script-fu-predator"
  "Add a 'Predator' effect to the selected region (or alpha)"
  ""
  "Adrian Likins <adrian@@gimp.org>"
  "Adrian Likins"
  "10/12/97"
  "Temporary Procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Image"
    )
    (
      "drawable"
      "GimpDrawable"
      "Drawable"
    )
    (
      "adjustment"
      "gdouble"
      "Edge amount"
    )
    (
      "toggle"
      "gboolean"
      "Pixelize (TRUE or FALSE)"
    )
    (
      "adjustment-2"
      "gdouble"
      "Pixel amount"
    )
    (
      "toggle-2"
      "gboolean"
      "Keep selection (TRUE or FALSE)"
    )
    (
      "toggle-3"
      "gboolean"
      "Separate layer (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "file-gz-load"
  "loads files compressed with gzip"
  "This procedure loads files in the gzip compressed format."
  "Daniel Risacher"
  "Daniel Risacher, Spencer Kimball and Peter Mattis"
  "1995-1997"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "file"
      "GFile"
      "The file to load"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "Output image"
    )
  )
)
(register-procedure "gimp-image-undo-disable"
  "Disable the image's undo stack."
  "This procedure disables the image's undo stack, allowing subsequent operations to ignore their undo steps. This is generally called in conjunction with 'gimp-image-undo-enable' to temporarily disable an image undo stack. This is advantageous because saving undo steps can be time and memory intensive."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
  )
  (
    (
      "disabled"
      "gboolean"
      "TRUE if the image undo has been disabled (TRUE or FALSE)"
    )
  )
)
(register-procedure "gimp-item-get-parasite-list"
  "List all parasites."
  "Returns a list of all parasites currently attached the an item."
  "Marc Lehmann"
  "Marc Lehmann"
  "1999"
  "Internal GIMP procedure"
  (
    (
      "item"
      "GimpItem"
      "The item"
    )
  )
  (
    (
      "parasites"
      "GStrv"
      "The names of currently attached parasites"
    )
  )
)
(register-procedure "file-pix-load"
  "Loads files of the Alias|Wavefront Pix file format"
  "Loads files of the Alias|Wavefront Pix file format"
  "Michael Taylor"
  "Michael Taylor"
  "1997"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "file"
      "GFile"
      "The file to load"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "Output image"
    )
  )
)
(register-procedure "gimp-unit-get-digits"
  "Returns the number of digits of the unit."
  "This procedure returns the number of digits you should provide in input or output functions to get approximately the same accuracy as with two digits and inches. Note that asking for the digits of \"pixels\" will produce an error."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "1999"
  "Internal GIMP procedure"
  (
    (
      "unit-id"
      "GimpUnit"
      "The unit's integer ID"
    )
  )
  (
    (
      "digits"
      "gint"
      "The unit's number of digits"
    )
  )
)
(register-procedure "gimp-drawable-histogram"
  "Returns information on the intensity histogram for the specified drawable."
  "This tool makes it possible to gather information about the intensity histogram of a drawable. A channel to examine is first specified. This can be either value, red, green, or blue, depending on whether the drawable is of type color or grayscale. Second, a range of intensities are specified. The 'gimp-drawable-histogram' function returns statistics based on the pixels in the drawable that fall under this range of values. Mean, standard deviation, median, number of pixels, and percentile are all returned. Additionally, the total count of pixels in the image is returned. Counts of pixels are weighted by any associated alpha values and by the current selection mask. That is, pixels that lie outside an active selection mask will not be counted. Similarly, pixels with transparent alpha values will not be counted. The returned mean, std_dev and median are in the range (0..255) for 8-bit images or if the plug-in is not precision-aware, and in the range (0.0..1.0) otherwise."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "drawable"
      "GimpDrawable"
      "The drawable"
    )
    (
      "channel"
      "GimpHistogramChannel"
      "The channel to query @{ HISTOGRAM-VALUE (0), HISTOGRAM-RED (1), HISTOGRAM-GREEN (2), HISTOGRAM-BLUE (3), HISTOGRAM-ALPHA (4), HISTOGRAM-LUMINANCE (5), HISTOGRAM-RGB (6) @}"
    )
    (
      "start-range"
      "gdouble"
      "Start of the intensity measurement range (0 <= start-range <= 1)"
    )
    (
      "end-range"
      "gdouble"
      "End of the intensity measurement range (0 <= end-range <= 1)"
    )
  )
  (
    (
      "mean"
      "gdouble"
      "Mean intensity value"
    )
    (
      "std-dev"
      "gdouble"
      "Standard deviation of intensity values"
    )
    (
      "median"
      "gdouble"
      "Median intensity value"
    )
    (
      "pixels"
      "gdouble"
      "Alpha-weighted pixel count for entire image"
    )
    (
      "count"
      "gdouble"
      "Alpha-weighted pixel count for range"
    )
    (
      "percentile"
      "gdouble"
      "Percentile that range falls under"
    )
  )
)
(register-procedure "gimp-drawable-hue-saturation"
  "Modify hue, lightness, and saturation in the specified drawable."
  "This procedure allows the hue, lightness, and saturation in the specified drawable to be modified. The 'hue-range' parameter provides the capability to limit range of affected hues. The 'overlap' parameter provides blending into neighboring hue channels when rendering."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "drawable"
      "GimpDrawable"
      "The drawable"
    )
    (
      "hue-range"
      "GimpHueRange"
      "Range of affected hues @{ HUE-RANGE-ALL (0), HUE-RANGE-RED (1), HUE-RANGE-YELLOW (2), HUE-RANGE-GREEN (3), HUE-RANGE-CYAN (4), HUE-RANGE-BLUE (5), HUE-RANGE-MAGENTA (6) @}"
    )
    (
      "hue-offset"
      "gdouble"
      "Hue offset in degrees (-180 <= hue-offset <= 180)"
    )
    (
      "lightness"
      "gdouble"
      "Lightness modification (-100 <= lightness <= 100)"
    )
    (
      "saturation"
      "gdouble"
      "Saturation modification (-100 <= saturation <= 100)"
    )
    (
      "overlap"
      "gdouble"
      "Overlap other hue channels (0 <= overlap <= 100)"
    )
  )
  (
  )
)
(register-procedure "script-fu-spinning-globe"
  "Create an animation by mapping the current image onto a spinning sphere"
  ""
  "Chris Gutteridge"
  "1998, Chris Gutteridge / ECS dept, University of Southampton, England."
  "16th April 1998"
  "Temporary Procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The Image"
    )
    (
      "drawable"
      "GimpDrawable"
      "The Layer"
    )
    (
      "adjustment"
      "gdouble"
      "Frames"
    )
    (
      "toggle"
      "gboolean"
      "Turn from left to right (TRUE or FALSE)"
    )
    (
      "toggle-2"
      "gboolean"
      "Transparent background (TRUE or FALSE)"
    )
    (
      "adjustment-2"
      "gdouble"
      "Index to n colors (0 = remain RGB)"
    )
    (
      "toggle-3"
      "gboolean"
      "Work on copy (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "plug-in-hot"
  "Find and fix pixels that may be unsafely bright"
  "hot scans an image for pixels that will give unsave values of chrominance or composite signale amplitude when encoded into an NTSC or PAL signal. Three actions can be performed on these 'hot' pixels. (0) reduce luminance, (1) reduce saturation, or (2) Blacken."
  "Eric L. Hernes, Alan Wm Paeth"
  "Eric L. Hernes"
  "1997"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The input image"
    )
    (
      "num-drawables"
      "gint"
      "Number of input drawables (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The input drawables"
    )
    (
      "mode"
      "gint"
      "Mode @{ NTSC (0), PAL (1) @} (0 <= mode <= 1)"
    )
    (
      "action"
      "gint"
      "Action @{ (0) reduce luminance, (1) reduce saturation, or (2) Blacken @} (0 <= action <= 2)"
    )
    (
      "new-layer"
      "gboolean"
      "Create a new layer (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "gimp-text-layer-set-font-size"
  "Set the font size."
  "This procedure changes the font size of a text layer. The size of your font will be a double 'font-size' of 'unit' units."
  "Marcus Heese <heese@@cip.ifi.lmu.de>"
  "Marcus Heese"
  "2008"
  "Internal GIMP procedure"
  (
    (
      "layer"
      "GimpLayer"
      "The text layer"
    )
    (
      "font-size"
      "gdouble"
      "The font size (0 <= font-size <= 8192)"
    )
    (
      "unit"
      "GimpUnit"
      "The unit to use for the font size"
    )
  )
  (
  )
)
(register-procedure "gimp-layer-new-from-drawable"
  "Create a new layer by copying an existing drawable."
  "This procedure creates a new layer as a copy of the specified drawable. The new layer still needs to be added to the image, as this is not automatic. Add the new layer with the 'gimp-image-insert-layer' command. Other attributes such as layer mask modes, and offsets should be set with explicit procedure calls."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "drawable"
      "GimpDrawable"
      "The source drawable from where the new layer is copied"
    )
    (
      "dest-image"
      "GimpImage"
      "The destination image to which to add the layer"
    )
  )
  (
    (
      "layer-copy"
      "GimpLayer"
      "The newly copied layer"
    )
  )
)
(register-procedure "gimp-text-layer-get-color"
  "Get the color of the text in a text layer."
  "This procedure returns the color of the text in a text layer."
  "Marcus Heese <heese@@cip.ifi.lmu.de>"
  "Marcus Heese"
  "2008"
  "Internal GIMP procedure"
  (
    (
      "layer"
      "GimpLayer"
      "The text layer."
    )
  )
  (
    (
      "color"
      "GimpRGB"
      "The color of the text."
    )
  )
)
(register-procedure "gimp-edit-paste"
  "Paste buffer to the specified drawable."
  "This procedure pastes a copy of the internal GIMP edit buffer to the specified drawable. The GIMP edit buffer will be empty unless a call was previously made to either 'gimp-edit-cut' or 'gimp-edit-copy'. The \"paste_into\" option specifies whether to clear the current image selection, or to paste the buffer \"behind\" the selection. This allows the selection to act as a mask for the pasted buffer. Anywhere that the selection mask is non-zero, the pasted buffer will show through. The pasted data may be a floating selection when relevant, layers otherwise. If the image has a floating selection at the time of pasting, the old floating selection will be anchored to its drawable before the new floating selection is added.
This procedure returns the new layers (floating or not). If the result is a floating selection, it will already be attached to the specified drawable, and a subsequent call to floating_sel_attach is not needed."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "drawable"
      "GimpDrawable"
      "The drawable to paste to"
    )
    (
      "paste-into"
      "gboolean"
      "Clear selection, or paste behind it? (TRUE or FALSE)"
    )
  )
  (
    (
      "num-layers"
      "gint"
      "The newly pasted layers (num-layers >= 0)"
    )
    (
      "layers"
      "GimpObjectArray"
      "The list of pasted layers."
    )
  )
)
(register-procedure "plug-in-destripe"
  "Remove vertical stripe artifacts from the image"
  "This plug-in tries to remove vertical stripes from an image."
  "Marc Lehmann <pcg@@goof.com>"
  "Marc Lehmann <pcg@@goof.com>"
  "0.2"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The input image"
    )
    (
      "num-drawables"
      "gint"
      "Number of input drawables (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The input drawables"
    )
    (
      "avg-width"
      "gint"
      "Averaging filter width (2 <= avg-width <= 100)"
    )
  )
  (
  )
)
(register-procedure "gimp-palette-entry-get-color"
  "Gets the specified palette entry from the specified palette."
  "This procedure retrieves the color of the zero-based entry specified for the specified palette. It returns an error if the entry does not exist."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2004"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The palette name"
    )
    (
      "entry-num"
      "gint"
      "The entry to retrieve"
    )
  )
  (
    (
      "color"
      "GimpRGB"
      "The color requested"
    )
  )
)
(register-procedure "gimp-context-set-dynamics"
  "Set the specified paint dynamics as the active paint dynamics."
  "This procedure allows the active paint dynamics to be set by specifying its name. The name is simply a string which corresponds to one of the names of the installed paint dynamics. If there is no matching paint dynamics found, this procedure will return an error. Otherwise, the specified paint dynamics becomes active and will be used in all subsequent paint operations as long as dynamics are enabled."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2011"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The name of the paint dynamics"
    )
  )
  (
  )
)
(register-procedure "python-fu-palette-offset"
  "Offset the colors in a palette"
  "palette_offset (palette, amount) -> modified_palette"
  "Joao S. O. Bueno Calligaris, Carol Spears"
  "(c) Joao S. O. Bueno Calligaris"
  "2004, 2006"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "Read-write integer property. @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "palette"
      "gchararray"
      "Palette"
    )
    (
      "amount"
      "gint"
      "Offset"
    )
  )
  (
    (
      "new-palette"
      "gchararray"
      "Name of the newly created palette if read-only or the input palette otherwise"
    )
  )
)
(register-procedure "gimp-palette-delete"
  "Deletes a palette"
  "This procedure deletes a palette"
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2004"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The palette name"
    )
  )
  (
  )
)
(register-procedure "plug-in-illusion"
  "Superimpose many altered copies of the image"
  "Produce illusion."
  "Compatibility procedure. Please see 'gegl:illusion' for credits."
  "Compatibility procedure. Please see 'gegl:illusion' for credits."
  "2014"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
    (
      "division"
      "gint"
      "The number of divisions (0 <= division <= 64)"
    )
    (
      "type"
      "gint"
      "Illusion type @{ TYPE1 (0), TYPE2 (1) @} (0 <= type <= 1)"
    )
  )
  (
  )
)
(register-procedure "gimp-image-find-next-sample-point"
  "Find next sample point on an image."
  "This procedure takes an image and a sample point ID as input and finds the sample point ID of the successor of the given sample point ID in the image's sample point list. If the supplied sample point ID is 0, the procedure will return the first sample point. The procedure will return 0 if given the final sample point ID as an argument or the image has no sample points."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2016"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "sample-point"
      "guint"
      "The ID of the current sample point (0 if first invocation)"
    )
  )
  (
    (
      "next-sample-point"
      "guint"
      "The next sample point's ID"
    )
  )
)
(register-procedure "gimp-image-get-height"
  "Return the height of the image"
  "This procedure returns the image's height. This value is independent of any of the layers in this image. This is the \"canvas\" height."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
  )
  (
    (
      "height"
      "gint"
      "The image's height"
    )
  )
)
(register-procedure "gimp-text-layer-set-text"
  "Set the text of a text layer."
  "This procedure changes the text of a text layer."
  "Marcus Heese <heese@@cip.ifi.lmu.de>"
  "Marcus Heese"
  "2008"
  "Internal GIMP procedure"
  (
    (
      "layer"
      "GimpLayer"
      "The text layer"
    )
    (
      "text"
      "gchararray"
      "The new text to set"
    )
  )
  (
  )
)
(register-procedure "gimp-gradient-segment-range-delete"
  "Delete the segment range"
  "This function deletes a segment range."
  "Shlomi Fish <shlomif@@iglu.org.il>"
  "Shlomi Fish"
  "2003"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The gradient name"
    )
    (
      "start-segment"
      "gint"
      "The index of the first segment to operate on (start-segment >= 0)"
    )
    (
      "end-segment"
      "gint"
      "The index of the last segment to operate on. If negative, the selection will extend to the end of the string."
    )
  )
  (
  )
)
(register-procedure "gimp-vectors-bezier-stroke-lineto"
  "Extends a bezier stroke with a lineto."
  "Extends a bezier stroke with a lineto."
  "Simon Budig"
  "Simon Budig"
  "2005"
  "Internal GIMP procedure"
  (
    (
      "vectors"
      "GimpVectors"
      "The vectors object"
    )
    (
      "stroke-id"
      "gint"
      "The stroke ID"
    )
    (
      "x0"
      "gdouble"
      "The x-coordinate of the lineto"
    )
    (
      "y0"
      "gdouble"
      "The y-coordinate of the lineto"
    )
  )
  (
  )
)
(register-procedure "file-raw-load"
  "Load raw images, specifying image information"
  "Load raw images, specifying image information"
  "timecop, pg@@futureware.at"
  "timecop, pg@@futureware.at"
  "Aug 2004"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "file"
      "GFile"
      "The file to load"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "Output image"
    )
  )
)
(register-procedure "gimp-context-get-line-dash-pattern"
  "Get the line dash pattern setting."
  "This procedure returns the line dash pattern setting."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2015"
  "Internal GIMP procedure"
  (
  )
  (
    (
      "num-dashes"
      "gint"
      "The number of dashes in the dash_pattern array (num-dashes >= 0)"
    )
    (
      "dashes"
      "GimpFloatArray"
      "The line dash pattern setting"
    )
  )
)
(register-procedure "script-fu-slide"
  "Add a slide-film like frame, sprocket holes, and labels to an image"
  ""
  "Sven Neumann <sven@@gimp.org>"
  "Sven Neumann"
  "2004/03/28"
  "Temporary Procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Image"
    )
    (
      "drawable"
      "GimpDrawable"
      "Drawable"
    )
    (
      "string"
      "gchararray"
      "Text"
    )
    (
      "string-2"
      "gchararray"
      "Number"
    )
    (
      "font"
      "gchararray"
      "Font"
    )
    (
      "color"
      "GimpRGB"
      "Font color"
    )
    (
      "toggle"
      "gboolean"
      "Work on copy (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "plug-in-map-object"
  "Map the image to an object (plane, sphere, box or cylinder)"
  "No help yet"
  "Tom Bech & Federico Mena Quintero"
  "Tom Bech & Federico Mena Quintero"
  "Version 1.2.0, July 16 1998"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The input image"
    )
    (
      "num-drawables"
      "gint"
      "Number of input drawables (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The input drawables"
    )
    (
      "map-type"
      "gint"
      "Type of mapping (0=plane, 1=sphere, 2=box, 3=cylinder) (0 <= map-type <= 2)"
    )
    (
      "viewpoint-x"
      "gdouble"
      "Position of viewpoint (x,y,z)"
    )
    (
      "viewpoint-y"
      "gdouble"
      "Position of viewpoint (x,y,z)"
    )
    (
      "viewpoint-z"
      "gdouble"
      "Position of viewpoint (x,y,z)"
    )
    (
      "position-x"
      "gdouble"
      "Object position (x,y,z)"
    )
    (
      "position-y"
      "gdouble"
      "Object position (x,y,z)"
    )
    (
      "position-z"
      "gdouble"
      "Object position (x,y,z)"
    )
    (
      "first-axis-x"
      "gdouble"
      "First axis of object (x,y,z)"
    )
    (
      "first-axis-y"
      "gdouble"
      "First axis of object (x,y,z)"
    )
    (
      "first-axis-z"
      "gdouble"
      "First axis of object (x,y,z)"
    )
    (
      "second-axis-x"
      "gdouble"
      "Second axis of object (x,y,z)"
    )
    (
      "second-axis-y"
      "gdouble"
      "Second axis of object (x,y,z)"
    )
    (
      "second-axis-z"
      "gdouble"
      "Second axis of object (x,y,z)"
    )
    (
      "rotation-angle-x"
      "gdouble"
      "Rotation about X axis in degrees"
    )
    (
      "rotation-angle-y"
      "gdouble"
      "Rotation about Y axis in degrees"
    )
    (
      "rotation-angle-z"
      "gdouble"
      "Rotation about Z axis in degrees"
    )
    (
      "light-type"
      "gint"
      "Type of lightsource (0=point, 1=directional, 2=none) (0 <= light-type <= 2)"
    )
    (
      "light-color"
      "GimpRGB"
      "Light source color"
    )
    (
      "light-position-x"
      "gdouble"
      "Light source position (x,y,z)"
    )
    (
      "light-position-y"
      "gdouble"
      "Light source position (x,y,z)"
    )
    (
      "light-position-z"
      "gdouble"
      "Light source position (x,y,z)"
    )
    (
      "light-direction-x"
      "gdouble"
      "Light source direction (x,y,z)"
    )
    (
      "light-direction-y"
      "gdouble"
      "Light source direction (x,y,z)"
    )
    (
      "light-direction-z"
      "gdouble"
      "Light source direction (x,y,z)"
    )
    (
      "ambient-intensity"
      "gdouble"
      "Material ambient intensity (0 <= ambient-intensity <= 1)"
    )
    (
      "diffuse-intensity"
      "gdouble"
      "Material diffuse intensity (0 <= diffuse-intensity <= 1)"
    )
    (
      "diffuse-reflectivity"
      "gdouble"
      "Material diffuse reflectivity (0 <= diffuse-reflectivity <= 1)"
    )
    (
      "specular-reflectivity"
      "gdouble"
      "Material specular reflectivity (0 <= specular-reflectivity <= 1)"
    )
    (
      "highlight"
      "gdouble"
      "Material highlight (note, it's exponential) (highlight >= 0)"
    )
    (
      "antialiasing"
      "gboolean"
      "Apply antialiasing (TRUE or FALSE)"
    )
    (
      "tiled"
      "gboolean"
      "Tile source image (TRUE or FALSE)"
    )
    (
      "new-image"
      "gboolean"
      "Create a new image (TRUE or FALSE)"
    )
    (
      "transparent-background"
      "gboolean"
      "Make background transparent (TRUE or FALSE)"
    )
    (
      "radius"
      "gdouble"
      "Sphere/cylinder radius (only used when maptype=1 or 3) (radius >= 0)"
    )
    (
      "x-scale"
      "gdouble"
      "Box X size (x-scale >= 0)"
    )
    (
      "y-scale"
      "gdouble"
      "Box Y size (y-scale >= 0)"
    )
    (
      "z-scale"
      "gdouble"
      "Box Z size (z-scale >= 0)"
    )
    (
      "cylinder-length"
      "gdouble"
      "Cylinder length (cylinder-length >= 0)"
    )
    (
      "box-front-drawable"
      "GimpDrawable"
      "Box front face (set these to NULL if not used)"
    )
    (
      "box-back-drawable"
      "GimpDrawable"
      "Box back face"
    )
    (
      "box-top-drawable"
      "GimpDrawable"
      "Box top face"
    )
    (
      "box-bottom-drawable"
      "GimpDrawable"
      "Box bottom face"
    )
    (
      "box-left-drawable"
      "GimpDrawable"
      "Box left face"
    )
    (
      "box-right-drawable"
      "GimpDrawable"
      "Box right face"
    )
    (
      "cyl-top-drawable"
      "GimpDrawable"
      "Cylinder top face (set these to NULL if not used)"
    )
    (
      "cyl-bottom-drawable"
      "GimpDrawable"
      "Cylinder bottom face"
    )
  )
  (
  )
)
(register-procedure "gimp-context-get-opacity"
  "Get the opacity."
  "This procedure returns the opacity setting. The return value is a floating point number between 0 and 100."
  "Michael Natterer <mitch@@gimp.org> & Sven Neumann <sven@@gimp.org>"
  "Michael Natterer & Sven Neumann"
  "2004"
  "Internal GIMP procedure"
  (
  )
  (
    (
      "opacity"
      "gdouble"
      "The opacity (0 <= opacity <= 100)"
    )
  )
)
(register-procedure "gimp-image-clean-all"
  "Set the image dirty count to 0."
  "This procedure sets the specified image's dirty count to 0, allowing operations to occur without having a 'dirtied' image. This is especially useful for creating and loading images which should not initially be considered dirty, even though layers must be created, filled, and installed in the image. Note that save plug-ins must NOT call this function themselves after saving the image."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
  )
  (
  )
)
(register-procedure "script-fu-addborder"
  "Add a border around an image"
  ""
  "Andy Thomas <alt@@picnic.demon.co.uk>"
  "Andy Thomas"
  "6/10/97"
  "Temporary Procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
    (
      "adjustment"
      "gdouble"
      "Border X size"
    )
    (
      "adjustment-2"
      "gdouble"
      "Border Y size"
    )
    (
      "color"
      "GimpRGB"
      "Border color"
    )
    (
      "adjustment-3"
      "gdouble"
      "Delta value on color"
    )
  )
  (
  )
)
(register-procedure "gimp-brush-new"
  "Creates a new brush."
  "This procedure creates a new, uninitialized brush."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2004"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The requested name of the new brush"
    )
  )
  (
    (
      "actual-name"
      "gchararray"
      "The actual new brush name."
    )
  )
)
(register-procedure "gimp-item-id-is-drawable"
  "Returns whether the item ID is a drawable."
  "This procedure returns TRUE if the specified item ID is a drawable."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "item-id"
      "gint"
      "The item ID"
    )
  )
  (
    (
      "drawable"
      "gboolean"
      "TRUE if the item ID is a drawable, FALSE otherwise (TRUE or FALSE)"
    )
  )
)
(register-procedure "gimp-image-grid-set-foreground-color"
  "Gets the foreground color of an image's grid."
  "This procedure sets the foreground color of an image's grid."
  "Sylvain Foret"
  "Sylvain Foret"
  "2005"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "fgcolor"
      "GimpRGB"
      "The new foreground color"
    )
  )
  (
  )
)
(register-procedure "gimp-context-get-dynamics"
  "Retrieve the currently active paint dynamics."
  "This procedure returns the name of the currently active paint dynamics. If enabled, all paint operations and stroke operations use this paint dynamics to control the application of paint to the image. If disabled, the dynamics will be ignored during paint actions.
See 'gimp-context-are-dynamics-enabled' to enquire whether dynamics are used or ignored."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2011"
  "Internal GIMP procedure"
  (
  )
  (
    (
      "name"
      "gchararray"
      "The name of the active paint dynamics"
    )
  )
)
(register-procedure "gimp-buffer-get-height"
  "Retrieves the specified buffer's height."
  "This procedure retrieves the specified named buffer's height."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2005"
  "Internal GIMP procedure"
  (
    (
      "buffer-name"
      "gchararray"
      "The buffer name"
    )
  )
  (
    (
      "height"
      "gint"
      "The buffer height"
    )
  )
)
(register-procedure "file-fli-info"
  "Get information about a Fli movie"
  "This is an experimental plug-in to handle FLI movies"
  "Jens Ch. Restemeier"
  "Jens Ch. Restemeier"
  "1997"
  "GIMP Plug-In"
  (
    (
      "file"
      "GFile"
      "The local file to get info about"
    )
  )
  (
    (
      "width"
      "gint"
      "Width of one frame (0 <= width <= 524288)"
    )
    (
      "height"
      "gint"
      "Height of one frame (0 <= height <= 524288)"
    )
    (
      "frames"
      "gint"
      "Number of frames (frames >= 0)"
    )
  )
)
(register-procedure "gimp-layer-get-mode"
  "Get the combination mode of the specified layer."
  "This procedure returns the specified layer's combination mode."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "layer"
      "GimpLayer"
      "The layer"
    )
  )
  (
    (
      "mode"
      "GimpLayerMode"
      "The layer combination mode @{ LAYER-MODE-NORMAL-LEGACY (0), LAYER-MODE-DISSOLVE (1), LAYER-MODE-BEHIND-LEGACY (2), LAYER-MODE-MULTIPLY-LEGACY (3), LAYER-MODE-SCREEN-LEGACY (4), LAYER-MODE-OVERLAY-LEGACY (5), LAYER-MODE-DIFFERENCE-LEGACY (6), LAYER-MODE-ADDITION-LEGACY (7), LAYER-MODE-SUBTRACT-LEGACY (8), LAYER-MODE-DARKEN-ONLY-LEGACY (9), LAYER-MODE-LIGHTEN-ONLY-LEGACY (10), LAYER-MODE-HSV-HUE-LEGACY (11), LAYER-MODE-HSV-SATURATION-LEGACY (12), LAYER-MODE-HSL-COLOR-LEGACY (13), LAYER-MODE-HSV-VALUE-LEGACY (14), LAYER-MODE-DIVIDE-LEGACY (15), LAYER-MODE-DODGE-LEGACY (16), LAYER-MODE-BURN-LEGACY (17), LAYER-MODE-HARDLIGHT-LEGACY (18), LAYER-MODE-SOFTLIGHT-LEGACY (19), LAYER-MODE-GRAIN-EXTRACT-LEGACY (20), LAYER-MODE-GRAIN-MERGE-LEGACY (21), LAYER-MODE-COLOR-ERASE-LEGACY (22), LAYER-MODE-OVERLAY (23), LAYER-MODE-LCH-HUE (24), LAYER-MODE-LCH-CHROMA (25), LAYER-MODE-LCH-COLOR (26), LAYER-MODE-LCH-LIGHTNESS (27), LAYER-MODE-NORMAL (28), LAYER-MODE-BEHIND (29), LAYER-MODE-MULTIPLY (30), LAYER-MODE-SCREEN (31), LAYER-MODE-DIFFERENCE (32), LAYER-MODE-ADDITION (33), LAYER-MODE-SUBTRACT (34), LAYER-MODE-DARKEN-ONLY (35), LAYER-MODE-LIGHTEN-ONLY (36), LAYER-MODE-HSV-HUE (37), LAYER-MODE-HSV-SATURATION (38), LAYER-MODE-HSL-COLOR (39), LAYER-MODE-HSV-VALUE (40), LAYER-MODE-DIVIDE (41), LAYER-MODE-DODGE (42), LAYER-MODE-BURN (43), LAYER-MODE-HARDLIGHT (44), LAYER-MODE-SOFTLIGHT (45), LAYER-MODE-GRAIN-EXTRACT (46), LAYER-MODE-GRAIN-MERGE (47), LAYER-MODE-VIVID-LIGHT (48), LAYER-MODE-PIN-LIGHT (49), LAYER-MODE-LINEAR-LIGHT (50), LAYER-MODE-HARD-MIX (51), LAYER-MODE-EXCLUSION (52), LAYER-MODE-LINEAR-BURN (53), LAYER-MODE-LUMA-DARKEN-ONLY (54), LAYER-MODE-LUMA-LIGHTEN-ONLY (55), LAYER-MODE-LUMINANCE (56), LAYER-MODE-COLOR-ERASE (57), LAYER-MODE-ERASE (58), LAYER-MODE-MERGE (59), LAYER-MODE-SPLIT (60), LAYER-MODE-PASS-THROUGH (61), LAYER-MODE-REPLACE (62), LAYER-MODE-ANTI-ERASE (63) @}"
    )
  )
)
(register-procedure "plug-in-vinvert"
  "Invert the brightness of each pixel"
  "This function takes an indexed/RGB image and inverts its 'value' in HSV space. The upshot of this is that the color and saturation at any given point remains the same, but its brightness is effectively inverted. Quite strange. Sometimes produces unpleasant color artifacts on images from lossy sources (ie. JPEG)."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1997"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
  )
  (
  )
)
(register-procedure "script-fu-selection-rounded-rectangle"
  "Round the corners of the current selection"
  ""
  "Alan Horkan, Sven Neumann"
  "Sven Neumann"
  "2004/06/07"
  "Temporary Procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Image"
    )
    (
      "drawable"
      "GimpDrawable"
      "Drawable"
    )
    (
      "adjustment"
      "gdouble"
      "R_adius (%)"
    )
    (
      "toggle"
      "gboolean"
      "Co_ncave (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "plug-in-script-fu-server"
  "Server for remote Script-Fu operation"
  "Provides a server for remote script-fu operation. NOTE that for security reasons this procedure's API was changed in an incompatible way since GIMP 2.8.12. You now have to pass the IP to listen on as first parameter. Calling this procedure with the old API will fail on purpose."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1997"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "ip"
      "gchararray"
      "The IP on which to listen for requests"
    )
    (
      "port"
      "gint"
      "The port on which to listen for requests (port >= 0)"
    )
    (
      "logfile"
      "gchararray"
      "The file to log activity to"
    )
  )
  (
  )
)
(register-procedure "plug-in-guillotine"
  "Slice the image into subimages using guides"
  "This function takes an image and slices it along its guides, creating new images. The original image is not modified."
  "Adam D. Moss (adam@@foxbox.org)"
  "Adam D. Moss (adam@@foxbox.org)"
  "1998"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The input image"
    )
    (
      "num-drawables"
      "gint"
      "Number of input drawables (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The input drawables"
    )
  )
  (
    (
      "image-count"
      "gint"
      "Number of images created (image-count >= 0)"
    )
    (
      "images"
      "GimpObjectArray"
      "Output images"
    )
  )
)
(register-procedure "gimp-brush-get-aspect-ratio"
  "Gets the aspect ratio of a generated brush."
  "This procedure gets the aspect ratio of a generated brush. If called for any other type of brush, it does not succeed. The return value is a float between 0.0 and 1000.0."
  "Bill Skaggs <weskaggs@@primate.ucdavis.edu>"
  "Bill Skaggs"
  "2004"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The brush name"
    )
  )
  (
    (
      "aspect-ratio"
      "gdouble"
      "The aspect ratio of the brush."
    )
  )
)
(register-procedure "gimp-image-crop"
  "Crop the image to the specified extents."
  "This procedure crops the image so that it's new width and height are equal to the supplied parameters. Offsets are also provided which describe the position of the previous image's content. All channels and layers within the image are cropped to the new image extents; this includes the image selection mask. If any parameters are out of range, an error is returned."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "new-width"
      "gint"
      "New image width: (0 < new_width <= width) (1 <= new-width <= 524288)"
    )
    (
      "new-height"
      "gint"
      "New image height: (0 < new_height <= height) (1 <= new-height <= 524288)"
    )
    (
      "offx"
      "gint"
      "X offset: (0 <= offx <= (width - new_width)) (offx >= 0)"
    )
    (
      "offy"
      "gint"
      "Y offset: (0 <= offy <= (height - new_height)) (offy >= 0)"
    )
  )
  (
  )
)
(register-procedure "gimp-drawable-edit-clear"
  "Clear selected area of drawable."
  "This procedure clears the specified drawable. If the drawable has an alpha channel, the cleared pixels will become transparent. If the drawable does not have an alpha channel, cleared pixels will be set to the background color. This procedure only affects regions within a selection if there is a selection active.

This procedure is affected by the following context setters: 'gimp-context-set-background'."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "drawable"
      "GimpDrawable"
      "The drawable to clear from"
    )
  )
  (
  )
)
(register-procedure "gimp-item-id-is-vectors"
  "Returns whether the item ID is a vectors."
  "This procedure returns TRUE if the specified item ID is a vectors."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "item-id"
      "gint"
      "The item ID"
    )
  )
  (
    (
      "vectors"
      "gboolean"
      "TRUE if the item ID is a vectors, FALSE otherwise (TRUE or FALSE)"
    )
  )
)
(register-procedure "gimp-context-set-opacity"
  "Set the opacity."
  "This procedure modifies the opacity setting. The value should be a floating point number between 0 and 100."
  "Michael Natterer <mitch@@gimp.org> & Sven Neumann <sven@@gimp.org>"
  "Michael Natterer & Sven Neumann"
  "2004"
  "Internal GIMP procedure"
  (
    (
      "opacity"
      "gdouble"
      "The opacity (0 <= opacity <= 100)"
    )
  )
  (
  )
)
(register-procedure "file-bz2-load"
  "loads files compressed with bzip2"
  "This procedure loads files in the bzip2 compressed format."
  "Daniel Risacher"
  "Daniel Risacher, Spencer Kimball and Peter Mattis"
  "1995-1997"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "file"
      "GFile"
      "The file to load"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "Output image"
    )
  )
)
(register-procedure "gimp-dodgeburn-default"
  "Dodgeburn image with varying exposure. This is the same as the gimp_dodgeburn() function except that the exposure, type and mode are taken from the tools option dialog. If the dialog has not been activated then the defaults as used by the dialog will be used."
  "Dodgeburn. More details here later."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "drawable"
      "GimpDrawable"
      "The affected drawable"
    )
    (
      "num-strokes"
      "gint"
      "Number of stroke control points (count each coordinate as 2 points) (num-strokes >= 2)"
    )
    (
      "strokes"
      "GimpFloatArray"
      "Array of stroke coordinates: @{ s1.x, s1.y, s2.x, s2.y, ..., sn.x, sn.y @}"
    )
  )
  (
  )
)
(register-procedure "gimp-context-get-pattern"
  "Retrieve the currently active pattern."
  "This procedure returns name of the the currently active pattern. All clone and bucket-fill operations with patterns will use this pattern to control the application of paint to the image."
  "Michael Natterer <mitch@@gimp.org> & Sven Neumann <sven@@gimp.org>"
  "Michael Natterer & Sven Neumann"
  "2004"
  "Internal GIMP procedure"
  (
  )
  (
    (
      "name"
      "gchararray"
      "The name of the active pattern"
    )
  )
)
(register-procedure "gimp-patterns-get-list"
  "Retrieve a complete listing of the available patterns."
  "This procedure returns a complete listing of available GIMP patterns. Each name returned can be used as input to the 'gimp-context-set-pattern'."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "filter"
      "gchararray"
      "An optional regular expression used to filter the list"
    )
  )
  (
    (
      "pattern-list"
      "GStrv"
      "The list of pattern names"
    )
  )
)
(register-procedure "gimp-patterns-popup"
  "Invokes the Gimp pattern selection."
  "This procedure opens the pattern selection dialog."
  "Andy Thomas"
  "Andy Thomas"
  "1998"
  "Internal GIMP procedure"
  (
    (
      "pattern-callback"
      "gchararray"
      "The callback PDB proc to call when pattern selection is made"
    )
    (
      "popup-title"
      "gchararray"
      "Title of the pattern selection dialog"
    )
    (
      "initial-pattern"
      "gchararray"
      "The name of the pattern to set as the first selected"
    )
  )
  (
  )
)
(register-procedure "plug-in-randomize-pick"
  "Randomly interchange some pixels with neighbors"
  "This plug-in replaces a pixel with a random adjacent pixel. You may select the percentage of pixels to modify and the number of times to repeat the process."
  "Compatibility procedure. Please see 'gegl:noise-pick' for credits."
  "Compatibility procedure. Please see 'gegl:noise-pick' for credits."
  "2013"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
    (
      "rndm-pct"
      "gdouble"
      "Randomization percentage (1 <= rndm-pct <= 100)"
    )
    (
      "rndm-rcount"
      "gdouble"
      "Repeat count (1 <= rndm-rcount <= 100)"
    )
    (
      "randomize"
      "gboolean"
      "Use random seed (TRUE or FALSE)"
    )
    (
      "seed"
      "gint"
      "Seed value (used only if randomize is FALSE)"
    )
  )
  (
  )
)
(register-procedure "file-xmc-load-thumb"
  "Loads only first frame of X11 Mouse Cursor's animation sequence which nominal size is the closest of thumb-size to be used as a thumbnail"
  ""
  "Takeshi Matsuyama <tksmashiw@@gmail.com>"
  "Takeshi Matsuyama"
  "26 May 2009"
  "GIMP Plug-In"
  (
    (
      "file"
      "GFile"
      "The file to load the thumbnail from"
    )
    (
      "thumb-size"
      "gint"
      "Preferred thumbnail size (16 <= thumb-size <= 2014)"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "Thumbnail image"
    )
    (
      "image-width"
      "gint"
      "Width of the full-sized image (0 for unknown) (0 <= image-width <= 524288)"
    )
    (
      "image-height"
      "gint"
      "Height of the full-sized image (0 for unknown) (0 <= image-height <= 524288)"
    )
    (
      "image-type"
      "GimpImageType"
      "Type of the image @{ RGB-IMAGE (0), RGBA-IMAGE (1), GRAY-IMAGE (2), GRAYA-IMAGE (3), INDEXED-IMAGE (4), INDEXEDA-IMAGE (5) @}"
    )
    (
      "num-layers"
      "gint"
      "Number of layers in the image (num-layers >= 1)"
    )
  )
)
(register-procedure "plug-in-dilate"
  "Grow lighter areas of the image"
  "Dilate image."
  "Compatibility procedure. Please see 'gegl:value-propagate' for credits."
  "Compatibility procedure. Please see 'gegl:value-propagate' for credits."
  "2015"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
    (
      "propagate-mode"
      "gint"
      "Propagate mode @{ 0:white, 1:black, 2:middle value 3:foreground to peak, 4:foreground, 5:background, 6:opaque, 7:transparent @} (0 <= propagate-mode <= 7)"
    )
    (
      "propagating-channel"
      "gint"
      "Channels which values are propagated"
    )
    (
      "propagating-rate"
      "gdouble"
      "Propagating rate (0 <= propagating-rate <= 1)"
    )
    (
      "direction-mask"
      "gint"
      "Direction mask (0 <= direction-mask <= 15)"
    )
    (
      "lower-limit"
      "gint"
      "Lower limit (0 <= lower-limit <= 255)"
    )
    (
      "upper-limit"
      "gint"
      "Upper limit (0 <= upper-limit <= 255)"
    )
  )
  (
  )
)
(register-procedure "gimp-context-set-mypaint-brush"
  "Set the specified MyPaint brush as the active MyPaint brush."
  "This procedure allows the active MyPaint brush to be set by specifying its name. The name is simply a string which corresponds to one of the names of the installed MyPaint brushes. If there is no matching MyPaint brush found, this procedure will return an error. Otherwise, the specified MyPaint brush becomes active and will be used in all subsequent MyPaint paint operations."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2016"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The name of the MyPaint brush"
    )
  )
  (
  )
)
(register-procedure "gimp-context-set-paint-method"
  "Set the specified paint method as the active paint method."
  "This procedure allows the active paint method to be set by specifying its name. The name is simply a string which corresponds to one of the names of the available paint methods. If there is no matching method found, this procedure will return an error. Otherwise, the specified method becomes active and will be used in all subsequent paint operations."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2005"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The name of the paint method"
    )
  )
  (
  )
)
(register-procedure "plug-in-gauss-rle"
  "Apply a gaussian blur"
  "Applies a gaussian blur to the drawable, with specified radius of affect. The standard deviation of the normal distribution used to modify pixel values is calculated based on the supplied radius. Horizontal and vertical blurring can be independently invoked by specifying only one to run."
  "Compatibility procedure. Please see 'gegl:gaussian-blur' for credits."
  "Compatibility procedure. Please see 'gegl:gaussian-blur' for credits."
  "2014"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
    (
      "radius"
      "gdouble"
      "Radius of gaussian blur (in pixels (0 <= radius <= 500)"
    )
    (
      "horizontal"
      "gboolean"
      "Blur in horizontal direction (TRUE or FALSE)"
    )
    (
      "vertical"
      "gboolean"
      "Blur in vertical direction (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "file-fits-load"
  "Load file of the FITS file format"
  "Load file of the FITS file format (Flexible Image Transport System)"
  "Peter Kirchgessner"
  "Peter Kirchgessner (peter@@kirchgessner.net)"
  "1997"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "file"
      "GFile"
      "The file to load"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "Output image"
    )
  )
)
(register-procedure "gimp-image-convert-color-profile-from-file"
  "Convert the image's layers to a color profile"
  "This procedure converts from the image's color profile (or the default RGB or grayscale profile if none is set) to an ICC profile specified by 'file'. Only RGB and grayscale color profiles are accepted, according to the image's type."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2015"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "file"
      "GFile"
      "The file containing the new color profile"
    )
    (
      "intent"
      "GimpColorRenderingIntent"
      "Rendering intent @{ COLOR-RENDERING-INTENT-PERCEPTUAL (0), COLOR-RENDERING-INTENT-RELATIVE-COLORIMETRIC (1), COLOR-RENDERING-INTENT-SATURATION (2), COLOR-RENDERING-INTENT-ABSOLUTE-COLORIMETRIC (3) @}"
    )
    (
      "bpc"
      "gboolean"
      "Black point compensation (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "gimp-vectors-export-to-string"
  "Save a path as an SVG string."
  "This procedure works like 'gimp-vectors-export-to-file' but creates a string rather than a file. The contents are a NUL-terminated string that holds a complete XML document. If you pass 0 as the 'vectors' argument, then all paths in the image will be exported."
  "Bill Skaggs <weskaggs@@primate.ucdavis.edu>"
  "Bill Skaggs"
  "2007"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "vectors"
      "GimpVectors"
      "The vectors object to save, or 0 for all in the image"
    )
  )
  (
    (
      "string"
      "gchararray"
      "A string whose contents are a complete SVG document."
    )
  )
)
(register-procedure "gimp-debug-timer-start"
  "Starts measuring elapsed time."
  "This procedure starts a timer, measuring the elapsed time since the call. Each call to this procedure should be matched by a call to 'gimp-debug-timer-end', which returns the elapsed time.
If there is already an active timer, it is not affected by the call, however, a matching 'gimp-debug-timer-end' call is still required.

This is a debug utility procedure. It is subject to change at any point, and should not be used in production."
  "Ell"
  "Ell"
  "2017"
  "Internal GIMP procedure"
  (
  )
  (
  )
)
(register-procedure "gimp-text-layer-set-letter-spacing"
  "Adjust the letter spacing in a text layer."
  "This procedure sets the additional spacing between the single glyphs in a text layer."
  "Marcus Heese <heese@@cip.ifi.lmu.de>"
  "Marcus Heese"
  "2008"
  "Internal GIMP procedure"
  (
    (
      "layer"
      "GimpLayer"
      "The text layer"
    )
    (
      "letter-spacing"
      "gdouble"
      "The additional letter spacing to use. (-8192 <= letter-spacing <= 8192)"
    )
  )
  (
  )
)
(register-procedure "gimp-image-get-name"
  "Returns the specified image's name."
  "This procedure returns the image's name. If the image has a filename or an URI, then the returned name contains the filename's or URI's base name (the last component of the path). Otherwise it is the translated string \"Untitled\". The returned name is formatted like the image name in the image window title, it may contain '[]', '(imported)' etc. and should only be used to label user interface elements. Never use it to construct filenames."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
  )
  (
    (
      "name"
      "gchararray"
      "The name."
    )
  )
)
(register-procedure "gimp-context-swap-colors"
  "Swap the current GIMP foreground and background colors."
  "This procedure swaps the current GIMP foreground and background colors, so that the new foreground color becomes the old background color and vice versa."
  "Michael Natterer <mitch@@gimp.org> & Sven Neumann <sven@@gimp.org>"
  "Michael Natterer & Sven Neumann"
  "2004"
  "Internal GIMP procedure"
  (
  )
  (
  )
)
(register-procedure "file-tiff-load"
  "Loads files of the TIFF and BigTIFF file formats"
  "Loads files of the Tag Image File Format (TIFF) and its 64-bit offsets variant (BigTIFF)"
  "Spencer Kimball, Peter Mattis & Nick Lamb"
  "Nick Lamb <njl195@@zepler.org.uk>"
  "1995-1996,1998-2003"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "file"
      "GFile"
      "The file to load"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "Output image"
    )
  )
)
(register-procedure "gimp-image-select-round-rectangle"
  "Create a rectangular selection with round corners over the specified image;"
  "This tool creates a rectangular selection with round corners over the specified image. The rectangular region can be either added to, subtracted from, or replace the contents of the previous selection mask.

This procedure is affected by the following context setters: 'gimp-context-set-antialias', 'gimp-context-set-feather', 'gimp-context-set-feather-radius'."
  "Martin Nordholts"
  "Martin Nordholts"
  "2010"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "operation"
      "GimpChannelOps"
      "The selection operation @{ CHANNEL-OP-ADD (0), CHANNEL-OP-SUBTRACT (1), CHANNEL-OP-REPLACE (2), CHANNEL-OP-INTERSECT (3) @}"
    )
    (
      "x"
      "gdouble"
      "x coordinate of upper-left corner of rectangle"
    )
    (
      "y"
      "gdouble"
      "y coordinate of upper-left corner of rectangle"
    )
    (
      "width"
      "gdouble"
      "The width of the rectangle (width >= 0)"
    )
    (
      "height"
      "gdouble"
      "The height of the rectangle (height >= 0)"
    )
    (
      "corner-radius-x"
      "gdouble"
      "The corner radius in X direction (0 <= corner-radius-x <= 524288)"
    )
    (
      "corner-radius-y"
      "gdouble"
      "The corner radius in Y direction (0 <= corner-radius-y <= 524288)"
    )
  )
  (
  )
)
(register-procedure "plug-in-noisify"
  "Adds random noise to image channels"
  "Add normally distributed random values to image channels. For color images each color channel may be treated together or independently."
  "Compatibility procedure. Please see 'gegl:noise-rgb' for credits."
  "Compatibility procedure. Please see 'gegl:noise-rgb' for credits."
  "2013"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
    (
      "independent"
      "gboolean"
      "Noise in channels independent (TRUE or FALSE)"
    )
    (
      "noise-1"
      "gdouble"
      "Noise in the first channel (red, gray) (0 <= noise-1 <= 1)"
    )
    (
      "noise-2"
      "gdouble"
      "Noise in the second channel (green, gray_alpha) (0 <= noise-2 <= 1)"
    )
    (
      "noise-3"
      "gdouble"
      "Noise in the third channel (blue) (0 <= noise-3 <= 1)"
    )
    (
      "noise-4"
      "gdouble"
      "Noise in the fourth channel (alpha) (0 <= noise-4 <= 1)"
    )
  )
  (
  )
)
(register-procedure "file-xwd-save"
  "Exports files in the XWD (X Window Dump) format"
  "XWD exporting handles all image types except those with alpha channels."
  "Peter Kirchgessner"
  "Peter Kirchgessner"
  "1996"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The image to save"
    )
    (
      "num-drawables"
      "gint"
      "Number of drawables to be saved (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The drawables to save"
    )
    (
      "file"
      "GFile"
      "The file to save to"
    )
  )
  (
  )
)
(register-procedure "gimp-context-set-pattern"
  "Set the specified pattern as the active pattern."
  "This procedure allows the active pattern to be set by specifying its name. The name is simply a string which corresponds to one of the names of the installed patterns. If there is no matching pattern found, this procedure will return an error. Otherwise, the specified pattern becomes active and will be used in all subsequent paint operations."
  "Michael Natterer <mitch@@gimp.org> & Sven Neumann <sven@@gimp.org>"
  "Michael Natterer & Sven Neumann"
  "2004"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The name of the pattern"
    )
  )
  (
  )
)
(register-procedure "gimp-drawable-is-indexed"
  "Returns whether the drawable is an indexed type."
  "This procedure returns TRUE if the specified drawable is of type @{ Indexed, IndexedA @}."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "drawable"
      "GimpDrawable"
      "The drawable"
    )
  )
  (
    (
      "is-indexed"
      "gboolean"
      "TRUE if the drawable is an indexed type (TRUE or FALSE)"
    )
  )
)
(register-procedure "gimp-gradient-segment-set-left-color"
  "Sets the left endpoint color of the specified segment"
  "This procedure sets the left endpoint color of the specified segment of the specified gradient."
  "Shlomi Fish <shlomif@@iglu.org.il>"
  "Shlomi Fish"
  "2003"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The gradient name"
    )
    (
      "segment"
      "gint"
      "The index of the segment within the gradient (segment >= 0)"
    )
    (
      "color"
      "GimpRGB"
      "The color to set"
    )
    (
      "opacity"
      "gdouble"
      "The opacity to set for the endpoint (0 <= opacity <= 100)"
    )
  )
  (
  )
)
(register-procedure "gimp-buffer-get-bytes"
  "Retrieves the specified buffer's bytes."
  "This procedure retrieves the specified named buffer's bytes."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2005"
  "Internal GIMP procedure"
  (
    (
      "buffer-name"
      "gchararray"
      "The buffer name"
    )
  )
  (
    (
      "bytes"
      "gint"
      "The buffer bpp"
    )
  )
)
(register-procedure "file-raw-placeholder-phaseone-load"
  "Load files in the Phase One raw formats via placeholder"
  "This plug-in loads files in Phase One's raw formats by calling placeholder."
  "Tobias Ellinghaus"
  "Tobias Ellinghaus"
  "2016"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "file"
      "GFile"
      "The file to load"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "Output image"
    )
  )
)
(register-procedure "gimp-context-set-sample-threshold"
  "Set the sample threshold setting."
  "This procedure modifies the sample threshold setting. If an operation depends on the colors of the pixels present in a drawable, like when doing a seed fill, this setting controls what is \"sufficiently close\" to be considered a similar color. If the sample threshold has not been set explicitly, the default threshold set in gimprc will be used.

This setting affects the following procedures: 'gimp-image-select-color', 'gimp-image-select-contiguous-color', 'gimp-drawable-edit-bucket-fill'."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2011"
  "Internal GIMP procedure"
  (
    (
      "sample-threshold"
      "gdouble"
      "The sample threshold setting (0 <= sample-threshold <= 1)"
    )
  )
  (
  )
)
(register-procedure "gimp-image-thumbnail"
  "Get a thumbnail of an image."
  "This function gets data from which a thumbnail of an image preview can be created. Maximum x or y dimension is 1024 pixels. The pixels are returned in RGB[A] or GRAY[A] format. The bpp return value gives the number of bits per pixel in the image."
  "Andy Thomas"
  "Andy Thomas"
  "1999"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "width"
      "gint"
      "The requested thumbnail width (1 <= width <= 1024)"
    )
    (
      "height"
      "gint"
      "The requested thumbnail height (1 <= height <= 1024)"
    )
  )
  (
    (
      "actual-width"
      "gint"
      "The previews width"
    )
    (
      "actual-height"
      "gint"
      "The previews height"
    )
    (
      "bpp"
      "gint"
      "The previews bpp"
    )
    (
      "thumbnail-data-count"
      "gint"
      "The number of bytes in thumbnail data (thumbnail-data-count >= 0)"
    )
    (
      "thumbnail-data"
      "GimpUint8Array"
      "The thumbnail data"
    )
  )
)
(register-procedure "gimp-palette-export-python"
  "Export the active palette as a Python dictionary (name: color)"
  ""
  "Barak Itkin <lightningismyname@@gmail.com>"
  "Barak Itkin"
  "May 15th, 2009"
  "Temporary Procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "dirname"
      "gchararray"
      "Folder for the output file"
    )
    (
      "string"
      "gchararray"
      "The name of the file to create (if a file with this name already exist, it will be replaced)"
    )
  )
  (
  )
)
(register-procedure "gimp-context-get-antialias"
  "Get the antialias setting."
  "This procedure returns the antialias setting."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2010"
  "Internal GIMP procedure"
  (
  )
  (
    (
      "antialias"
      "gboolean"
      "The antialias setting (TRUE or FALSE)"
    )
  )
)
(register-procedure "script-fu-refresh"
  "Re-read all available Script-Fu scripts"
  "Re-read all available Script-Fu scripts"
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1997"
  "Temporary Procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
  )
  (
  )
)
(register-procedure "gimp-gradient-segment-set-right-pos"
  "Sets the right endpoint position of the specified segment"
  "This procedure sets the right endpoint position of the specified segment of the specified gradient. The final position will be between the position of the middle point of the current segment and the middle point of the segment to the right.
This procedure returns the final position."
  "Shlomi Fish <shlomif@@iglu.org.il>"
  "Shlomi Fish"
  "2003"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The gradient name"
    )
    (
      "segment"
      "gint"
      "The index of the segment within the gradient (segment >= 0)"
    )
    (
      "pos"
      "gdouble"
      "The position to set the guidepoint to (0 <= pos <= 1)"
    )
  )
  (
    (
      "final-pos"
      "gdouble"
      "The return position"
    )
  )
)
(register-procedure "gimp-image-set-file"
  "Sets the specified image's file."
  "This procedure sets the specified image's file."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "file"
      "GFile"
      "The new image file"
    )
  )
  (
  )
)
(register-procedure "plug-in-recompose"
  "Recompose an image that was previously decomposed"
  "This function recombines the grayscale layers produced by Decompose into a single RGB or RGBA layer, and replaces the originally decomposed layer with the result."
  "Bill Skaggs"
  "Bill Skaggs"
  "2004"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The input image"
    )
    (
      "num-drawables"
      "gint"
      "Number of input drawables (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The input drawables"
    )
  )
  (
  )
)
(register-procedure "gimp-online-main-web-site"
  "Bookmark to the GIMP web site"
  ""
  "Henrik Brix Andersen <brix@@gimp.org>"
  "Henrik Brix Andersen <brix@@gimp.org>"
  "2003"
  "Temporary Procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
  )
  (
  )
)
(register-procedure "gimp-pdb-get-data"
  "Returns data associated with the specified identifier."
  "This procedure returns any data which may have been associated with the specified identifier. The data is a variable length array of bytes. If no data has been associated with the identifier, an error is returned."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1997"
  "Internal GIMP procedure"
  (
    (
      "identifier"
      "gchararray"
      "The identifier associated with data"
    )
  )
  (
    (
      "bytes"
      "gint"
      "The number of bytes in the data (bytes >= 1)"
    )
    (
      "data"
      "GimpUint8Array"
      "A byte array containing data"
    )
  )
)
(register-procedure "gimp-layer-get-apply-mask"
  "Get the apply mask setting of the specified layer."
  "This procedure returns the specified layer's apply mask setting. If the value is TRUE, then the layer mask for this layer is currently being composited with the layer's alpha channel."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "layer"
      "GimpLayer"
      "The layer"
    )
  )
  (
    (
      "apply-mask"
      "gboolean"
      "The layer's apply mask setting (TRUE or FALSE)"
    )
  )
)
(register-procedure "gimp-vectors-stroke-close"
  "closes the specified stroke."
  "Closes the specified stroke."
  "Simon Budig"
  "Simon Budig"
  "2005"
  "Internal GIMP procedure"
  (
    (
      "vectors"
      "GimpVectors"
      "The vectors object"
    )
    (
      "stroke-id"
      "gint"
      "The stroke ID"
    )
  )
  (
  )
)
(register-procedure "gimp-text-layer-set-base-direction"
  "Set the base direction in the text layer."
  "This procedure sets the base direction used in applying the Unicode bidirectional algorithm when rendering the text."
  "Marcus Heese <heese@@cip.ifi.lmu.de>"
  "Marcus Heese"
  "2008"
  "Internal GIMP procedure"
  (
    (
      "layer"
      "GimpLayer"
      "The text layer"
    )
    (
      "direction"
      "GimpTextDirection"
      "The base direction of the text. @{ TEXT-DIRECTION-LTR (0), TEXT-DIRECTION-RTL (1), TEXT-DIRECTION-TTB-RTL (2), TEXT-DIRECTION-TTB-RTL-UPRIGHT (3), TEXT-DIRECTION-TTB-LTR (4), TEXT-DIRECTION-TTB-LTR-UPRIGHT (5) @}"
    )
  )
  (
  )
)
(register-procedure "plug-in-apply-canvas"
  "Add a canvas texture to the image"
  "This function applies a canvas texture map to the drawable."
  "Compatibility procedure. Please see 'gegl:texturize-canvas' for credits."
  "Compatibility procedure. Please see 'gegl:texturize-canvas' for credits."
  "2014"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
    (
      "direction"
      "gint"
      "Light direction (0 - 3) (0 <= direction <= 3)"
    )
    (
      "depth"
      "gint"
      "Texture depth (1 - 50) (1 <= depth <= 50)"
    )
  )
  (
  )
)
(register-procedure "gimp-layer-flatten"
  "Remove the alpha channel from the layer if it has one."
  "This procedure removes the alpha channel from a layer, blending all (partially) transparent pixels in the layer against the background color. This transforms layers of type RGBA to RGB, GRAYA to GRAY, and INDEXEDA to INDEXED."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2007"
  "Internal GIMP procedure"
  (
    (
      "layer"
      "GimpLayer"
      "The layer"
    )
  )
  (
  )
)
(register-procedure "gimp-selection-value"
  "Find the value of the selection at the specified coordinates."
  "This procedure returns the value of the selection at the specified coordinates. If the coordinates lie out of bounds, 0 is returned."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "x"
      "gint"
      "x coordinate of value"
    )
    (
      "y"
      "gint"
      "y coordinate of value"
    )
  )
  (
    (
      "value"
      "gint"
      "Value of the selection (0 <= value <= 255)"
    )
  )
)
(register-procedure "plug-in-exchange"
  "Swap one color with another"
  "Exchange one color with another, optionally setting a threshold to convert from one shade to another."
  "Compatibility procedure. Please see 'gegl:color-exchange' for credits."
  "Compatibility procedure. Please see 'gegl:color-exchange' for credits."
  "2014"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
    (
      "from-red"
      "guchar"
      "Red value (from)"
    )
    (
      "from-green"
      "guchar"
      "Green value (from)"
    )
    (
      "from-blue"
      "guchar"
      "Blue value (from)"
    )
    (
      "to-red"
      "guchar"
      "Red value (to)"
    )
    (
      "to-green"
      "guchar"
      "Green value (to)"
    )
    (
      "to-blue"
      "guchar"
      "Blue value (to)"
    )
    (
      "red-threshold"
      "guchar"
      "Red threshold"
    )
    (
      "green-threshold"
      "guchar"
      "Green threshold"
    )
    (
      "blue-threshold"
      "guchar"
      "Blue threshold"
    )
  )
  (
  )
)
(register-procedure "gimp-version"
  "Returns the host GIMP version."
  "This procedure returns the version number of the currently running GIMP."
  "Manish Singh"
  "Manish Singh"
  "1999"
  "Internal GIMP procedure"
  (
  )
  (
    (
      "version"
      "gchararray"
      "GIMP version number"
    )
  )
)
(register-procedure "gimp-layer-new"
  "Create a new layer."
  "This procedure creates a new layer with the specified width, height, and type. Name, opacity, and mode are also supplied parameters. The new layer still needs to be added to the image, as this is not automatic. Add the new layer with the 'gimp-image-insert-layer' command. Other attributes such as layer mask modes, and offsets should be set with explicit procedure calls."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image to which to add the layer"
    )
    (
      "width"
      "gint"
      "The layer width (1 <= width <= 524288)"
    )
    (
      "height"
      "gint"
      "The layer height (1 <= height <= 524288)"
    )
    (
      "type"
      "GimpImageType"
      "The layer type @{ RGB-IMAGE (0), RGBA-IMAGE (1), GRAY-IMAGE (2), GRAYA-IMAGE (3), INDEXED-IMAGE (4), INDEXEDA-IMAGE (5) @}"
    )
    (
      "name"
      "gchararray"
      "The layer name"
    )
    (
      "opacity"
      "gdouble"
      "The layer opacity (0 <= opacity <= 100)"
    )
    (
      "mode"
      "GimpLayerMode"
      "The layer combination mode @{ LAYER-MODE-NORMAL-LEGACY (0), LAYER-MODE-DISSOLVE (1), LAYER-MODE-BEHIND-LEGACY (2), LAYER-MODE-MULTIPLY-LEGACY (3), LAYER-MODE-SCREEN-LEGACY (4), LAYER-MODE-OVERLAY-LEGACY (5), LAYER-MODE-DIFFERENCE-LEGACY (6), LAYER-MODE-ADDITION-LEGACY (7), LAYER-MODE-SUBTRACT-LEGACY (8), LAYER-MODE-DARKEN-ONLY-LEGACY (9), LAYER-MODE-LIGHTEN-ONLY-LEGACY (10), LAYER-MODE-HSV-HUE-LEGACY (11), LAYER-MODE-HSV-SATURATION-LEGACY (12), LAYER-MODE-HSL-COLOR-LEGACY (13), LAYER-MODE-HSV-VALUE-LEGACY (14), LAYER-MODE-DIVIDE-LEGACY (15), LAYER-MODE-DODGE-LEGACY (16), LAYER-MODE-BURN-LEGACY (17), LAYER-MODE-HARDLIGHT-LEGACY (18), LAYER-MODE-SOFTLIGHT-LEGACY (19), LAYER-MODE-GRAIN-EXTRACT-LEGACY (20), LAYER-MODE-GRAIN-MERGE-LEGACY (21), LAYER-MODE-COLOR-ERASE-LEGACY (22), LAYER-MODE-OVERLAY (23), LAYER-MODE-LCH-HUE (24), LAYER-MODE-LCH-CHROMA (25), LAYER-MODE-LCH-COLOR (26), LAYER-MODE-LCH-LIGHTNESS (27), LAYER-MODE-NORMAL (28), LAYER-MODE-BEHIND (29), LAYER-MODE-MULTIPLY (30), LAYER-MODE-SCREEN (31), LAYER-MODE-DIFFERENCE (32), LAYER-MODE-ADDITION (33), LAYER-MODE-SUBTRACT (34), LAYER-MODE-DARKEN-ONLY (35), LAYER-MODE-LIGHTEN-ONLY (36), LAYER-MODE-HSV-HUE (37), LAYER-MODE-HSV-SATURATION (38), LAYER-MODE-HSL-COLOR (39), LAYER-MODE-HSV-VALUE (40), LAYER-MODE-DIVIDE (41), LAYER-MODE-DODGE (42), LAYER-MODE-BURN (43), LAYER-MODE-HARDLIGHT (44), LAYER-MODE-SOFTLIGHT (45), LAYER-MODE-GRAIN-EXTRACT (46), LAYER-MODE-GRAIN-MERGE (47), LAYER-MODE-VIVID-LIGHT (48), LAYER-MODE-PIN-LIGHT (49), LAYER-MODE-LINEAR-LIGHT (50), LAYER-MODE-HARD-MIX (51), LAYER-MODE-EXCLUSION (52), LAYER-MODE-LINEAR-BURN (53), LAYER-MODE-LUMA-DARKEN-ONLY (54), LAYER-MODE-LUMA-LIGHTEN-ONLY (55), LAYER-MODE-LUMINANCE (56), LAYER-MODE-COLOR-ERASE (57), LAYER-MODE-ERASE (58), LAYER-MODE-MERGE (59), LAYER-MODE-SPLIT (60), LAYER-MODE-PASS-THROUGH (61), LAYER-MODE-REPLACE (62), LAYER-MODE-ANTI-ERASE (63) @}"
    )
  )
  (
    (
      "layer"
      "GimpLayer"
      "The newly created layer"
    )
  )
)
(register-procedure "gimp-brush-set-radius"
  "Sets the radius of a generated brush."
  "This procedure sets the radius for a generated brush. If called for any other type of brush, it does not succeed."
  "Bill Skaggs <weskaggs@@primate.ucdavis.edu>"
  "Bill Skaggs"
  "2004"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The brush name"
    )
    (
      "radius-in"
      "gdouble"
      "The desired brush radius in pixel"
    )
  )
  (
    (
      "radius-out"
      "gdouble"
      "The brush radius actually assigned"
    )
  )
)
(register-procedure "gimp-text-layer-get-font-size"
  "Get the font size from a text layer."
  "This procedure returns the size of the font which is used in a text layer. You will receive the size as a float 'font-size' in 'unit' units."
  "Marcus Heese <heese@@cip.ifi.lmu.de>"
  "Marcus Heese"
  "2008"
  "Internal GIMP procedure"
  (
    (
      "layer"
      "GimpLayer"
      "The text layer"
    )
  )
  (
    (
      "font-size"
      "gdouble"
      "The font size"
    )
    (
      "unit"
      "GimpUnit"
      "The unit used for the font size"
    )
  )
)
(register-procedure "file-tga-save"
  "Exports files in the Targa file format"
  "FIXME: write help for tga_save"
  "Raphael FRANCOIS, Gordon Matzigkeit"
  "Raphael FRANCOIS, Gordon Matzigkeit"
  "1997,2000"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "The image to save"
    )
    (
      "num-drawables"
      "gint"
      "Number of drawables to be saved (num-drawables >= 0)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The drawables to save"
    )
    (
      "file"
      "GFile"
      "The file to save to"
    )
    (
      "rle"
      "gboolean"
      "Use RLE compression (TRUE or FALSE)"
    )
    (
      "origin"
      "gint"
      "Image origin (0 = top-left, 1 = bottom-left) (0 <= origin <= 1)"
    )
  )
  (
  )
)
(register-procedure "gimp-text-layer-set-color"
  "Set the color of the text in the text layer."
  "This procedure sets the text color in the text layer 'layer'."
  "Marcus Heese <heese@@cip.ifi.lmu.de>"
  "Marcus Heese"
  "2008"
  "Internal GIMP procedure"
  (
    (
      "layer"
      "GimpLayer"
      "The text layer"
    )
    (
      "color"
      "GimpRGB"
      "The color to use for the text"
    )
  )
  (
  )
)
(register-procedure "gimp-pdb-set-proc-image-types"
  "Set the supported image types for a plug-in procedure."
  "This procedure sets the supported images types for the given procedure."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2019"
  "Internal GIMP procedure"
  (
    (
      "procedure-name"
      "gchararray"
      "The procedure for which to install the menu path"
    )
    (
      "image-types"
      "gchararray"
      "The procedure's supported image types"
    )
  )
  (
  )
)
(register-procedure "gimp-image-set-unit"
  "Sets the specified image's unit."
  "This procedure sets the specified image's unit. No scaling or resizing is performed. This value is independent of any of the layers in this image. See the gimp_unit_*() procedure definitions for the valid range of unit IDs and a description of the unit system."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "1998"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "unit"
      "GimpUnit"
      "The new image unit"
    )
  )
  (
  )
)
(register-procedure "gimp-palette-entry-set-color"
  "Sets the specified palette entry in the specified palette."
  "This procedure sets the color of the zero-based entry specified for the specified palette. It returns an error if the entry does not exist."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2004"
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The palette name"
    )
    (
      "entry-num"
      "gint"
      "The entry to retrieve"
    )
    (
      "color"
      "GimpRGB"
      "The new color"
    )
  )
  (
  )
)
(register-procedure "gimp-context-get-ink-blob-angle"
  "Get ink blob angle in degrees."
  "Get the ink blob angle in degrees for ink tool."
  "Ed Swartz"
  "Ed Swartz"
  "2012"
  "Internal GIMP procedure"
  (
  )
  (
    (
      "angle"
      "gdouble"
      "ink blob angle in degrees (-180 <= angle <= 180)"
    )
  )
)
(register-procedure "file-gex-load"
  "Loads GIMP extension"
  "Loads GIMP extension"
  "Jehan"
  "Jehan"
  "2019"
  "Internal GIMP procedure"
  (
    (
      "dummy-param"
      "GimpRunMode"
      "Dummy parameter @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "file"
      "GFile"
      "The file to load"
    )
  )
  (
    (
      "extension-id"
      "gchararray"
      "Identifier of the newly installed extension"
    )
  )
)
(register-procedure "file-raw-placeholder-canon-load"
  "Load files in the Canon raw formats via placeholder"
  "This plug-in loads files in Canon's raw formats by calling placeholder."
  "Tobias Ellinghaus"
  "Tobias Ellinghaus"
  "2016"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "file"
      "GFile"
      "The file to load"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "Output image"
    )
  )
)
(register-procedure "file-jpeg-load-thumb"
  "Loads a thumbnail from a JPEG image"
  "Loads a thumbnail from a JPEG image, if one exists"
  "Mukund Sivaraman <muks@@mukund.org>, Sven Neumann <sven@@gimp.org>"
  "Mukund Sivaraman <muks@@mukund.org>, Sven Neumann <sven@@gimp.org>"
  "November 15, 2004"
  "GIMP Plug-In"
  (
    (
      "file"
      "GFile"
      "The file to load the thumbnail from"
    )
    (
      "thumb-size"
      "gint"
      "Preferred thumbnail size (16 <= thumb-size <= 2014)"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "Thumbnail image"
    )
    (
      "image-width"
      "gint"
      "Width of the full-sized image (0 for unknown) (0 <= image-width <= 524288)"
    )
    (
      "image-height"
      "gint"
      "Height of the full-sized image (0 for unknown) (0 <= image-height <= 524288)"
    )
    (
      "image-type"
      "GimpImageType"
      "Type of the image @{ RGB-IMAGE (0), RGBA-IMAGE (1), GRAY-IMAGE (2), GRAYA-IMAGE (3), INDEXED-IMAGE (4), INDEXEDA-IMAGE (5) @}"
    )
    (
      "num-layers"
      "gint"
      "Number of layers in the image (num-layers >= 1)"
    )
  )
)
(register-procedure "gimp-context-pop"
  "Pops the topmost context from the plug-in's context stack."
  "This procedure removes the topmost context from the plug-in's context stack. The context that was active before the corresponding call to 'gimp-context-push' becomes the new current context of the plug-in."
  "Michael Natterer <mitch@@gimp.org> & Sven Neumann <sven@@gimp.org>"
  "Michael Natterer & Sven Neumann"
  "2004"
  "Internal GIMP procedure"
  (
  )
  (
  )
)
(register-procedure "plug-in-displace"
  "Displace pixels as indicated by displacement maps"
  "Displaces the contents of the specified drawable by the amounts specified by 'amount-x' and 'amount-y' multiplied by the luminance of corresponding pixels in the 'displace-map' drawables."
  "Compatibility procedure. Please see 'gegl:displace' for credits."
  "Compatibility procedure. Please see 'gegl:displace' for credits."
  "2015"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
    (
      "amount-x"
      "gdouble"
      "Displace multiplier for x direction (-500 <= amount-x <= 500)"
    )
    (
      "amount-y"
      "gdouble"
      "Displace multiplier for y direction (-500 <= amount-y <= 500)"
    )
    (
      "do-x"
      "gboolean"
      "Displace in x direction ? (TRUE or FALSE)"
    )
    (
      "do-y"
      "gboolean"
      "Displace in y direction ? (TRUE or FALSE)"
    )
    (
      "displace-map-x"
      "GimpDrawable"
      "Displacement map for x direction"
    )
    (
      "displace-map-y"
      "GimpDrawable"
      "Displacement map for y direction"
    )
    (
      "displace-type"
      "gint"
      "Edge behavior @{ WRAP (1), SMEAR (2), BLACK (3) @} (1 <= displace-type <= 3)"
    )
  )
  (
  )
)
(register-procedure "gimp-drawable-thumbnail"
  "Get a thumbnail of a drawable."
  "This function gets data from which a thumbnail of a drawable preview can be created. Maximum x or y dimension is 1024 pixels. The pixels are returned in RGB[A] or GRAY[A] format. The bpp return value gives the number of bytes in the image."
  "Andy Thomas"
  "Andy Thomas"
  "1999"
  "Internal GIMP procedure"
  (
    (
      "drawable"
      "GimpDrawable"
      "The drawable"
    )
    (
      "width"
      "gint"
      "The requested thumbnail width (1 <= width <= 1024)"
    )
    (
      "height"
      "gint"
      "The requested thumbnail height (1 <= height <= 1024)"
    )
  )
  (
    (
      "actual-width"
      "gint"
      "The previews width"
    )
    (
      "actual-height"
      "gint"
      "The previews height"
    )
    (
      "bpp"
      "gint"
      "The previews bpp"
    )
    (
      "thumbnail-data-count"
      "gint"
      "The number of bytes in thumbnail data (thumbnail-data-count >= 0)"
    )
    (
      "thumbnail-data"
      "GimpUint8Array"
      "The thumbnail data"
    )
  )
)
(register-procedure "file-gih-save-internal"
  "Exports Gimp animated brush file (.gih)"
  "Exports Gimp animated brush file (.gih)"
  "Tor Lillqvist, Michael Natterer"
  "Tor Lillqvist, Michael Natterer"
  "1999-2019"
  "Internal GIMP procedure"
  (
    (
      "dummy-param"
      "GimpRunMode"
      "Dummy parameter @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image"
    )
    (
      "num-drawables"
      "gint"
      "The number of drawables to save (num-drawables >= 1)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "Drawables to save"
    )
    (
      "file"
      "GFile"
      "The file to export"
    )
    (
      "spacing"
      "gint"
      "Spacing of the brush (1 <= spacing <= 1000)"
    )
    (
      "name"
      "gchararray"
      "The name of the brush"
    )
    (
      "params"
      "gchararray"
      "The pipe's parameters"
    )
  )
  (
  )
)
(register-procedure "script-fu-carve-it"
  "Use the specified drawable as a stencil to carve from the specified image."
  ""
  "Spencer Kimball"
  "Spencer Kimball"
  "1997"
  "Temporary Procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Mask image"
    )
    (
      "drawable"
      "GimpDrawable"
      "Mask drawable"
    )
    (
      "drawable-2"
      "GimpDrawable"
      "Image to carve"
    )
    (
      "toggle"
      "gboolean"
      "Carve white areas (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "plug-in-script-fu-eval"
  "Evaluate scheme code"
  "Evaluate the code under the scheme interpreter (primarily for batch mode)"
  "Manish Singh"
  "Manish Singh"
  "1998"
  "GIMP Plug-In"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "script"
      "gchararray"
      "Batch commands in the target language, which will be run by the interpreter"
    )
  )
  (
  )
)
(register-procedure "gimp-channel-get-show-masked"
  "Get the composite method of the specified channel."
  "This procedure returns the specified channel's composite method. If it is TRUE, then the channel is composited with the image so that masked regions are shown. Otherwise, selected regions are shown."
  "Spencer Kimball & Peter Mattis"
  "Spencer Kimball & Peter Mattis"
  "1995-1996"
  "Internal GIMP procedure"
  (
    (
      "channel"
      "GimpChannel"
      "The channel"
    )
  )
  (
    (
      "show-masked"
      "gboolean"
      "The channel composite method (TRUE or FALSE)"
    )
  )
)
(register-procedure "gimp-context-set-gradient-fg-bg-hsv-cw"
  "Sets the built-in FG-BG HSV (cw) gradient as the active gradient."
  "This procedure sets the built-in FG-BG HSV (cw) gradient as the active gradient. The gradient will be used for subsequent gradient operations."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2018"
  "Internal GIMP procedure"
  (
  )
  (
  )
)
(register-procedure "gimp-context-set-gradient-fg-transparent"
  "Sets the built-in FG-Transparent gradient as the active gradient."
  "This procedure sets the built-in FG-Transparent gradient as the active gradient. The gradient will be used for subsequent gradient operations."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2018"
  "Internal GIMP procedure"
  (
  )
  (
  )
)
(register-procedure "file-glob"
  "Returns a list of matching filenames"
  "This can be useful in scripts and other plug-ins (e.g., batch-conversion). See the glob(7) manpage for more info. Note however that this isn't a full-featured glob implementation. It only handles simple patterns like \"/home/foo/bar/*.jpg\"."
  "Sven Neumann"
  "Sven Neumann"
  "2004"
  "GIMP Plug-In"
  (
    (
      "pattern"
      "gchararray"
      "The glob pattern (in UTF-8 encoding)"
    )
    (
      "filename-encoding"
      "gboolean"
      "FALSE to return UTF-8 strings, TRUE to return strings in filename encoding (TRUE or FALSE)"
    )
  )
  (
    (
      "files"
      "GStrv"
      "The list of matching filenames"
    )
  )
)
(register-procedure "plug-in-papertile"
  "Cut image into paper tiles, and slide them"
  "This plug-in cuts an image into paper tiles and slides each paper tile."
  "Compatibility procedure. Please see 'gegl:tile-paper' for credits."
  "Compatibility procedure. Please see 'gegl:tile-paper' for credits."
  "2015"
  "Internal GIMP procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "image"
      "GimpImage"
      "Input image (unused)"
    )
    (
      "drawable"
      "GimpDrawable"
      "Input drawable"
    )
    (
      "tile-size"
      "gint"
      "Tile size (pixels)"
    )
    (
      "move-max"
      "gdouble"
      "Max move rate (%)"
    )
    (
      "fractional-type"
      "gint"
      "Fractional type @{ BACKGROUND (0), IGNORE (1), FORCE (2) @} (0 <= fractional-type <= 2)"
    )
    (
      "wrap-around"
      "gboolean"
      "Wrap around (TRUE or FALSE)"
    )
    (
      "centering"
      "gboolean"
      "Centering (TRUE or FALSE)"
    )
    (
      "background-type"
      "gint"
      "Background type @{ TRANSPARENT (0), INVERTED (1), IMAGE (2), FG (3), BG (4), COLOR (5) @} (0 <= background-type <= 5)"
    )
    (
      "background-color"
      "GimpRGB"
      "Background color (for background-type == 5)"
    )
    (
      "background-alpha"
      "gint"
      "Background alpha (unused)"
    )
  )
  (
  )
)
(register-procedure "gimp-image-set-color-profile"
  "Sets the image's color profile"
  "This procedure sets the image's color profile, or unsets it if NULL is passed as 'color_profile'. This procedure does no color conversion. However, it will change the pixel format of all layers to contain the babl space matching the profile. You must call this procedure before adding layers to the image."
  "Michael Natterer <mitch@@gimp.org>"
  "Michael Natterer"
  "2015"
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "num-bytes"
      "gint"
      "Number of bytes in the color_profile array (num-bytes >= 0)"
    )
    (
      "color-profile"
      "GimpUint8Array"
      "The new serialized color profile"
    )
  )
  (
  )
)
(register-procedure "script-fu-font-map"
  "Create an image filled with previews of fonts matching a fontname filter"
  ""
  "Spencer Kimball"
  "Spencer Kimball"
  "1997"
  "Temporary Procedure"
  (
    (
      "run-mode"
      "GimpRunMode"
      "The run mode @{ RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1), RUN-WITH-LAST-VALS (2) @}"
    )
    (
      "string"
      "gchararray"
      "_Text"
    )
    (
      "toggle"
      "gboolean"
      "Use font _name as text (TRUE or FALSE)"
    )
    (
      "toggle-2"
      "gboolean"
      "_Labels (TRUE or FALSE)"
    )
    (
      "string-2"
      "gchararray"
      "_Filter (regexp)"
    )
    (
      "adjustment"
      "gdouble"
      "Font _size (pixels)"
    )
    (
      "adjustment-2"
      "gdouble"
      "_Border (pixels)"
    )
    (
      "option"
      "gint"
      "_Color scheme"
    )
  )
  (
  )
)
(register-procedure "gimp-vectors-set-visible"
  "This procedure is deprecated! Use 'gimp-item-set-visible' instead."
  "This procedure is deprecated! Use 'gimp-item-set-visible' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "item"
      "GimpItem"
      "The item"
    )
    (
      "visible"
      "gboolean"
      "The new item visibility (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "gimp-palette-swap-colors"
  "This procedure is deprecated! Use 'gimp-context-swap-colors' instead."
  "This procedure is deprecated! Use 'gimp-context-swap-colors' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
  )
  (
  )
)
(register-procedure "gimp-layer-set-name"
  "This procedure is deprecated! Use 'gimp-item-set-name' instead."
  "This procedure is deprecated! Use 'gimp-item-set-name' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "item"
      "GimpItem"
      "The item"
    )
    (
      "name"
      "gchararray"
      "The new item name"
    )
  )
  (
  )
)
(register-procedure "gimp-brushes-set-opacity"
  "This procedure is deprecated! Use 'gimp-context-set-opacity' instead."
  "This procedure is deprecated! Use 'gimp-context-set-opacity' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "opacity"
      "gdouble"
      "The opacity (0 <= opacity <= 100)"
    )
  )
  (
  )
)
(register-procedure "gimp-channel-get-visible"
  "This procedure is deprecated! Use 'gimp-item-get-visible' instead."
  "This procedure is deprecated! Use 'gimp-item-get-visible' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "item"
      "GimpItem"
      "The item"
    )
  )
  (
    (
      "visible"
      "gboolean"
      "The item visibility (TRUE or FALSE)"
    )
  )
)
(register-procedure "gimp-undo-push-group-end"
  "This procedure is deprecated! Use 'gimp-image-undo-group-end' instead."
  "This procedure is deprecated! Use 'gimp-image-undo-group-end' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The ID of the image in which to close an undo group"
    )
  )
  (
  )
)
(register-procedure "gimp-channel-delete"
  "This procedure is deprecated! Use 'gimp-item-delete' instead."
  "This procedure is deprecated! Use 'gimp-item-delete' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "item"
      "GimpItem"
      "The item to delete"
    )
  )
  (
  )
)
(register-procedure "gimp-drawable-parasite-find"
  "This procedure is deprecated! Use 'gimp-item-get-parasite' instead."
  "This procedure is deprecated! Use 'gimp-item-get-parasite' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "item"
      "GimpItem"
      "The item"
    )
    (
      "name"
      "gchararray"
      "The name of the parasite to find"
    )
  )
  (
    (
      "parasite"
      "GimpParasite"
      "The found parasite"
    )
  )
)
(register-procedure "gimp-drawable-get-tattoo"
  "This procedure is deprecated! Use 'gimp-item-get-tattoo' instead."
  "This procedure is deprecated! Use 'gimp-item-get-tattoo' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "item"
      "GimpItem"
      "The item"
    )
  )
  (
    (
      "tattoo"
      "guint"
      "The item tattoo"
    )
  )
)
(register-procedure "gimp-drawable-get-visible"
  "This procedure is deprecated! Use 'gimp-item-get-visible' instead."
  "This procedure is deprecated! Use 'gimp-item-get-visible' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "item"
      "GimpItem"
      "The item"
    )
  )
  (
    (
      "visible"
      "gboolean"
      "The item visibility (TRUE or FALSE)"
    )
  )
)
(register-procedure "gimp-parasite-attach"
  "This procedure is deprecated! Use 'gimp-attach-parasite' instead."
  "This procedure is deprecated! Use 'gimp-attach-parasite' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "parasite"
      "GimpParasite"
      "The parasite to attach"
    )
  )
  (
  )
)
(register-procedure "gimp-layer-set-tattoo"
  "This procedure is deprecated! Use 'gimp-item-set-tattoo' instead."
  "This procedure is deprecated! Use 'gimp-item-set-tattoo' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "item"
      "GimpItem"
      "The item"
    )
    (
      "tattoo"
      "guint"
      "The new item tattoo"
    )
  )
  (
  )
)
(register-procedure "gimp-drawable-set-name"
  "This procedure is deprecated! Use 'gimp-item-set-name' instead."
  "This procedure is deprecated! Use 'gimp-item-set-name' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "item"
      "GimpItem"
      "The item"
    )
    (
      "name"
      "gchararray"
      "The new item name"
    )
  )
  (
  )
)
(register-procedure "gimp-drawable-parasite-attach"
  "This procedure is deprecated! Use 'gimp-item-attach-parasite' instead."
  "This procedure is deprecated! Use 'gimp-item-attach-parasite' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "item"
      "GimpItem"
      "The item"
    )
    (
      "parasite"
      "GimpParasite"
      "The parasite to attach to the item"
    )
  )
  (
  )
)
(register-procedure "gimp-gradients-get-gradient"
  "This procedure is deprecated! Use 'gimp-context-get-gradient' instead."
  "This procedure is deprecated! Use 'gimp-context-get-gradient' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
  )
  (
    (
      "name"
      "gchararray"
      "The name of the active gradient"
    )
  )
)
(register-procedure "gimp-layer-get-visible"
  "This procedure is deprecated! Use 'gimp-item-get-visible' instead."
  "This procedure is deprecated! Use 'gimp-item-get-visible' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "item"
      "GimpItem"
      "The item"
    )
  )
  (
    (
      "visible"
      "gboolean"
      "The item visibility (TRUE or FALSE)"
    )
  )
)
(register-procedure "gimp-palette-set-foreground"
  "This procedure is deprecated! Use 'gimp-context-set-foreground' instead."
  "This procedure is deprecated! Use 'gimp-context-set-foreground' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "foreground"
      "GimpRGB"
      "The foreground color"
    )
  )
  (
  )
)
(register-procedure "gimp-vectors-set-name"
  "This procedure is deprecated! Use 'gimp-item-set-name' instead."
  "This procedure is deprecated! Use 'gimp-item-set-name' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "item"
      "GimpItem"
      "The item"
    )
    (
      "name"
      "gchararray"
      "The new item name"
    )
  )
  (
  )
)
(register-procedure "gimp-image-raise-channel"
  "This procedure is deprecated! Use 'gimp-image-raise-item' instead."
  "This procedure is deprecated! Use 'gimp-image-raise-item' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "item"
      "GimpItem"
      "The item to raise"
    )
  )
  (
  )
)
(register-procedure "gimp-vectors-parasite-find"
  "This procedure is deprecated! Use 'gimp-item-get-parasite' instead."
  "This procedure is deprecated! Use 'gimp-item-get-parasite' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "item"
      "GimpItem"
      "The item"
    )
    (
      "name"
      "gchararray"
      "The name of the parasite to find"
    )
  )
  (
    (
      "parasite"
      "GimpParasite"
      "The found parasite"
    )
  )
)
(register-procedure "gimp-palette-set-default-colors"
  "This procedure is deprecated! Use 'gimp-context-set-default-colors' instead."
  "This procedure is deprecated! Use 'gimp-context-set-default-colors' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
  )
  (
  )
)
(register-procedure "gimp-drawable-set-tattoo"
  "This procedure is deprecated! Use 'gimp-item-set-tattoo' instead."
  "This procedure is deprecated! Use 'gimp-item-set-tattoo' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "item"
      "GimpItem"
      "The item"
    )
    (
      "tattoo"
      "guint"
      "The new item tattoo"
    )
  )
  (
  )
)
(register-procedure "gimp-vectors-parasite-attach"
  "This procedure is deprecated! Use 'gimp-item-attach-parasite' instead."
  "This procedure is deprecated! Use 'gimp-item-attach-parasite' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "item"
      "GimpItem"
      "The item"
    )
    (
      "parasite"
      "GimpParasite"
      "The parasite to attach to the item"
    )
  )
  (
  )
)
(register-procedure "gimp-image-parasite-list"
  "This procedure is deprecated! Use 'gimp-image-get-parasite-list' instead."
  "This procedure is deprecated! Use 'gimp-image-get-parasite-list' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
  )
  (
    (
      "parasites"
      "GStrv"
      "The names of currently attached parasites"
    )
  )
)
(register-procedure "gimp-layer-get-name"
  "This procedure is deprecated! Use 'gimp-item-get-name' instead."
  "This procedure is deprecated! Use 'gimp-item-get-name' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "item"
      "GimpItem"
      "The item"
    )
  )
  (
    (
      "name"
      "gchararray"
      "The item name"
    )
  )
)
(register-procedure "gimp-drawable-get-image"
  "This procedure is deprecated! Use 'gimp-item-get-image' instead."
  "This procedure is deprecated! Use 'gimp-item-get-image' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "item"
      "GimpItem"
      "The item"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "The item's image"
    )
  )
)
(register-procedure "gimp-image-get-channel-position"
  "This procedure is deprecated! Use 'gimp-image-get-item-position' instead."
  "This procedure is deprecated! Use 'gimp-image-get-item-position' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "item"
      "GimpItem"
      "The item"
    )
  )
  (
    (
      "position"
      "gint"
      "The position of the item in its level in the item tree"
    )
  )
)
(register-procedure "gimp-palette-set-background"
  "This procedure is deprecated! Use 'gimp-context-set-background' instead."
  "This procedure is deprecated! Use 'gimp-context-set-background' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "background"
      "GimpRGB"
      "The background color"
    )
  )
  (
  )
)
(register-procedure "gimp-parasite-find"
  "This procedure is deprecated! Use 'gimp-get-parasite' instead."
  "This procedure is deprecated! Use 'gimp-get-parasite' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The name of the parasite to find"
    )
  )
  (
    (
      "parasite"
      "GimpParasite"
      "The found parasite"
    )
  )
)
(register-procedure "gimp-channel-get-tattoo"
  "This procedure is deprecated! Use 'gimp-item-get-tattoo' instead."
  "This procedure is deprecated! Use 'gimp-item-get-tattoo' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "item"
      "GimpItem"
      "The item"
    )
  )
  (
    (
      "tattoo"
      "guint"
      "The item tattoo"
    )
  )
)
(register-procedure "gimp-vectors-get-name"
  "This procedure is deprecated! Use 'gimp-item-get-name' instead."
  "This procedure is deprecated! Use 'gimp-item-get-name' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "item"
      "GimpItem"
      "The item"
    )
  )
  (
    (
      "name"
      "gchararray"
      "The item name"
    )
  )
)
(register-procedure "gimp-drawable-get-name"
  "This procedure is deprecated! Use 'gimp-item-get-name' instead."
  "This procedure is deprecated! Use 'gimp-item-get-name' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "item"
      "GimpItem"
      "The item"
    )
  )
  (
    (
      "name"
      "gchararray"
      "The item name"
    )
  )
)
(register-procedure "gimp-image-parasite-detach"
  "This procedure is deprecated! Use 'gimp-image-detach-parasite' instead."
  "This procedure is deprecated! Use 'gimp-image-detach-parasite' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "name"
      "gchararray"
      "The name of the parasite to detach from an image."
    )
  )
  (
  )
)
(register-procedure "gimp-vectors-get-tattoo"
  "This procedure is deprecated! Use 'gimp-item-get-tattoo' instead."
  "This procedure is deprecated! Use 'gimp-item-get-tattoo' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "item"
      "GimpItem"
      "The item"
    )
  )
  (
    (
      "tattoo"
      "guint"
      "The item tattoo"
    )
  )
)
(register-procedure "gimp-brushes-set-brush"
  "This procedure is deprecated! Use 'gimp-context-set-brush' instead."
  "This procedure is deprecated! Use 'gimp-context-set-brush' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The name of the brush"
    )
  )
  (
  )
)
(register-procedure "gimp-brushes-set-paint-mode"
  "This procedure is deprecated! Use 'gimp-context-set-paint-mode' instead."
  "This procedure is deprecated! Use 'gimp-context-set-paint-mode' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "paint-mode"
      "GimpLayerMode"
      "The paint mode @{ LAYER-MODE-NORMAL-LEGACY (0), LAYER-MODE-DISSOLVE (1), LAYER-MODE-BEHIND-LEGACY (2), LAYER-MODE-MULTIPLY-LEGACY (3), LAYER-MODE-SCREEN-LEGACY (4), LAYER-MODE-OVERLAY-LEGACY (5), LAYER-MODE-DIFFERENCE-LEGACY (6), LAYER-MODE-ADDITION-LEGACY (7), LAYER-MODE-SUBTRACT-LEGACY (8), LAYER-MODE-DARKEN-ONLY-LEGACY (9), LAYER-MODE-LIGHTEN-ONLY-LEGACY (10), LAYER-MODE-HSV-HUE-LEGACY (11), LAYER-MODE-HSV-SATURATION-LEGACY (12), LAYER-MODE-HSL-COLOR-LEGACY (13), LAYER-MODE-HSV-VALUE-LEGACY (14), LAYER-MODE-DIVIDE-LEGACY (15), LAYER-MODE-DODGE-LEGACY (16), LAYER-MODE-BURN-LEGACY (17), LAYER-MODE-HARDLIGHT-LEGACY (18), LAYER-MODE-SOFTLIGHT-LEGACY (19), LAYER-MODE-GRAIN-EXTRACT-LEGACY (20), LAYER-MODE-GRAIN-MERGE-LEGACY (21), LAYER-MODE-COLOR-ERASE-LEGACY (22), LAYER-MODE-OVERLAY (23), LAYER-MODE-LCH-HUE (24), LAYER-MODE-LCH-CHROMA (25), LAYER-MODE-LCH-COLOR (26), LAYER-MODE-LCH-LIGHTNESS (27), LAYER-MODE-NORMAL (28), LAYER-MODE-BEHIND (29), LAYER-MODE-MULTIPLY (30), LAYER-MODE-SCREEN (31), LAYER-MODE-DIFFERENCE (32), LAYER-MODE-ADDITION (33), LAYER-MODE-SUBTRACT (34), LAYER-MODE-DARKEN-ONLY (35), LAYER-MODE-LIGHTEN-ONLY (36), LAYER-MODE-HSV-HUE (37), LAYER-MODE-HSV-SATURATION (38), LAYER-MODE-HSL-COLOR (39), LAYER-MODE-HSV-VALUE (40), LAYER-MODE-DIVIDE (41), LAYER-MODE-DODGE (42), LAYER-MODE-BURN (43), LAYER-MODE-HARDLIGHT (44), LAYER-MODE-SOFTLIGHT (45), LAYER-MODE-GRAIN-EXTRACT (46), LAYER-MODE-GRAIN-MERGE (47), LAYER-MODE-VIVID-LIGHT (48), LAYER-MODE-PIN-LIGHT (49), LAYER-MODE-LINEAR-LIGHT (50), LAYER-MODE-HARD-MIX (51), LAYER-MODE-EXCLUSION (52), LAYER-MODE-LINEAR-BURN (53), LAYER-MODE-LUMA-DARKEN-ONLY (54), LAYER-MODE-LUMA-LIGHTEN-ONLY (55), LAYER-MODE-LUMINANCE (56), LAYER-MODE-COLOR-ERASE (57), LAYER-MODE-ERASE (58), LAYER-MODE-MERGE (59), LAYER-MODE-SPLIT (60), LAYER-MODE-PASS-THROUGH (61), LAYER-MODE-REPLACE (62), LAYER-MODE-ANTI-ERASE (63) @}"
    )
  )
  (
  )
)
(register-procedure "gimp-image-active-drawable"
  "This procedure is deprecated! Use 'gimp-image-get-active-drawable' instead."
  "This procedure is deprecated! Use 'gimp-image-get-active-drawable' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
  )
  (
    (
      "drawable"
      "GimpDrawable"
      "The active drawable"
    )
  )
)
(register-procedure "gimp-vectors-get-image"
  "This procedure is deprecated! Use 'gimp-item-get-image' instead."
  "This procedure is deprecated! Use 'gimp-item-get-image' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "item"
      "GimpItem"
      "The item"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "The item's image"
    )
  )
)
(register-procedure "gimp-channel-ops-duplicate"
  "This procedure is deprecated! Use 'gimp-image-duplicate' instead."
  "This procedure is deprecated! Use 'gimp-image-duplicate' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
  )
  (
    (
      "new-image"
      "GimpImage"
      "The new, duplicated image"
    )
  )
)
(register-procedure "gimp-palette-refresh"
  "This procedure is deprecated! Use 'gimp-palettes-refresh' instead."
  "This procedure is deprecated! Use 'gimp-palettes-refresh' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
  )
  (
  )
)
(register-procedure "gimp-edit-named-paste-as-new"
  "This procedure is deprecated! Use 'gimp-edit-named-paste-as-new-image' instead."
  "This procedure is deprecated! Use 'gimp-edit-named-paste-as-new-image' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "buffer-name"
      "gchararray"
      "The name of the buffer to paste"
    )
  )
  (
    (
      "image"
      "GimpImage"
      "The new image"
    )
  )
)
(register-procedure "gimp-edit-paste-as-new"
  "This procedure is deprecated! Use 'gimp-edit-paste-as-new-image' instead."
  "This procedure is deprecated! Use 'gimp-edit-paste-as-new-image' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
  )
  (
    (
      "image"
      "GimpImage"
      "The new image"
    )
  )
)
(register-procedure "gimp-palette-get-foreground"
  "This procedure is deprecated! Use 'gimp-context-get-foreground' instead."
  "This procedure is deprecated! Use 'gimp-context-get-foreground' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
  )
  (
    (
      "foreground"
      "GimpRGB"
      "The foreground color"
    )
  )
)
(register-procedure "gimp-layer-delete"
  "This procedure is deprecated! Use 'gimp-item-delete' instead."
  "This procedure is deprecated! Use 'gimp-item-delete' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "item"
      "GimpItem"
      "The item to delete"
    )
  )
  (
  )
)
(register-procedure "gimp-channel-set-name"
  "This procedure is deprecated! Use 'gimp-item-set-name' instead."
  "This procedure is deprecated! Use 'gimp-item-set-name' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "item"
      "GimpItem"
      "The item"
    )
    (
      "name"
      "gchararray"
      "The new item name"
    )
  )
  (
  )
)
(register-procedure "gimp-gradients-get-active"
  "This procedure is deprecated! Use 'gimp-context-get-gradient' instead."
  "This procedure is deprecated! Use 'gimp-context-get-gradient' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
  )
  (
    (
      "name"
      "gchararray"
      "The name of the active gradient"
    )
  )
)
(register-procedure "gimp-palettes-set-palette"
  "This procedure is deprecated! Use 'gimp-context-set-palette' instead."
  "This procedure is deprecated! Use 'gimp-context-set-palette' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The name of the palette"
    )
  )
  (
  )
)
(register-procedure "gimp-color-picker"
  "This procedure is deprecated! Use 'gimp-image-pick-color' instead."
  "This procedure is deprecated! Use 'gimp-image-pick-color' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "num-drawables"
      "gint"
      "The number of drawables (num-drawables >= 1)"
    )
    (
      "drawables"
      "GimpObjectArray"
      "The drawables to pick from"
    )
    (
      "x"
      "gdouble"
      "x coordinate of upper-left corner of rectangle"
    )
    (
      "y"
      "gdouble"
      "y coordinate of upper-left corner of rectangle"
    )
    (
      "sample-merged"
      "gboolean"
      "Use the composite image, not the drawables (TRUE or FALSE)"
    )
    (
      "sample-average"
      "gboolean"
      "Average the color of all the pixels in a specified radius (TRUE or FALSE)"
    )
    (
      "average-radius"
      "gdouble"
      "The radius of pixels to average (average-radius >= 0)"
    )
  )
  (
    (
      "color"
      "GimpRGB"
      "The return color"
    )
  )
)
(register-procedure "gimp-vectors-get-visible"
  "This procedure is deprecated! Use 'gimp-item-get-visible' instead."
  "This procedure is deprecated! Use 'gimp-item-get-visible' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "item"
      "GimpItem"
      "The item"
    )
  )
  (
    (
      "visible"
      "gboolean"
      "The item visibility (TRUE or FALSE)"
    )
  )
)
(register-procedure "gimp-image-lower-channel"
  "This procedure is deprecated! Use 'gimp-image-lower-item' instead."
  "This procedure is deprecated! Use 'gimp-image-lower-item' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "item"
      "GimpItem"
      "The item to lower"
    )
  )
  (
  )
)
(register-procedure "gimp-gradients-set-gradient"
  "This procedure is deprecated! Use 'gimp-context-set-gradient' instead."
  "This procedure is deprecated! Use 'gimp-context-set-gradient' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The name of the gradient"
    )
  )
  (
  )
)
(register-procedure "gimp-brushes-get-opacity"
  "This procedure is deprecated! Use 'gimp-context-get-opacity' instead."
  "This procedure is deprecated! Use 'gimp-context-get-opacity' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
  )
  (
    (
      "opacity"
      "gdouble"
      "The opacity (0 <= opacity <= 100)"
    )
  )
)
(register-procedure "gimp-drawable-set-visible"
  "This procedure is deprecated! Use 'gimp-item-set-visible' instead."
  "This procedure is deprecated! Use 'gimp-item-set-visible' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "item"
      "GimpItem"
      "The item"
    )
    (
      "visible"
      "gboolean"
      "The new item visibility (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "gimp-image-raise-layer-to-top"
  "This procedure is deprecated! Use 'gimp-image-raise-item-to-top' instead."
  "This procedure is deprecated! Use 'gimp-image-raise-item-to-top' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "item"
      "GimpItem"
      "The item to raise to top"
    )
  )
  (
  )
)
(register-procedure "gimp-image-lower-layer"
  "This procedure is deprecated! Use 'gimp-image-lower-item' instead."
  "This procedure is deprecated! Use 'gimp-image-lower-item' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "item"
      "GimpItem"
      "The item to lower"
    )
  )
  (
  )
)
(register-procedure "gimp-selection-clear"
  "This procedure is deprecated! Use 'gimp-selection-none' instead."
  "This procedure is deprecated! Use 'gimp-selection-none' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
  )
  (
  )
)
(register-procedure "gimp-image-set-cmap"
  "This procedure is deprecated! Use 'gimp-image-set-colormap' instead."
  "This procedure is deprecated! Use 'gimp-image-set-colormap' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "num-bytes"
      "gint"
      "Number of bytes in the colormap array (0 <= num-bytes <= 768)"
    )
    (
      "colormap"
      "GimpUint8Array"
      "The new colormap values"
    )
  )
  (
  )
)
(register-procedure "gimp-palette-get-background"
  "This procedure is deprecated! Use 'gimp-context-get-background' instead."
  "This procedure is deprecated! Use 'gimp-context-get-background' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
  )
  (
    (
      "background"
      "GimpRGB"
      "The background color"
    )
  )
)
(register-procedure "gimp-layer-set-preserve-trans"
  "This procedure is deprecated! Use 'gimp-layer-set-lock-alpha' instead."
  "This procedure is deprecated! Use 'gimp-layer-set-lock-alpha' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "layer"
      "GimpLayer"
      "The layer"
    )
    (
      "lock-alpha"
      "gboolean"
      "The new layer's lock alpha channel setting (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "gimp-image-raise-layer"
  "This procedure is deprecated! Use 'gimp-image-raise-item' instead."
  "This procedure is deprecated! Use 'gimp-image-raise-item' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "item"
      "GimpItem"
      "The item to raise"
    )
  )
  (
  )
)
(register-procedure "gimp-patterns-set-pattern"
  "This procedure is deprecated! Use 'gimp-context-set-pattern' instead."
  "This procedure is deprecated! Use 'gimp-context-set-pattern' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The name of the pattern"
    )
  )
  (
  )
)
(register-procedure "gimp-channel-set-tattoo"
  "This procedure is deprecated! Use 'gimp-item-set-tattoo' instead."
  "This procedure is deprecated! Use 'gimp-item-set-tattoo' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "item"
      "GimpItem"
      "The item"
    )
    (
      "tattoo"
      "guint"
      "The new item tattoo"
    )
  )
  (
  )
)
(register-procedure "gimp-channel-ops-offset"
  "This procedure is deprecated! Use 'gimp-drawable-offset' instead."
  "This procedure is deprecated! Use 'gimp-drawable-offset' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "drawable"
      "GimpDrawable"
      "The drawable to offset"
    )
    (
      "wrap-around"
      "gboolean"
      "wrap image around or fill vacated regions (TRUE or FALSE)"
    )
    (
      "fill-type"
      "GimpOffsetType"
      "fill vacated regions of drawable with background or transparent @{ OFFSET-BACKGROUND (0), OFFSET-TRANSPARENT (1), OFFSET-WRAP-AROUND (2) @}"
    )
    (
      "offset-x"
      "gint"
      "offset by this amount in X direction"
    )
    (
      "offset-y"
      "gint"
      "offset by this amount in Y direction"
    )
  )
  (
  )
)
(register-procedure "gimp-layer-set-visible"
  "This procedure is deprecated! Use 'gimp-item-set-visible' instead."
  "This procedure is deprecated! Use 'gimp-item-set-visible' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "item"
      "GimpItem"
      "The item"
    )
    (
      "visible"
      "gboolean"
      "The new item visibility (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "gimp-patterns-list"
  "This procedure is deprecated! Use 'gimp-patterns-get-list' instead."
  "This procedure is deprecated! Use 'gimp-patterns-get-list' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "filter"
      "gchararray"
      "An optional regular expression used to filter the list"
    )
  )
  (
    (
      "pattern-list"
      "GStrv"
      "The list of pattern names"
    )
  )
)
(register-procedure "gimp-channel-set-visible"
  "This procedure is deprecated! Use 'gimp-item-set-visible' instead."
  "This procedure is deprecated! Use 'gimp-item-set-visible' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "item"
      "GimpItem"
      "The item"
    )
    (
      "visible"
      "gboolean"
      "The new item visibility (TRUE or FALSE)"
    )
  )
  (
  )
)
(register-procedure "gimp-brushes-get-paint-mode"
  "This procedure is deprecated! Use 'gimp-context-get-paint-mode' instead."
  "This procedure is deprecated! Use 'gimp-context-get-paint-mode' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
  )
  (
    (
      "paint-mode"
      "GimpLayerMode"
      "The paint mode @{ LAYER-MODE-NORMAL-LEGACY (0), LAYER-MODE-DISSOLVE (1), LAYER-MODE-BEHIND-LEGACY (2), LAYER-MODE-MULTIPLY-LEGACY (3), LAYER-MODE-SCREEN-LEGACY (4), LAYER-MODE-OVERLAY-LEGACY (5), LAYER-MODE-DIFFERENCE-LEGACY (6), LAYER-MODE-ADDITION-LEGACY (7), LAYER-MODE-SUBTRACT-LEGACY (8), LAYER-MODE-DARKEN-ONLY-LEGACY (9), LAYER-MODE-LIGHTEN-ONLY-LEGACY (10), LAYER-MODE-HSV-HUE-LEGACY (11), LAYER-MODE-HSV-SATURATION-LEGACY (12), LAYER-MODE-HSL-COLOR-LEGACY (13), LAYER-MODE-HSV-VALUE-LEGACY (14), LAYER-MODE-DIVIDE-LEGACY (15), LAYER-MODE-DODGE-LEGACY (16), LAYER-MODE-BURN-LEGACY (17), LAYER-MODE-HARDLIGHT-LEGACY (18), LAYER-MODE-SOFTLIGHT-LEGACY (19), LAYER-MODE-GRAIN-EXTRACT-LEGACY (20), LAYER-MODE-GRAIN-MERGE-LEGACY (21), LAYER-MODE-COLOR-ERASE-LEGACY (22), LAYER-MODE-OVERLAY (23), LAYER-MODE-LCH-HUE (24), LAYER-MODE-LCH-CHROMA (25), LAYER-MODE-LCH-COLOR (26), LAYER-MODE-LCH-LIGHTNESS (27), LAYER-MODE-NORMAL (28), LAYER-MODE-BEHIND (29), LAYER-MODE-MULTIPLY (30), LAYER-MODE-SCREEN (31), LAYER-MODE-DIFFERENCE (32), LAYER-MODE-ADDITION (33), LAYER-MODE-SUBTRACT (34), LAYER-MODE-DARKEN-ONLY (35), LAYER-MODE-LIGHTEN-ONLY (36), LAYER-MODE-HSV-HUE (37), LAYER-MODE-HSV-SATURATION (38), LAYER-MODE-HSL-COLOR (39), LAYER-MODE-HSV-VALUE (40), LAYER-MODE-DIVIDE (41), LAYER-MODE-DODGE (42), LAYER-MODE-BURN (43), LAYER-MODE-HARDLIGHT (44), LAYER-MODE-SOFTLIGHT (45), LAYER-MODE-GRAIN-EXTRACT (46), LAYER-MODE-GRAIN-MERGE (47), LAYER-MODE-VIVID-LIGHT (48), LAYER-MODE-PIN-LIGHT (49), LAYER-MODE-LINEAR-LIGHT (50), LAYER-MODE-HARD-MIX (51), LAYER-MODE-EXCLUSION (52), LAYER-MODE-LINEAR-BURN (53), LAYER-MODE-LUMA-DARKEN-ONLY (54), LAYER-MODE-LUMA-LIGHTEN-ONLY (55), LAYER-MODE-LUMINANCE (56), LAYER-MODE-COLOR-ERASE (57), LAYER-MODE-ERASE (58), LAYER-MODE-MERGE (59), LAYER-MODE-SPLIT (60), LAYER-MODE-PASS-THROUGH (61), LAYER-MODE-REPLACE (62), LAYER-MODE-ANTI-ERASE (63) @}"
    )
  )
)
(register-procedure "gimp-layer-get-preserve-trans"
  "This procedure is deprecated! Use 'gimp-layer-get-lock-alpha' instead."
  "This procedure is deprecated! Use 'gimp-layer-get-lock-alpha' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "layer"
      "GimpLayer"
      "The layer"
    )
  )
  (
    (
      "lock-alpha"
      "gboolean"
      "The layer's lock alpha channel setting (TRUE or FALSE)"
    )
  )
)
(register-procedure "gimp-image-get-layer-position"
  "This procedure is deprecated! Use 'gimp-image-get-item-position' instead."
  "This procedure is deprecated! Use 'gimp-image-get-item-position' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "item"
      "GimpItem"
      "The item"
    )
  )
  (
    (
      "position"
      "gint"
      "The position of the item in its level in the item tree"
    )
  )
)
(register-procedure "gimp-convert-rgb"
  "This procedure is deprecated! Use 'gimp-image-convert-rgb' instead."
  "This procedure is deprecated! Use 'gimp-image-convert-rgb' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
  )
  (
  )
)
(register-procedure "gimp-image-lower-layer-to-bottom"
  "This procedure is deprecated! Use 'gimp-image-lower-item-to-bottom' instead."
  "This procedure is deprecated! Use 'gimp-image-lower-item-to-bottom' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "item"
      "GimpItem"
      "The item to lower to bottom"
    )
  )
  (
  )
)
(register-procedure "gimp-image-raise-vectors"
  "This procedure is deprecated! Use 'gimp-image-raise-item' instead."
  "This procedure is deprecated! Use 'gimp-image-raise-item' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "item"
      "GimpItem"
      "The item to raise"
    )
  )
  (
  )
)
(register-procedure "gimp-channel-get-name"
  "This procedure is deprecated! Use 'gimp-item-get-name' instead."
  "This procedure is deprecated! Use 'gimp-item-get-name' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "item"
      "GimpItem"
      "The item"
    )
  )
  (
    (
      "name"
      "gchararray"
      "The item name"
    )
  )
)
(register-procedure "gimp-drawable-parasite-list"
  "This procedure is deprecated! Use 'gimp-item-get-parasite-list' instead."
  "This procedure is deprecated! Use 'gimp-item-get-parasite-list' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "item"
      "GimpItem"
      "The item"
    )
  )
  (
    (
      "parasites"
      "GStrv"
      "The names of currently attached parasites"
    )
  )
)
(register-procedure "gimp-image-parasite-attach"
  "This procedure is deprecated! Use 'gimp-image-attach-parasite' instead."
  "This procedure is deprecated! Use 'gimp-image-attach-parasite' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "parasite"
      "GimpParasite"
      "The parasite to attach to an image"
    )
  )
  (
  )
)
(register-procedure "gimp-image-raise-vectors-to-top"
  "This procedure is deprecated! Use 'gimp-image-raise-item-to-top' instead."
  "This procedure is deprecated! Use 'gimp-image-raise-item-to-top' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "item"
      "GimpItem"
      "The item to raise to top"
    )
  )
  (
  )
)
(register-procedure "gimp-drawable-parasite-detach"
  "This procedure is deprecated! Use 'gimp-item-detach-parasite' instead."
  "This procedure is deprecated! Use 'gimp-item-detach-parasite' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "item"
      "GimpItem"
      "The item"
    )
    (
      "name"
      "gchararray"
      "The name of the parasite to detach from the item."
    )
  )
  (
  )
)
(register-procedure "gimp-image-parasite-find"
  "This procedure is deprecated! Use 'gimp-image-get-parasite' instead."
  "This procedure is deprecated! Use 'gimp-image-get-parasite' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "name"
      "gchararray"
      "The name of the parasite to find"
    )
  )
  (
    (
      "parasite"
      "GimpParasite"
      "The found parasite"
    )
  )
)
(register-procedure "gimp-gradients-set-active"
  "This procedure is deprecated! Use 'gimp-context-set-gradient' instead."
  "This procedure is deprecated! Use 'gimp-context-set-gradient' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The name of the gradient"
    )
  )
  (
  )
)
(register-procedure "gimp-vectors-parasite-list"
  "This procedure is deprecated! Use 'gimp-item-get-parasite-list' instead."
  "This procedure is deprecated! Use 'gimp-item-get-parasite-list' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "item"
      "GimpItem"
      "The item"
    )
  )
  (
    (
      "parasites"
      "GStrv"
      "The names of currently attached parasites"
    )
  )
)
(register-procedure "gimp-layer-get-tattoo"
  "This procedure is deprecated! Use 'gimp-item-get-tattoo' instead."
  "This procedure is deprecated! Use 'gimp-item-get-tattoo' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "item"
      "GimpItem"
      "The item"
    )
  )
  (
    (
      "tattoo"
      "guint"
      "The item tattoo"
    )
  )
)
(register-procedure "gimp-undo-push-group-start"
  "This procedure is deprecated! Use 'gimp-image-undo-group-start' instead."
  "This procedure is deprecated! Use 'gimp-image-undo-group-start' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The ID of the image in which to open an undo group"
    )
  )
  (
  )
)
(register-procedure "gimp-vectors-set-tattoo"
  "This procedure is deprecated! Use 'gimp-item-set-tattoo' instead."
  "This procedure is deprecated! Use 'gimp-item-set-tattoo' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "item"
      "GimpItem"
      "The item"
    )
    (
      "tattoo"
      "guint"
      "The new item tattoo"
    )
  )
  (
  )
)
(register-procedure "gimp-brushes-list"
  "This procedure is deprecated! Use 'gimp-brushes-get-list' instead."
  "This procedure is deprecated! Use 'gimp-brushes-get-list' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "filter"
      "gchararray"
      "An optional regular expression used to filter the list"
    )
  )
  (
    (
      "brush-list"
      "GStrv"
      "The list of brush names"
    )
  )
)
(register-procedure "gimp-image-get-cmap"
  "This procedure is deprecated! Use 'gimp-image-get-colormap' instead."
  "This procedure is deprecated! Use 'gimp-image-get-colormap' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
  )
  (
    (
      "num-bytes"
      "gint"
      "Number of bytes in the colormap array (num-bytes >= 0)"
    )
    (
      "colormap"
      "GimpUint8Array"
      "The image's colormap."
    )
  )
)
(register-procedure "gimp-convert-grayscale"
  "This procedure is deprecated! Use 'gimp-image-convert-grayscale' instead."
  "This procedure is deprecated! Use 'gimp-image-convert-grayscale' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
  )
  (
  )
)
(register-procedure "gimp-drawable-delete"
  "This procedure is deprecated! Use 'gimp-item-delete' instead."
  "This procedure is deprecated! Use 'gimp-item-delete' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "item"
      "GimpItem"
      "The item to delete"
    )
  )
  (
  )
)
(register-procedure "gimp-vectors-parasite-detach"
  "This procedure is deprecated! Use 'gimp-item-detach-parasite' instead."
  "This procedure is deprecated! Use 'gimp-item-detach-parasite' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "item"
      "GimpItem"
      "The item"
    )
    (
      "name"
      "gchararray"
      "The name of the parasite to detach from the item."
    )
  )
  (
  )
)
(register-procedure "gimp-image-floating-selection"
  "This procedure is deprecated! Use 'gimp-image-get-floating-sel' instead."
  "This procedure is deprecated! Use 'gimp-image-get-floating-sel' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
  )
  (
    (
      "floating-sel"
      "GimpLayer"
      "The image's floating selection"
    )
  )
)
(register-procedure "gimp-layer-mask"
  "This procedure is deprecated! Use 'gimp-layer-get-mask' instead."
  "This procedure is deprecated! Use 'gimp-layer-get-mask' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "layer"
      "GimpLayer"
      "The layer"
    )
  )
  (
    (
      "mask"
      "GimpLayerMask"
      "The layer mask"
    )
  )
)
(register-procedure "gimp-image-get-vectors-position"
  "This procedure is deprecated! Use 'gimp-image-get-item-position' instead."
  "This procedure is deprecated! Use 'gimp-image-get-item-position' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "item"
      "GimpItem"
      "The item"
    )
  )
  (
    (
      "position"
      "gint"
      "The position of the item in its level in the item tree"
    )
  )
)
(register-procedure "gimp-image-lower-vectors"
  "This procedure is deprecated! Use 'gimp-image-lower-item' instead."
  "This procedure is deprecated! Use 'gimp-image-lower-item' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "item"
      "GimpItem"
      "The item to lower"
    )
  )
  (
  )
)
(register-procedure "gimp-parasite-list"
  "This procedure is deprecated! Use 'gimp-get-parasite-list' instead."
  "This procedure is deprecated! Use 'gimp-get-parasite-list' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
  )
  (
    (
      "parasites"
      "GStrv"
      "The names of currently attached parasites"
    )
  )
)
(register-procedure "gimp-crop"
  "This procedure is deprecated! Use 'gimp-image-crop' instead."
  "This procedure is deprecated! Use 'gimp-image-crop' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "new-width"
      "gint"
      "New image width: (0 < new_width <= width) (1 <= new-width <= 524288)"
    )
    (
      "new-height"
      "gint"
      "New image height: (0 < new_height <= height) (1 <= new-height <= 524288)"
    )
    (
      "offx"
      "gint"
      "X offset: (0 <= offx <= (width - new_width)) (offx >= 0)"
    )
    (
      "offy"
      "gint"
      "Y offset: (0 <= offy <= (height - new_height)) (offy >= 0)"
    )
  )
  (
  )
)
(register-procedure "gimp-image-lower-vectors-to-bottom"
  "This procedure is deprecated! Use 'gimp-image-lower-item-to-bottom' instead."
  "This procedure is deprecated! Use 'gimp-image-lower-item-to-bottom' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "item"
      "GimpItem"
      "The item to lower to bottom"
    )
  )
  (
  )
)
(register-procedure "gimp-parasite-detach"
  "This procedure is deprecated! Use 'gimp-detach-parasite' instead."
  "This procedure is deprecated! Use 'gimp-detach-parasite' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "name"
      "gchararray"
      "The name of the parasite to detach."
    )
  )
  (
  )
)
(register-procedure "gimp-convert-indexed"
  "This procedure is deprecated! Use 'gimp-image-convert-indexed' instead."
  "This procedure is deprecated! Use 'gimp-image-convert-indexed' instead."
  ""
  ""
  ""
  "Internal GIMP procedure"
  (
    (
      "image"
      "GimpImage"
      "The image"
    )
    (
      "dither-type"
      "GimpConvertDitherType"
      "The dither type to use @{ CONVERT-DITHER-NONE (0), CONVERT-DITHER-FS (1), CONVERT-DITHER-FS-LOWBLEED (2), CONVERT-DITHER-FIXED (3) @}"
    )
    (
      "palette-type"
      "GimpConvertPaletteType"
      "The type of palette to use @{ CONVERT-PALETTE-GENERATE (0), CONVERT-PALETTE-WEB (1), CONVERT-PALETTE-MONO (2), CONVERT-PALETTE-CUSTOM (3) @}"
    )
    (
      "num-cols"
      "gint"
      "The number of colors to quantize to, ignored unless (palette_type == GIMP_CONVERT_PALETTE_GENERATE)"
    )
    (
      "alpha-dither"
      "gboolean"
      "Dither transparency to fake partial opacity (TRUE or FALSE)"
    )
    (
      "remove-unused"
      "gboolean"
      "Remove unused or duplicate color entries from final palette, ignored if (palette_type == GIMP_CONVERT_PALETTE_GENERATE) (TRUE or FALSE)"
    )
    (
      "palette"
      "gchararray"
      "The name of the custom palette to use, ignored unless (palette_type == GIMP_CONVERT_PALETTE_CUSTOM)"
    )
  )
  (
  )
)
